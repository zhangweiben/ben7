<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:e931daa6-7fda-456a-badf-4cdb1c228a1a -->
<metadata name="test_introspectResources" path="/shared/ASAssets/Utilities/examples/repository/test_introspectResources" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <parameters>
    <parameter name="datasourceType" direction="IN" nullable="true">
      <datatype name="SMALLINT" type="INTEGER" minValue="-32768" maxValue="32767"/>
    </parameter>
    <parameter name="errStatus" direction="OUT" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="errMessage" direction="OUT" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="introspectionResult" direction="OUT" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="dataSourceType" direction="OUT" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="dataSourceSubtype" direction="OUT" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
    <privilege group="all" domain="composite" privileges="READ"/>
  </security>
  <dependency target="/lib/resource/ResourceDefs" type="DEFINITION_SET">
    <datatype name="Tree" type="TREE" refId="257"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/introspectResources" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="dsPath" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
      </element>
      <element name="catalogName" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="schemaNames" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="schemaTablePatterns" direction="IN">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="tableNames" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="schemaProcedurePatterns" direction="IN">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="procedureNames" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="separator" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="inDebug" direction="IN">
        <datatype type="STRING" minLength="1" maxLength="1"/>
      </element>
      <element name="errStatus" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="errMessage" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="introspectionResult" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="dataSourceType" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="dataSourceSubtype" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
    </datatype>
  </dependency>
  <attribute name="Script" type="STRING">PROCEDURE test_introspectResources(
&#x9;IN  datasourceType&#x9;&#x9;&#x9;&#x9;SMALLINT, &#x9;&#x9;-- 1=Relational, 2=CSV, 3=Excel, 4=Relational w/multiple schemas, 5=Relational w/catalog and multiple schemas, 6=Excel with multiple directory containers and multiple sheets
&#x9;OUT errStatus &#x9;&#x9;&#x9;&#x9;&#x9;VARCHAR,&#x9;&#x9;-- SUCCESS or FAILED
&#x9;OUT errMessage &#x9;&#x9;&#x9;&#x9;&#x9;LONGVARCHAR,&#x9;-- Error message if errStatus=FAILED, otherwise null
&#x9;OUT introspectionResult &#x9;&#x9;LONGVARCHAR,&#x9;-- A line (CHR(10)) delimited string of results.  Use introspectResourcesResultCursor() to  return a cursor.
&#x9;OUT dataSourceType&#x9;&#x9;&#x9;&#x9;VARCHAR,&#x9;&#x9;-- The type of data source that was introspected.
&#x9;OUT dataSourceSubtype&#x9;&#x9;&#x9;VARCHAR&#x9;&#x9;&#x9;-- The subtype of data source that was introspected.
)
BEGIN
&#x9;DECLARE  dsPath &#x9;&#x9;&#x9;&#x9;/lib/resource/ResourceDefs.ResourcePath;&#x9;-- mandatory.   Full path to datasource
&#x9;DECLARE  catalogName &#x9;&#x9;&#x9;VARCHAR;&#x9;&#x9;-- optional (null) - 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;Relational Database - database catalog Name if applicable.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;CSV - leave this null as it is not applicable
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;Excel Non-ODBC - leave this null as it is not applicable
&#x9;DECLARE  schemaNames&#x9;&#x9;&#x9;LONGVARCHAR;&#x9;-- optional (null) -  NULL=no specified schema list OR one or more comma separated schemas to introspect.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;Note: If a list of schema names are provided and a list of table names are provided the list of table names
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;  will be applied in total to each schema name.  It is not currently in scope to correlate a list of tables to a list of schemas. 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-- &#x9;&#x9;Relational Database - schema name or list of schema names.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-- &#x9;&#x9;CSV - leave this null as it is not applicable
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;Excel Non-ODBC - the excel file name or list of file names.
&#x9;DECLARE  schemaTablePatterns&#x9;VARCHAR(4096);&#x9;-- comma separated list of patterns such as D%, E%, F%.    Introspect all tables starting with D, E and F or
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;a bracketed correlated and comma-separated list of table patterns associated with each schema:
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;&#x9;schemaNames=&#x9;&#x9;SCHEMA1,SCHEMA2&#x9;- This is the list of comma-separated schemas 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;&#x9;schemaTablePatterns=[M%]   [P%]&#x9;&#x9;- The 1st set of bracketed table patterns goes with the 1st schema.  
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;- The 2nd bracketed set of table patterns goes with the 2nd schema 
&#x9;DECLARE  tableNames &#x9;&#x9;&#x9;LONGVARCHAR;&#x9;-- optional.  NULL=no specified table list OR one or more comma separated table namess to introspect or&#x9;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;a bracketed correlated and comma-separated list of table names associated with each schema:
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;&#x9;schemaNames=&#x9;SCHEMA1,SCHEMA2&#x9;- This is the list of comma-separated schemas 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;&#x9;tableNames=&#x9;&#x9;[T1,T2][T3,T4]&#x9;- The 1st set of bracketed tables goes with the 1st schema.  
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;- The 2nd bracketed set of tables goes with the 2nd schema
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;Relational Database - When NULL, all tables for the schema are introspected, otherwise the list of tables provided are introspected.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;CSV - When NULL, all CSV files are introspected, otherwise the list of files provided are introspected.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;Excel Non-ODBC - When NULL, all sheets are introspected, otherwise the list of sheets provided are introspected.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;XML Files - When NULL, all XML files are introspected, otherwise the list of files provided are introspected.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;&#x9;To introspect the definition set specify the definition set name in this format:  name(TYPE:SUBTYPE)
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;&#x9;&#x9;Example: productCatalog.xml,productCatalogDefinitions(DEFINITION_SET:XML_SCHEMA_DEFINITION_SET)
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;Table names with spaces may be use double quotes to enclose the name but it is not necessary as spaces are preserved.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-- &#x9;&#x9;Generically, any resource name type and subtype can be overridden using this format:  name(TYPE:SUBTYPE).
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;&#x9;The invoking program is required to know the valid TYPE and SUBTYPE combinations.
&#x9;DECLARE schemaProcedurePatterns VARCHAR(4096);&#x9;-- comma separated list of patterns such as D%, E%, F%.    Introspect all new procedure patterns starting with D, E and F or
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;a bracketed correlated and comma-separated list of procedure patterns associated with each schema:
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;&#x9;schemaNames=&#x9;&#x9;&#x9;SCHEMA1,SCHEMA2&#x9;- This is the list of comma-separated schemas 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;&#x9;schemaProcedurePatterns=[N%]   [O%]&#x9;&#x9;- The 1st set of bracketed procedure patterns goes with the 1st schema.  
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;- The 2nd bracketed set of procedure patterns goes with the 2nd schema 
&#x9;DECLARE  procedureNames &#x9;&#x9;LONGVARCHAR;&#x9;-- optional. NULL=no specified procedure list OR 1 or more comma separated procedure names to introspect or 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;a bracketed correlated and comma-separated list of procedure names associated with each schema:
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;&#x9;schemaNames=&#x9;SCHEMA1,SCHEMA2&#x9;- This is the list of comma-separated schemas 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;&#x9;procedureNames=&#x9;[P1][P2,P3,P4]&#x9;- The 1st set of bracketed procedures goes with the 1st schema.  
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;- The 2nd bracketed set of procedures goes with the 2nd schema
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-- &#x9;&#x9;Relational Database - When NULL, all procedures are introspected, otherwise the list of procedures provided are introspected.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-- &#x9;&#x9;CSV - leave this null as it is not applicable
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;Excel Non-ODBC - leave this null as it is not applicable
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;Procedure names with spaces may be use double quotes to enclose the name but it is not necessary as spaces are preserved.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-- &#x9;&#x9;Generically, any resource name type and subtype can be overridden using this format:  name(TYPE:SUBTYPE).
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;&#x9;The invoking program is required to know the valid TYPE and SUBTYPE combinations.
&#x9;DECLARE&#x9;separator&#x9;&#x9;&#x9;&#x9;VARCHAR;&#x9;&#x9;-- Default=,  The separator used to separate lists for the input parameters: tableNames, schemaTablePatterns, schemaProcedurePatterns and procedureNames.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;The separator value should not exist within the tableNames or procedureNames variable.
&#x9;DECLARE  debug&#x9;&#x9;&#x9;&#x9;&#x9;CHAR(1);&#x9;&#x9;-- Y=debug on, N=debug off.
&#x9;/****  
&#x9;&#x9;Apply the list of tables and/or procedures associated with each schema in the schemaNames list. 
&#x9;&#x9;The correlation of tables to schema uses the following format:
&#x9;&#x9;schemaNames=&#x9;&#x9;&#x9;SCHEMA1,SCHEMA2&#x9;&#x9;- This is the list of comma-separated schemas 
&#x9;&#x9;tableNames=&#x9;&#x9;&#x9;&#x9;[T1,T2][T3,T4,T5]&#x9;- The 1st set of bracketed table names goes with the 1st schema.  The 2nd bracketed set of table names goes with the 2nd schema
&#x9;&#x9;schemaTablePatterns=&#x9;[M%]   [P%]&#x9;&#x9;&#x9;- The 1st set of bracketed table patterns goes with the 1st schema.  The 2nd bracketed set of table patterns goes with the 2nd schema 
&#x9;&#x9;procedureNames=&#x9;&#x9;&#x9;[P1][P2,P3,P4]&#x9;&#x9;- The 1st set of bracketed procedure names goes with the 1st schema.  The 2nd bracketed set of procedure names goes with the 2nd schema
&#x9;&#x9;schemaProcedurePatterns=[N%]   [O%]&#x9;&#x9;&#x9;- The 1st set of bracketed procedure patterns goes with the 1st schema.  The 2nd bracketed set of procedure patterns goes with the 2nd schema 
&#x9;****/

&#x9;if (datasourceType = 1) then
&#x9;&#x9;SET dsPath = &apos;/shared/ASAssets/Utilities/examples/repository/source/ds_ordersCopy&apos;;
&#x9;&#x9;SET catalogName = null;
&#x9;&#x9;SET schemaNames = &apos;tutorial&apos;;
&#x9;&#x9;SET schemaTablePatterns = null;
&#x9;&#x9;SET tableNames = null;
&#x9;&#x9;SET schemaProcedurePatterns = null;
&#x9;&#x9;SET procedureNames = null;
&#x9;&#x9;SET separator = &apos;,&apos;;
&#x9;&#x9;SET debug = &apos;Y&apos;;
&#x9;end if;

&#x9;if (datasourceType = 2) then
&#x9;&#x9;SET dsPath = &apos;/shared/ASAssets/Utilities/examples/repository/source/ds_ordersCopy&apos;;
&#x9;&#x9;SET catalogName = null;
&#x9;&#x9;SET schemaNames = &apos;tutorial&apos;;
&#x9;&#x9;SET schemaTablePatterns = null;
&#x9;&#x9;SET tableNames = &apos;cache_status,cache_tracking,customers,employees,orderdetails,orders,orders_cache,shippingmethods&apos;;
&#x9;&#x9;SET schemaProcedurePatterns = null;
&#x9;&#x9;SET procedureNames = null;
&#x9;&#x9;SET separator = &apos;,&apos;;
&#x9;&#x9;SET debug = &apos;Y&apos;;
&#x9;end if;

&#x9;if (datasourceType = 3) then
&#x9;&#x9;SET dsPath = &apos;/shared/ASAssets/Utilities/examples/repository/source/ds_ordersCopy&apos;;
&#x9;&#x9;SET catalogName = null;
&#x9;&#x9;SET schemaNames = &apos;tutorial,public&apos;;
&#x9;&#x9;SET schemaTablePatterns = null;
&#x9;&#x9;SET tableNames = &apos;[cache_status,cache_tracking,test0,test1,test2][]&apos;;
&#x9;&#x9;SET schemaProcedurePatterns = null;
&#x9;&#x9;SET procedureNames = &apos;[][set_limit,show_limit]&apos;;
&#x9;&#x9;SET separator = &apos;,&apos;;
&#x9;&#x9;SET debug = &apos;Y&apos;;
&#x9;end if;

&#x9;if (datasourceType = 4) then
&#x9;&#x9;SET dsPath = &apos;/shared/ASAssets/Utilities/examples/repository/source/ds_ordersCopy&apos;;
&#x9;&#x9;SET catalogName = null;
&#x9;&#x9;SET schemaNames = &apos;tutorial&apos;;
&#x9;&#x9;SET schemaTablePatterns = &apos;c%&apos;;
&#x9;&#x9;SET tableNames = null;
&#x9;&#x9;SET schemaProcedurePatterns = null;
&#x9;&#x9;SET procedureNames = null;
&#x9;&#x9;SET separator = &apos;,&apos;;
&#x9;&#x9;SET debug = &apos;Y&apos;;
&#x9;end if;

&#x9;if (datasourceType = 5) then
&#x9;&#x9;SET dsPath = &apos;/shared/ASAssets/Utilities/examples/repository/source/ds_XMLCopy&apos;;
&#x9;&#x9;SET catalogName = null;
&#x9;&#x9;SET schemaNames = null;
&#x9;&#x9;SET schemaTablePatterns = null;
&#x9;&#x9;SET tableNames = &apos;productCatalog.xml,productCatalogDefinitions(DEFINITION_SET:XML_SCHEMA_DEFINITION_SET)&apos;;
&#x9;&#x9;SET schemaProcedurePatterns = null;
&#x9;&#x9;SET procedureNames = null;
&#x9;&#x9;SET separator = &apos;,&apos;;
&#x9;&#x9;SET debug = &apos;Y&apos;;
&#x9;end if;


&#x9;CALL /shared/ASAssets/Utilities/repository/introspectResources(
&#x9;&#x9;dsPath,
&#x9;&#x9;catalogName,
&#x9;&#x9;schemaNames,
&#x9;&#x9;schemaTablePatterns,
&#x9;&#x9;tableNames,
&#x9;&#x9;schemaProcedurePatterns,
&#x9;&#x9;procedureNames,
&#x9;&#x9;separator,
&#x9;&#x9;debug,
&#x9;&#x9;errStatus,&#x9;&#x9;&#x9;&#x9;-- SUCCESS or FAILED
&#x9;&#x9;errMessage,&#x9;&#x9;&#x9;&#x9;-- Error message if errStatus=FAILED, otherwise null
&#x9;&#x9;introspectionResult,&#x9;-- A line (CHR(10)) delimited string of results.  Use introspectResourcesResultCursor() to  return a cursor.
&#x9;&#x9;dataSourceType,&#x9;&#x9;&#x9;-- The type of data source that was introspected.
&#x9;&#x9;dataSourceSubtype&#x9;&#x9;-- The subtype of data source that was introspected.
&#x9;);
&#x9;&#x9;
END</attribute>
  <attribute name="creationDate" type="LONG">1515856924639</attribute>
  <attribute name="creatorUserDomain" type="STRING">composite</attribute>
  <attribute name="creatorUserId" type="INTEGER">-1973</attribute>
  <attribute name="creatorUserName" type="STRING">admin</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1557779114742</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserId" type="INTEGER">-1973</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="NULL"/>
  <attribute name="resourceModifiedDateOnSourceCISSite" type="LONG">1515856924639</attribute>
</metadata>