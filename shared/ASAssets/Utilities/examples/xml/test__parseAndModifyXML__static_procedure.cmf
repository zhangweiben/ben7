<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:9a66723c-3693-47f1-a1f0-d7811996f9d5 -->
<metadata name="test_parseAndModifyXML_static" path="/shared/ASAssets/Utilities/examples/xml/test_parseAndModifyXML_static" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation>&lt;![CDATA[parseAndModifyXML:
&#x9;Parse and XML document given a vector of XPath statements and modify the values and reconstruct the XML.
 &#x9;IMPORTANT:  When updating an element with a list of attributes, you must supply all of the original
&#x9;attributes in order to retain what you had.  This routine overwrites the original element so be careful.

&#x9;Input:
&#x9;&#x9;debug - defines the debugging options for this procedure.  
&#x9;&#x9;&#x9;Values: Y = debugging turned on, N = debugging turned off
&#x9;&#x9;namespaces - any string with the valid namespaces for the incoming XML  
&#x9;&#x9;&#x9;Values: e.g. xmlns:sam=&quot;http://www.compositesw.com/samples/mynamespace/v1.0&quot;
&#x9;&#x9;ElemAttrXML - contains a list of qualified elements, qualified attributes and the value to change in this format:
&#x9;&#x9;&#x9;SET ElemAttrXML = 
&#x9;&#x9;&#x9;&#x9;-- Repeat the section &lt;qualElemAttr&gt; for as many as are required.
&#x9;&#x9;&#x9;&#x9;&apos;&lt;qualElemAttr&gt;&lt;qualElem&gt;&lt;/qualElem&gt;&lt;qualAttr&gt;&lt;/qualAttr&gt;&lt;value&gt;&lt;/value&gt;&lt;/qualElemAttr&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&#x9;&apos;&lt;qualElemAttr&gt;&lt;qualElem&gt;&lt;/qualElem&gt;&lt;qualAttr&gt;&lt;/qualAttr&gt;&lt;value&gt;&lt;/value&gt;&lt;/qualElemAttr&gt;&apos;||CHR(10);

&#x9;&#x9;&#x9;It may be necessary to read the orginal values for each attribute to construct this list on the fly
&#x9;&#x9;&#x9;if you want to retain certain values.  Then modify only the attributes that you want to change.
&#x9;&#x9;&#x9;Values: ElemAttrXML e.g. 
&#x9;&#x9;&#x9;&#x9;&lt;qualElemAttr&gt;&#x9;&lt;qualElem&gt;sam:Name&lt;/qualElem&gt;&#x9;&lt;qualAttr&gt;sam:isbn&lt;/qualAttr&gt;&#x9;&#x9;&lt;value&gt;00-0000-000&lt;/value&gt;&#x9;&lt;/qualElemAttr&gt;
&#x9;&#x9;&#x9;&#x9;&lt;qualElemAttr&gt;&#x9;&lt;qualElem&gt;sam:Name&lt;/qualElem&gt;&#x9;&lt;qualAttr&gt;&lt;/qualAttr&gt;&#x9;&#x9;&#x9;&#x9;&lt;value&gt;The Book&lt;/value&gt;&#x9;&#x9;&lt;/qualElemAttr&gt;
&#x9;&#x9;&#x9;&#x9;&lt;qualElemAttr&gt;&#x9;&lt;qualElem&gt;Chapter&lt;/qualElem&gt;&#x9;&lt;qualAttr&gt;&lt;/qualAttr&gt;&#x9;&#x9;&#x9;&#x9;&lt;value&gt;Chapter 1&lt;/value&gt;&#x9;&lt;/qualElemAttr&gt;
&#x9;&#x9;&#x9;&#x9;&lt;qualElemAttr&gt;&#x9;&lt;qualElem&gt;Paragraph&lt;/qualElem&gt;&#x9;&lt;qualAttr&gt;&lt;/qualAttr&gt;&#x9;&#x9;&#x9;&#x9;&lt;value&gt;&lt;/value&gt;&#x9;&#x9;&#x9;&#x9;&lt;/qualElemAttr&gt;
&#x9;&#x9;&#x9;&#x9;&lt;qualElemAttr&gt;&#x9;&lt;qualElem&gt;sam:Author&lt;/qualElem&gt;&#x9;&lt;qualAttr&gt;sam:firstname&lt;/qualAttr&gt;&#x9;&lt;value&gt;Joe&lt;/value&gt;&#x9;&#x9;&#x9;&lt;/qualElemAttr&gt;
&#x9;&#x9;&#x9;&#x9;&lt;qualElemAttr&gt;&#x9;&lt;qualElem&gt;sam:Author&lt;/qualElem&gt;&#x9;&lt;qualAttr&gt;sam:lastname&lt;/qualAttr&gt;&#x9;&lt;value&gt;Author&lt;/value&gt;&#x9;&#x9;&lt;/qualElemAttr&gt;
&#x9;&#x9;&#x9;&#x9;&lt;qualElemAttr&gt;&#x9;&lt;qualElem&gt;sam:Author&lt;/qualElem&gt;&#x9;&lt;qualAttr&gt;&lt;/qualAttr&gt;&#x9;&#x9;&#x9;&#x9;&lt;value&gt;&lt;/value&gt;&#x9;&#x9;&#x9;&#x9;&lt;/qualElemAttr&gt;
&#x9;&#x9;inXml - any XML document
&#x9;&#x9;&#x9;Values: e.g. &lt;Book xmlns:sam=&quot;http://www.compositesw.com/samples/mynamespace/v1.0&quot;&gt;
&#x9;&#x9;&#x9;&#x9;&#x9;&lt;sam:Name sam:isbn=&quot;12-3456-123&quot;/&gt;
&#x9;&#x9;&#x9;&#x9;&#x9;&lt;Chapter&gt;Test Data&lt;/Chapter&gt;
&#x9;&#x9;&#x9;&#x9;     &lt;/Book&gt;
&#x9;Output:
&#x9;&#x9;outXml - modified XML
&#x9;&#x9;&#x9;Values: e.g. &lt;Book xmlns:sam=&quot;http://www.compositesw.com/samples/mynamespace/v1.0&quot;&gt; &#x9;
&#x9;&#x9;&#x9;&#x9;&#x9;&lt;sam:Name sam:isbn=&quot;00-0000-000&quot;/&gt; &#x9;
&#x9;&#x9;&#x9;&#x9;&#x9;&lt;Chapter&gt;Test Data&lt;/Chapter&gt;
&#x9;&#x9;&#x9;&#x9;     &lt;/Book&gt;
&#x9;Exceptions:  none

&#x9;Modified Date:&#x9;Modified By:&#x9;&#x9;CSW Version:&#x9;Reason:
&#x9;01/18/2011&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;5.2.0&#x9;&#x9;&#x9;Created new.
&#x9;05/21/2019&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.8&#x9;&#x9;&#x9;New parseAndModifyXMLV2 derived from parseAndModifyXML to remove vector input.

&#x9;(c) 2017 TIBCO Software Inc. All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.]]&gt;</annotation>
  <parameters>
    <parameter name="outXml" direction="OUT" nullable="true">
      <datatype name="XML" referenceType="XML" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="TYPE" componentName="XML">
        <schemaDatatype>
          <datatype name="XML" type="TREE" refId="257"></datatype>
        </schemaDatatype>
      </datatype>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
    <privilege group="all" domain="composite" privileges="READ"/>
  </security>
  <dependency target="/lib/debug/Print" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="textToPrint" direction="IN">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="Text" type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/lib/util/Pause" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="timeInMilliSeconds" direction="IN">
        <datatype type="INTEGER"/>
      </element>
    </datatype>
  </dependency>
  <attribute name="Script" type="STRING">/* 
&#x9;parseAndModifyXML:

&#x9;Parse and XML document given a vector of XPath statements and modify the values and reconstruct the XML.
 &#x9;IMPORTANT:  When updating an element with a list of attributes, you must supply all of the original
&#x9;attributes in order to retain what you had.  This routine overwrites the original element so be careful.

&#x9;Input:
&#x9;&#x9;debug - defines the debugging options for this procedure.  
&#x9;&#x9;&#x9;Values: Y = debugging turned on, N = debugging turned off
&#x9;&#x9;namespaces - any string with the valid namespaces for the incoming XML  
&#x9;&#x9;&#x9;Values: e.g. xmlns:sam=&quot;http://www.compositesw.com/samples/mynamespace/v1.0&quot;
&#x9;&#x9;ElemAttrXML - contains a list of qualified elements, qualified attributes and the value to change in this format:
&#x9;&#x9;&#x9;SET ElemAttrXML = 
&#x9;&#x9;&#x9;&#x9;-- Repeat the section &lt;qualElemAttr&gt; for as many as are required.
&#x9;&#x9;&#x9;&#x9;&apos;&lt;qualElemAttr&gt;&lt;qualElem&gt;&lt;/qualElem&gt;&lt;qualAttr&gt;&lt;/qualAttr&gt;&lt;value&gt;&lt;/value&gt;&lt;/qualElemAttr&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&#x9;&apos;&lt;qualElemAttr&gt;&lt;qualElem&gt;&lt;/qualElem&gt;&lt;qualAttr&gt;&lt;/qualAttr&gt;&lt;value&gt;&lt;/value&gt;&lt;/qualElemAttr&gt;&apos;||CHR(10);

&#x9;&#x9;&#x9;It may be necessary to read the orginal values for each attribute to construct this list on the fly
&#x9;&#x9;&#x9;if you want to retain certain values.  Then modify only the attributes that you want to change.
&#x9;&#x9;&#x9;Values: ElemAttrXML e.g. 
&#x9;&#x9;&#x9;&#x9;&lt;qualElemAttr&gt;&#x9;&lt;qualElem&gt;sam:Name&lt;/qualElem&gt;&#x9;&lt;qualAttr&gt;sam:isbn&lt;/qualAttr&gt;&#x9;&#x9;&lt;value&gt;00-0000-000&lt;/value&gt;&#x9;&lt;/qualElemAttr&gt;
&#x9;&#x9;&#x9;&#x9;&lt;qualElemAttr&gt;&#x9;&lt;qualElem&gt;sam:Name&lt;/qualElem&gt;&#x9;&lt;qualAttr&gt;&lt;/qualAttr&gt;&#x9;&#x9;&#x9;&#x9;&lt;value&gt;The Book&lt;/value&gt;&#x9;&#x9;&lt;/qualElemAttr&gt;
&#x9;&#x9;&#x9;&#x9;&lt;qualElemAttr&gt;&#x9;&lt;qualElem&gt;Chapter&lt;/qualElem&gt;&#x9;&lt;qualAttr&gt;&lt;/qualAttr&gt;&#x9;&#x9;&#x9;&#x9;&lt;value&gt;Chapter 1&lt;/value&gt;&#x9;&lt;/qualElemAttr&gt;
&#x9;&#x9;&#x9;&#x9;&lt;qualElemAttr&gt;&#x9;&lt;qualElem&gt;Paragraph&lt;/qualElem&gt;&#x9;&lt;qualAttr&gt;&lt;/qualAttr&gt;&#x9;&#x9;&#x9;&#x9;&lt;value&gt;&lt;/value&gt;&#x9;&#x9;&#x9;&#x9;&lt;/qualElemAttr&gt;
&#x9;&#x9;&#x9;&#x9;&lt;qualElemAttr&gt;&#x9;&lt;qualElem&gt;sam:Author&lt;/qualElem&gt;&#x9;&lt;qualAttr&gt;sam:firstname&lt;/qualAttr&gt;&#x9;&lt;value&gt;Joe&lt;/value&gt;&#x9;&#x9;&#x9;&lt;/qualElemAttr&gt;
&#x9;&#x9;&#x9;&#x9;&lt;qualElemAttr&gt;&#x9;&lt;qualElem&gt;sam:Author&lt;/qualElem&gt;&#x9;&lt;qualAttr&gt;sam:lastname&lt;/qualAttr&gt;&#x9;&lt;value&gt;Author&lt;/value&gt;&#x9;&#x9;&lt;/qualElemAttr&gt;
&#x9;&#x9;&#x9;&#x9;&lt;qualElemAttr&gt;&#x9;&lt;qualElem&gt;sam:Author&lt;/qualElem&gt;&#x9;&lt;qualAttr&gt;&lt;/qualAttr&gt;&#x9;&#x9;&#x9;&#x9;&lt;value&gt;&lt;/value&gt;&#x9;&#x9;&#x9;&#x9;&lt;/qualElemAttr&gt;
&#x9;&#x9;inXml - any XML document
&#x9;&#x9;&#x9;Values: e.g. &lt;Book xmlns:sam=&quot;http://www.compositesw.com/samples/mynamespace/v1.0&quot;&gt;
&#x9;&#x9;&#x9;&#x9;&#x9;&lt;sam:Name sam:isbn=&quot;12-3456-123&quot;/&gt;
&#x9;&#x9;&#x9;&#x9;&#x9;&lt;Chapter&gt;Test Data&lt;/Chapter&gt;
&#x9;&#x9;&#x9;&#x9;     &lt;/Book&gt;
&#x9;Output:
&#x9;&#x9;outXml - modified XML
&#x9;&#x9;&#x9;Values: e.g. &lt;Book xmlns:sam=&quot;http://www.compositesw.com/samples/mynamespace/v1.0&quot;&gt; &#x9;
&#x9;&#x9;&#x9;&#x9;&#x9;&lt;sam:Name sam:isbn=&quot;00-0000-000&quot;/&gt; &#x9;
&#x9;&#x9;&#x9;&#x9;&#x9;&lt;Chapter&gt;Test Data&lt;/Chapter&gt;
&#x9;&#x9;&#x9;&#x9;     &lt;/Book&gt;
&#x9;Exceptions:  none

&#x9;Release:&#x9;Modified Date:&#x9;Modified By:&#x9;&#x9;DV Version:&#x9;&#x9;Reason:
&#x9;2011.2&#x9;&#x9;01/18/2011&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;5.2.0&#x9;&#x9;&#x9;Created new.
&#x9;2019.200&#x9;05/21/2019&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.8&#x9;&#x9;&#x9;New parseAndModifyXMLV2 derived from parseAndModifyXML to remove vector input.

&#x9;(c) 2017 TIBCO Software Inc. All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.

*/
PROCEDURE test_parseAndModifyXML_static(
&#x9;OUT outXml&#x9;&#x9;XML
&#x9;)
BEGIN
&#x9;declare inXml&#x9;&#x9;LONGVARCHAR;
&#x9;declare debug &#x9;&#x9;char(1) default &apos;Y&apos;;
&#x9;DECLARE moduleName&#x9;VARCHAR DEFAULT &apos;parseAndModifyXML()&apos;;
&#x9;DECLARE xsltExpr&#x9;LONGVARCHAR;

set inXml=
&apos;&lt;Book xmlns:sam=&quot;http://www.compositesw.com/samples/mynamespace/v1.0&quot;&gt;
    &lt;sam:Name sam:isbn=&quot;12-3456-123&quot;/&gt;
    &lt;Chapter&gt;Test Data&lt;/Chapter&gt;
    &lt;Paragraph&gt;This is the first sentence in the paragraph&lt;/Paragraph&gt;
    &lt;sam:Author sam:firstname=&quot;Joe&quot; sam:lastname=&quot;Author&quot;&gt;Author Biography&lt;/sam:Author&gt;
&lt;/Book&gt;
&apos;;
set xsltExpr=
&apos;&lt;xslt:stylesheet version=&quot;1.0&quot;
    xmlns:xslt=&quot;http://www.w3.org/1999/XSL/Transform&quot;
    xmlns:csw-xform=&quot;http://www.compositesw.com/2003/xform&quot;
    xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; 
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
    xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot;
    xmlns:sam=&quot;http://www.compositesw.com/samples/mynamespace/v1.0&quot;&gt;

  &lt;xslt:output method=&quot;xml&quot; version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; indent=&quot;yes&quot; /&gt;
    
  &lt;xslt:template match=&quot;node()&quot;&gt;
    &lt;xslt:copy&gt;
    &lt;xslt:apply-templates select=&quot;@*|node()&quot;/&gt;
    &lt;/xslt:copy&gt;
  &lt;/xslt:template&gt;

&lt;xslt:template match=&quot;sam:Name&quot;&gt;
  &lt;xslt:element name=&quot;{name()}&quot;&gt;&lt;xslt:attribute name=&quot;sam:isbn&quot;&gt;00-0000-000&lt;/xslt:attribute&gt;The Book&lt;/xslt:element&gt;
&lt;/xslt:template&gt;

&lt;xslt:template match=&quot;Chapter&quot;&gt;
  &lt;xslt:element name=&quot;{name()}&quot;&gt;Chapter 1&lt;/xslt:element&gt;
&lt;/xslt:template&gt;

&lt;xslt:template match=&quot;Paragraph&quot;&gt;
  &lt;xslt:element name=&quot;{name()}&quot;&gt;
    &lt;xslt:attribute name=&quot;xsi:nil&quot;&gt;true&lt;/xslt:attribute&gt;
  &lt;/xslt:element&gt;
&lt;/xslt:template&gt;

&lt;xslt:template match=&quot;sam:Author&quot;&gt;
  &lt;xslt:element name=&quot;{name()}&quot;&gt;
    &lt;xslt:attribute name=&quot;sam:firstname&quot;&gt;Jim&lt;/xslt:attribute&gt;
    &lt;xslt:attribute name=&quot;sam:lastname&quot;&gt;Anderson&lt;/xslt:attribute&gt;
    &lt;xslt:attribute name=&quot;xsi:nil&quot;&gt;true&lt;/xslt:attribute&gt;
  &lt;/xslt:element&gt;
&lt;/xslt:template&gt;

  &lt;xslt:template match=&quot;@*|text()|comment()&quot;&gt;
    &lt;xslt:copy&gt;
      &lt;xslt:apply-templates select=&quot;@*|node()&quot;/&gt;
    &lt;/xslt:copy&gt;
  &lt;/xslt:template&gt;

&lt;/xslt:stylesheet&gt;&apos;;

&#x9;call print(&apos;inXml=&apos;||cast(inXml as longvarchar));
&#x9;call print(&apos;XSLT=&apos;|| xsltExpr);&#x9;
&#x9;call pause(500);

&#x9;-- Execute the XSLT against the incoming XML (KO/SDR) format
&#x9;SET outXml = XSLT( CAST(inXml AS XML), xsltExpr );

/* Sample output:
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;Book xmlns:sam=&quot;http://www.compositesw.com/samples/mynamespace/v1.0&quot;&gt;
  &lt;sam:Name sam:isbn=&quot;00-0000-000&quot;&gt;The Book&lt;/sam:Name&gt;
  &lt;Chapter&gt;Chapter 1&lt;/Chapter&gt;
  &lt;Paragraph xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:nil=&quot;true&quot;/&gt;
  &lt;sam:Author xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; sam:firstname=&quot;Jim&quot; sam:lastname=&quot;Anderson&quot; xsi:nil=&quot;true&quot;/&gt;
&lt;/Book&gt;
*/
END</attribute>
  <attribute name="creationDate" type="LONG">0</attribute>
  <attribute name="creatorUserDomain" type="STRING"/>
  <attribute name="creatorUserName" type="STRING"/>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1564752539985</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="MAP">
    <item>
      <key type="STRING">7/128</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">7/127</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">7/129</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>util</item>
        <item>Pause</item>
      </value>
    </item>
  </attribute>
</metadata>