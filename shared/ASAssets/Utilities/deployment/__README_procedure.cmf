<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:9a66723c-3693-47f1-a1f0-d7811996f9d5 -->
<metadata name="_README" path="/shared/ASAssets/Utilities/deployment/_README" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <parameters></parameters>
  <security>
    <owner user="admin" domain="composite"/>
    <privilege group="all" domain="composite" privileges="READ"/>
  </security>
  <attribute name="Script" type="STRING">/*
----------------------------------------------------------
INSTRUCTIONS:
----------------------------------------------------------
&#x9;1. Copy the &quot;deployment&quot; folder from the Utilities zip file to all target DV servers.
&#x9;&#x9;Use a consistent folder path on each server.  
&#x9;&#x9;For setup see the section &quot;INSTRUCTIONS FOR SCRIPT SETUP&quot; below to modify paths and ports.
&#x9;2. Review section I. regarding exporting resource ownership and privileges files.
&#x9;3. Review section II. regarding generating an options file for each target deployment server.
&#x9;4. Review section III. regarding customizing &quot;runAfterImport&quot;.
&#x9;5. Review section IV. regarding deployment scripts and how to use them.

----------------------------------------------------------
Deployment Considerations
----------------------------------------------------------
&#x9;The deployment folder is broken down into different subject areas that are all related to different deployment considerations.
&#x9;The list below describes the topics that are covered in this _README.
&#x9;&#x9;I.   Managing Privileges and Resource Ownership using the runPrivilegeExport templates.
&#x9;&#x9;II.  Generating Options file for data source connections
&#x9;&#x9;III. Customizing the &quot;runAfterImport&quot; procedure template for deployment.
&#x9;&#x9;IV.  Deployment scripts.

&#x9;=============================
&#x9;Deployment Folder Structure
&#x9;=============================
&#x9;This can be either windows or UNIX.  This structure must be copied to the DV target 
&#x9;&#x9;server from the Utilities zip file.

&#x9;The recommended structure is shown below:
&#x9;&#x9;/deployment&#x9;&#x9;&#x9;- Base folder which is to be copied from the Utilities zip file
&#x9;&#x9;&#x9;/carfiles&#x9;&#x9;- A folder in which to place car files for deployment.
&#x9;&#x9;&#x9;/fullbackup&#x9;&#x9;- A location for the deployProject.[bat|sh] to place the full server backup .car file
&#x9;&#x9;&#x9;/option_files&#x9;- A location to place option files.
&#x9;&#x9;&#x9;/privileges&#x9;&#x9;- A location to write the privileges.xml file and resource_ownership.txt files.
&#x9;&#x9;&#x9;/scripts&#x9;&#x9;- The location for the various scripts:
&#x9;&#x9;&#x9;&#x9;/deployPrivs.[bat|sh]&#x9;- Deploy resource ownership and privileges only.
&#x9;&#x9;&#x9;&#x9;/deployProject.[bat|sh] - Deploy a project .car file.
&#x9;&#x9;&#x9;&#x9;/convertPkgFileV11_to_V10.[bat|sh] - Convert a package format from V11 (8.x) to V10 (7.x).
&#x9;&#x9;&#x9;&#x9;/JdbcSample.[bat|sh]&#x9;- Provides the ability to execute custom procedures on the DV server.
&#x9;&#x9;&#x9;&#x9;/JdbcSample.class&#x9;&#x9;- The required class file for JdbcSample.[bat|sh]
&#x9;&#x9;&#x9;&#x9;/JdbcSample.java&#x9;&#x9;- The original source code for JdbcSample.class

&#x9;=============================
&#x9;INSTRUCTIONS FOR SCRIPT SETUP
&#x9;=============================
&#x9;1. Modify variables for deployProject.[bat|sh] depending on your environment.

&#x9;&#x9;deployProject.bat
&#x9;&#x9;------------------------------
&#x9;&#x9;set DV_HOME=C:\MySW\TDV7.0.8
&#x9;&#x9;set PRIVSFILE=C:\MySW\TDV_Scripts\7 0\deployment\privileges\privileges.xml
&#x9;&#x9;set RESOWNERFILE=C:\MySW\TDV_Scripts\7 0\deployment\privileges\resource_ownership.txt
&#x9;&#x9;set FULLBACKUPPATH=C:\MySW\TDV_Scripts\7 0\deployment\fullbackup
&#x9;&#x9;set WSPORT=9400
&#x9;&#x9;set DBPORT=9401

&#x9;&#x9;deployProject.sh
&#x9;&#x9;------------------------------
&#x9;&#x9;get_DV_HOME()       { echo &quot;/Users/mtinius@tibco.com/Downloads/TDV7.0.8&quot;; }
&#x9;&#x9;get_PRIVSFILE()     { echo &quot;C:/MySW/TDV_Scripts/7 0/deployment/privileges/privileges.xml&quot;; }
&#x9;&#x9;get_RESOWNERFILE()  { echo &quot;C:/MySW/TDV_Scripts/7 0/deployment/privileges/resource_ownership.txt&quot;; }
&#x9;&#x9;get_FULLBACKUPPATH(){ echo &quot;/Users/mtinius@tibco.com/Downloads/TDV_Scripts/7.0/deployment/fullbackup&quot;; }
&#x9;&#x9;get_WSPORT()        { echo &quot;9400&quot;; }
&#x9;&#x9;get_DBPORT()        { echo &quot;9401&quot;; }

&#x9;2. Modify variables for deployPrivs.[bat|sh] depending on your environment.

&#x9;&#x9;deployPrivs.bat
&#x9;&#x9;------------------------------
&#x9;&#x9;set DV_HOME=C:\MySW\TDV7.0.8
&#x9;&#x9;set PRIVSFILE=C:\MySW\TDV_Scripts\7 0\deployment\privileges\privileges.xml
&#x9;&#x9;set RESOWNERFILE=C:\MySW\TDV_Scripts\7 0\deployment\privileges\resource_ownership.txt
&#x9;&#x9;set DBPORT=9401

&#x9;&#x9;deployPrivs.sh
&#x9;&#x9;------------------------------
&#x9;&#x9;get_DV_HOME()       { echo &quot;/Users/mtinius@tibco.com/Downloads/TDV7.0.8&quot;; }
&#x9;&#x9;get_PRIVSFILE()     { echo &quot;C:/MySW/TDV_Scripts/7 0/deployment/privileges/privileges.xml&quot;; }
&#x9;&#x9;get_RESOWNERFILE()  { echo &quot;C:/MySW/TDV_Scripts/7 0/deployment/privileges/resource_ownership.txt&quot;; }
&#x9;&#x9;get_DBPORT()        { echo &quot;9401&quot;; }


&#x9;3. Modify variables for JdbcSample.[bat|sh] depending on your environment.

&#x9;&#x9;JdbcSample.bat
&#x9;&#x9;------------------------------
&#x9;&#x9;SET DV_HOME=C:\MySW\TDV7.0.8

&#x9;&#x9;JdbcSample.sh
&#x9;&#x9;------------------------------
&#x9;&#x9;DV_HOME=&quot;/MySW/TDV7.0.8&quot;


----------------------------------------------------------
I.   Managing Privileges and Resource Ownership
----------------------------------------------------------
&#x9;=============================
&#x9;Exporting Privileges
&#x9;=============================
&#x9;The following procedures serve as templates to export privileges to the privileges.xml file and resource ownership to the resource_ownership.txt file:
&#x9;&#x9;DEV:&#x9;/shared/ASAssets/Utilities/deployment/privileges/templates/runPrivilegeExport_1_DEV_template
&#x9;&#x9;TEST:&#x9;/shared/ASAssets/Utilities/deployment/privileges/templates/runPrivilegeExport_2_TEST_template
&#x9;&#x9;PROD:&#x9;/shared/ASAssets/Utilities/deployment/privileges/templates/runPrivilegeExport_3_PROD_template

&#x9;The concept behind this is simple.  
&#x9;&#x9;1. The templates are used to take the &quot;AS-IS&quot; snapshot of privileges for the given folder paths listed in the template 
&#x9;&#x9;&#x9;&#x9;at the time of execution and write them out to a file [privileges.xml].
&#x9;&#x9;2. It is very important that the folder privileges for each folder listed be set exactly as they should be set 
&#x9;&#x9;&#x9;&#x9;before exporting the privilege snapshot to the privileges.xml file.
&#x9;&#x9;3. Subsequently, the privilege can be re-applied from the snapshot [privileges.xml] using importResourcePrivileges.
&#x9;&#x9;&#x9;&#x9;They can be applied from Studio by executing &quot;/shared/ASAssets/Utilities/deployment/privileges/importResourceOwnership&quot; or
&#x9;&#x9;&#x9;&#x9;they can be applied from the UNIX command line using deployPrivs.sh.  A copy of this script can be found in its entirety
&#x9;&#x9;&#x9;&#x9;at the bottom of this procedure.
&#x9;&#x9;4. For deployment, it is recommended to invoke the published importResourcePrivileges after importing the car file.
&#x9;&#x9;&#x9;&#x9;This is typically done from the UNIX deployment shell script [deployProject.sh] which is provided in its 
&#x9;&#x9;&#x9;&#x9;entirety at the bottom of this procedure.
&#x9;&#x9;&#x9;&#x9;DataSource=ASAssets&#x9;&#x9;Procedure: Utilities.deployment.importResourcePrivileges
&#x9;&#x9;&#x9;&#x9;SQL: &quot;SELECT * FROM Utilities.deployment.importResourcePrivileges(1, 0, 0, &apos;$PRIVSFILE&apos;, &apos;SET_EXACTLY&apos;)&quot;

&#x9;The objective of the template procedure is to allow the DV development team to maintain the privileges.xml and resource_ownership.txt files.
&#x9;&#x9;1. For maintaining privileges (privileges.xml):
&#x9;&#x9;&#x9;The rows (resource locations and types) need to be maintained in this procedure.  
&#x9;&#x9;&#x9;If a resource is added, then the path and type need to be added to this procedure.
&#x9;&#x9;&#x9;If a resource is removed, then the path and type need to be removed from this procedure.
&#x9;&#x9;&#x9;If a change is made, to a resource in a one of the environments during deployment, then this procedure needs to be modified and 
&#x9;&#x9;&#x9;&#x9;executed prior to deployment so that the privileges.xml file are updated and ready during deployment.
&#x9;&#x9;2. For maintaining resource ownership (resource_ownership.txt)
&#x9;&#x9;&#x9;The row definition in the runPrivilegeExport_[DEV|TEST|PROD] procedure explicitly defines what the ownership
&#x9;&#x9;&#x9;&#x9;should be for each resource path.  For DEV, the ownership:domain is always null:null because it is not
&#x9;&#x9;&#x9;&#x9;reccommended to change ownership of resources in the development environment. 

&#x9;&#x9;runPrivilegeExport Row Definition:
&#x9;&#x9;&#x9;owner: &#x9;&#x9;&#x9;What the resource ownership should be set to.  If null then no resource owner is set and the path is bypassed.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Ownership is explicitly declared here.  It is not determined by how the resourcePath is currently set.
&#x9;&#x9;&#x9;domain: &#x9;&#x9;The domain of the owner.  Ignored if owner is null.  Required if owner is not null.
&#x9;&#x9;&#x9;resourcePath:&#x9;The path from which to read (derive) the privileges for the given DV environment.
&#x9;&#x9;&#x9;resourceType:&#x9;The resource type for the given resourcePath.  i.e. CONTAINER, DATA_SOURCE.
&#x9;&#x9;Row Format:&#x9;&#x9;&#x9;&apos;owner:domain:resourcePath:resourceType,&apos;

&#x9;=============================
&#x9;Importing (Apply) Privileges
&#x9;=============================
&#x9;Privileges are applied after deploying the CAR file.
&#x9;All privileges for all resources in the privileges.xml file are applied using the following procedure:
&#x9;&#x9;/services/databases/ASAssets/Utilities/importResourcePrivileges &gt;-----------------|
&#x9;&#x9;/shared/ASAssets/Utilities/deployment/privileges/importResourcePrivileges &lt;-------|

----------------------------------------------------------
II.  Generating Options file for data source connections
----------------------------------------------------------
&#x9;=============================
&#x9;Generate Options File
&#x9;=============================
&#x9;The procedure &quot;/shared/ASAssets/Utilities/deployment/optionsfile/generateOptionsFile&quot; is used to generate an options file on the TDV server.  
&#x9;The procedure invokes generateOptions.  If a file already exists, it adds an _copy# to the end of the file name. 
&#x9;You don&apos;t want to accidently overwrite the real file which contains the valid passwords.  Once the copy is generated, 
&#x9;it needs to be updated with the correct passwords.  Look for CHANGE_PASSWORD text within the file.
&#x9;If the file path is left null or blank, the file options are simply returned in the output variable.

&#x9;The option file may have blank lines and comments starting with a # in the first character of the line.

&#x9;=============================
&#x9;Sample Options File
&#x9;=============================
&#x9;&#x9;-set /shared/test_import/&quot;source&quot;/Advisory DATA_SOURCE path &quot;C:\MyFiles\datafiles&quot;
&#x9;&#x9;-set /shared/test_import/&quot;source&quot;/ds_XML DATA_SOURCE raw:url file:///C:\MySW\TDV7.0.8\docs\examples/productCatalog.xml
&#x9;&#x9;-set /shared/test_import/&quot;source&quot;/ds_XMLCopy DATA_SOURCE raw:url file:///C:\MySW\TDV7.0.8\docs\examples/productCatalog.xml
&#x9;&#x9;-set /shared/test_import/&quot;source&quot;/ds_inventory DATA_SOURCE database inventory
&#x9;&#x9;-set /shared/test_import/&quot;source&quot;/ds_inventory DATA_SOURCE host localhost
&#x9;&#x9;-set /shared/test_import/&quot;source&quot;/ds_inventory DATA_SOURCE password tutorial
&#x9;&#x9;-set /shared/test_import/&quot;source&quot;/ds_inventory DATA_SOURCE port 9408
&#x9;&#x9;-set /shared/test_import/&quot;source&quot;/ds_inventory DATA_SOURCE user tutorial
&#x9;&#x9;-set /shared/test_import/&quot;source&quot;/ds_orders DATA_SOURCE database orders
&#x9;&#x9;-set /shared/test_import/&quot;source&quot;/ds_orders DATA_SOURCE host localhost
&#x9;&#x9;-set /shared/test_import/&quot;source&quot;/ds_orders DATA_SOURCE password tutorial
&#x9;&#x9;-set /shared/test_import/&quot;source&quot;/ds_orders DATA_SOURCE port 9408
&#x9;&#x9;-set /shared/test_import/&quot;source&quot;/ds_orders DATA_SOURCE user tutorial
&#x9;&#x9;-set /shared/test_import/&quot;source&quot;/ds_ordersCopy DATA_SOURCE database orders
&#x9;&#x9;-set /shared/test_import/&quot;source&quot;/ds_ordersCopy DATA_SOURCE host localhost
&#x9;&#x9;-set /shared/test_import/&quot;source&quot;/ds_ordersCopy DATA_SOURCE password tutorial
&#x9;&#x9;-set /shared/test_import/&quot;source&quot;/ds_ordersCopy DATA_SOURCE port 9408
&#x9;&#x9;-set /shared/test_import/&quot;source&quot;/ds_ordersCopy DATA_SOURCE user tutorial

----------------------------------------------------------
III. Customizing the &quot;runAfterImport&quot; procedure template for deployment.
----------------------------------------------------------
&#x9;The procedure &quot;/shared/ASAssets/Utilities/deployment/run/runAfterImport_template&quot; is a template for running internal DV procedures 
&#x9;&#x9;after import of a CAR file during a DV migration.
&#x9;This procedure should be copied to a different location so that it does not get overwritten when the Utilities are upgraded.

&#x9;Instructions:
&#x9;&#x9;1. Modify /shared/ASAssets/Utilities/environment/getEnvName() and provide an environment name such as DEV, TEST, PROD etc based on the TDV server environment.
&#x9;&#x9;2. Copy the &quot;runAfterImport_template&quot; template to a different location outside of the /shared/ASAssets/Utilities folder so that it does not get overwritten if the Utilities are updated.
&#x9;&#x9;3. Modify the copied procedure
&#x9;&#x9;&#x9;a. Modify the variable &quot;scriptEnv&quot; to match environment name that comes from getEnvName().
&#x9;&#x9;&#x9;b. Add procedure calls to add additional logic that you want to &quot;run after import&quot;.
&#x9;&#x9;4. Publish the copied procedure &quot;runAfterImport&quot; to /services/databases/ASAssets/Utilities/deployment
&#x9;&#x9;5. The script deployProject.[bat|sh] would invoke runAfterImport.  
&#x9;&#x9;&#x9;See the following for script details: /shared/ASAssets/Utilities/deployment/privileges/_README

----------------------------------------------------------
IV. Deployment scripts.
----------------------------------------------------------
&#x9;=============================
&#x9;Deployment Script
&#x9;=============================
&#x9;At deployment time, the following procedures are invoked from &quot;deployProject.sh&quot;:
&#x9;&#x9;The password is optional and will be prompted if not provided.
&#x9;&#x9;deployProject.[bat|sh] [-v] [-c] &lt;CAR_file&gt; &lt;options_file&gt; &lt;hostname&gt; &lt;username&gt; &lt;domain&gt; [password]

&#x9;&#x9;&#x9;-v=[optional] verbose mode.  Verbose is turned on for secondary script calls.   Otherwise the default is verbose is off.
&#x9;&#x9;&#x9;-c=[optional] execute package .car file version check and conversion.  
&#x9;&#x9;&#x9;              Use -c in environments where you are migrating from DV 8.x into DV 7.x.
&#x9;&#x9;&#x9;              If not provided, version checking and .car file conversion will not be done which would be optimal to use
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when all environments are of the same major DV version such as all DV 7.x or all DV 8.x
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;DISCLAIMER: 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Migrating resources from 8.x to 7.x is not generally supported.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;However, it does provide a way to move basic functionality coded in 8.x to 7.x.  
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;It does not support the ability to move new features that exist in 8.x but do not exist in 7.x.  
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Exceptions may be thrown in this circumstance.

&#x9;&#x9;1. Perform DV server version check
&#x9;&#x9;&#x9;&quot;SELECT * FROM Utilities.repository.getServerAttribute(&apos;/server/config/info/version&apos;)&quot;

&#x9;&#x9;2. Perform package .car file conversion if requested
&#x9;&#x9;&#x9;convertPkgFileV11_to_V10.[bat|sh] &lt;package_file_path&gt; 

&#x9;&#x9;3. Full Server Backup
&#x9;&#x9;&#x9;$DV_HOME/bin/backup_export.sh -server $HOST -pkgfile $BACKUPFILENAME -user $USER -password $PASSWORD -domain $DOMAIN -includeStatistics

&#x9;&#x9;4. Import specified CAR file
&#x9;&#x9;&#x9;$DV_HOME/bin/pkg_import.sh -pkgfile $PKGFILE -server $HOST -port $WSPORT -user $USER -password $PASSWORD -domain $DOMAIN -optfile $OPTFILE

&#x9;&#x9;5. Reads the file resource_ownership.txt and changes resource ownership for each path.
&#x9;&#x9;&#x9;&quot;SELECT * FROM Utilities.deployment.importResourceOwnership(&apos;N&apos;, &apos;$RESOWNERFILE&apos;)&quot;
&#x9;&#x9;&#x9;Actual Path: /services/databases/ASAssets/Utilities/deployment/importResourceOwnership

&#x9;&#x9;6. Reads the privileges.xml file and updates the privileges.
&#x9;&#x9;&#x9;&#x9;&quot;SELECT * FROM Utilities.deployment.importResourcePrivileges(&apos;N&apos;, 1, 0, 0, &apos;$PRIVSFILE&apos;, &apos;SET_EXACTLY&apos;)&quot;
&#x9;&#x9;&#x9;Actual Path: /services/databases/ASAssets/Utilities/deployment/importResourcePrivileges

&#x9;&#x9;7. Invokes the post-deployment customization script: 
&#x9;&#x9;&#x9;&#x9;&quot;SELECT * FROM  Utilities.deployment.runAfterImport(&apos;N&apos;)&quot;
&#x9;&#x9;&#x9;Actual Path: /services/databases/ASAssets/Utilities/deployment/runAfterImport

&#x9;&#x9;EXAMPLE:
&#x9;&#x9;&#x9;./deployProject.sh ../CAR/YYYYMMDD/carfile_name.car options.opt localhost deployuser composite
&#x9;&#x9;&#x9;deployProject.bat ../CAR/YYYYMMDD/carfile_name.car options.opt localhost deployuser composite

&#x9;=============================
&#x9;Privilege Script Execution
&#x9;=============================
&#x9;It is possible to apply privileges only from the UNIX command line using the following script:
&#x9;&#x9;The password is optional and will be prompted if not provided.
&#x9;&#x9;&#x9;deployPrivs.[bat|sh] [-v] &lt;hostname&gt; &lt;username&gt; &lt;domain&gt; [password]

&#x9;&#x9;&#x9;&#x9;-v=[optional] verbose mode.  Verbose is turned on for secondary script calls.  
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Otherwise the default is verbose is off.

&#x9;&#x9;1. Reads the file resource_ownership.txt and changes resource ownership for each path.
&#x9;&#x9;&#x9;&quot;SELECT * FROM Utilities.deployment.importResourceOwnership(&apos;N&apos;, &apos;$RESOWNERFILE&apos;)&quot;
&#x9;&#x9;&#x9;Actual Path: /services/databases/ASAssets/Utilities/deployment/importResourceOwnership

&#x9;&#x9;2. Reads the privileges.xml file and updates the privileges.
&#x9;&#x9;&#x9;&#x9;&quot;SELECT * FROM Utilities.deployment.importResourcePrivileges(&apos;N&apos;, 1, 0, 0, &apos;$PRIVSFILE&apos;, &apos;SET_EXACTLY&apos;)&quot;
&#x9;&#x9;&#x9;Actual Path: /services/databases/ASAssets/Utilities/deployment/importResourcePrivileges

&#x9;&#x9;EXAMPLE:
&#x9;&#x9;&#x9;./deployPrivs.sh localhost deployuser composite
&#x9;&#x9;&#x9;deployPrivs.bat localhost deployuser composite

&#x9;=============================
&#x9;JdbcSample Script
&#x9;=============================
&#x9;The JdbcSample script is used to interface with a DV server and execute custom procedures.
&#x9;This procedure *** REQUIRES *** JdbcSample.class to be present in the target scripts folder.  
&#x9;&#x9;It can be found in the Utilities zip file &quot;deployment/scripts&quot;.
&#x9;The following scripts get executed via JdbcSample.

&#x9;&#x9;1. Reads the file resource_ownership.txt and changes resource ownership for each path.
&#x9;&#x9;&#x9;&quot;SELECT * FROM Utilities.deployment.importResourceOwnership(&apos;N&apos;, &apos;$RESOWNERFILE&apos;)&quot;
&#x9;&#x9;&#x9;Actual Path: /services/databases/ASAssets/Utilities/deployment/importResourceOwnership

&#x9;&#x9;2. Reads the privileges.xml file and updates the privileges.
&#x9;&#x9;&#x9;&#x9;&quot;SELECT * FROM Utilities.deployment.importResourcePrivileges(&apos;N&apos;, 1, 0, 0, &apos;$PRIVSFILE&apos;, &apos;SET_EXACTLY&apos;)&quot;
&#x9;&#x9;&#x9;Actual Path: /services/databases/ASAssets/Utilities/deployment/importResourcePrivileges

&#x9;&#x9;3. Invokes the post-deployment customization script: 
&#x9;&#x9;&#x9;&#x9;&quot;SELECT * FROM  Utilities.deployment.runAfterImport(&apos;N&apos;)&quot;
&#x9;&#x9;&#x9;Actual Path: /services/databases/ASAssets/Utilities/deployment/runAfterImport


&#x9;(c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCO® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.

*/
PROCEDURE &quot;_README&quot;()
BEGIN
END</attribute>
  <attribute name="creationDate" type="LONG">1523455413720</attribute>
  <attribute name="creatorUserDomain" type="STRING">composite</attribute>
  <attribute name="creatorUserId" type="INTEGER">-1973</attribute>
  <attribute name="creatorUserName" type="STRING">admin</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1560349680262</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserId" type="INTEGER">-1973</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="NULL"/>
  <attribute name="resourceModifiedDateOnSourceCISSite" type="LONG">1523455413720</attribute>
</metadata>