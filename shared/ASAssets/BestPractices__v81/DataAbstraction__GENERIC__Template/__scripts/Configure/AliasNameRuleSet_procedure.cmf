<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:9a66723c-3693-47f1-a1f0-d7811996f9d5 -->
<metadata name="AliasNameRuleSet" path="/shared/ASAssets/BestPractices_v81/DataAbstraction_GENERIC_Template/_scripts/Configure/AliasNameRuleSet" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation>&lt;![CDATA[AliasNameRuleSet:
&#x9;-- Data Virtualization Best Practices --

&#x9;Alias names are a way of converting short names or abbreviations into more formalizaed names that fit the canonical format.
&#x9;For example, ds_inventory would be broken down into its word parts so we would have &quot;ds&quot; and &quot;inventory&quot;.  Each word
&#x9;part would be passed into the &apos;shared/BestPractices/Procedures/generateName/applyAliasRule()&apos; procedure which will 
&#x9;use the list below to convert the alias into the more formalized aliasRule.  So &quot;ds&quot; would become &quot;DataSource&quot;.
&#x9;It should be noted that the case rules will be applied after the alias rules.  So the actual case-sensitivity of
&#x9;the aliasRule may not be applied as you see it here.
 
&#x9;Input: none
&#x9;Output:
&#x9;&#x9;aliasNames &#x9;&#x9;&#x9;&#x9;&#x9;- a list of name value pairs defining an alias name and the value it should be transformed to.
&#x9;&#x9;&#x9;PIPE (
&#x9;&#x9;&#x9;&#x9;alias VARCHAR, &#x9;&#x9;- the name that applyAliasRule() uses to compare its word part with what is in this list
&#x9;&#x9;&#x9;&#x9;aliasRule VARCHAR&#x9;- the value in which to convert the alias name to.
&#x9;&#x9;&#x9;)

&#x9;Exceptions:  none

&#x9;Modified Date:&#x9;Modified By:&#x9;&#x9;CSW Version:&#x9;Reason:
&#x9;08/20/2010&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;5.1.0&#x9;&#x9;&#x9;Created new

&#x9;(c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCO® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.]]&gt;</annotation>
  <parameters>
    <parameter name="aliasNames" direction="OUT" nullable="true">
      <datatype name="aliasNames" type="TABLE" refId="256">
        <element name="alias">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="aliasRule">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
      </datatype>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
    <privilege group="all" domain="composite" privileges="READ"/>
  </security>
  <attribute name="Script" type="STRING">/* 
&#x9;AliasNameRuleSet:
&#x9;-- Data Virtualization Best Practices --

&#x9;Alias names are a way of converting short names or abbreviations into more formalizaed names that fit the canonical format.
&#x9;For example, ds_inventory would be broken down into its word parts so we would have &quot;ds&quot; and &quot;inventory&quot;.  Each word
&#x9;part would be passed into the &apos;shared/BestPractices/Procedures/generateName/applyAliasRule()&apos; procedure which will 
&#x9;use the list below to convert the alias into the more formalized aliasRule.  So &quot;ds&quot; would become &quot;DataSource&quot;.
&#x9;It should be noted that the case rules will be applied after the alias rules.  So the actual case-sensitivity of
&#x9;the aliasRule may not be applied as you see it here.
 
&#x9;Input: none
&#x9;Output:
&#x9;&#x9;aliasNames &#x9;&#x9;&#x9;&#x9;&#x9;- a list of name value pairs defining an alias name and the value it should be transformed to.
&#x9;&#x9;&#x9;PIPE (
&#x9;&#x9;&#x9;&#x9;alias VARCHAR, &#x9;&#x9;- the name that applyAliasRule() uses to compare its word part with what is in this list
&#x9;&#x9;&#x9;&#x9;aliasRule VARCHAR&#x9;- the value in which to convert the alias name to.
&#x9;&#x9;&#x9;)

&#x9;Exceptions:  none

&#x9;Modified Date:&#x9;Modified By:&#x9;&#x9;CSW Version:&#x9;Reason:
&#x9;08/20/2010&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;5.1.0&#x9;&#x9;&#x9;Created new

&#x9;(c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCO® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.

*/
PROCEDURE AliasNameRuleSet(
&#x9;OUT  aliasNames PIPE (alias VARCHAR, aliasRule VARCHAR)
)
BEGIN
--                            alias,aliasRule
INSERT INTO aliasNames VALUES (&apos;DS&apos;,&apos;DataSource&apos;);
INSERT INTO aliasNames VALUES (&apos;CDE&apos;,&apos;Code&apos;);
INSERT INTO aliasNames VALUES (&apos;DT&apos;,&apos;Date&apos;);
INSERT INTO aliasNames VALUES (&apos;DTE&apos;,&apos;Date&apos;);
INSERT INTO aliasNames VALUES (&apos;TMS&apos;,&apos;Timestamp&apos;);
INSERT INTO aliasNames VALUES (&apos;CHG&apos;,&apos;Change&apos;);
INSERT INTO aliasNames VALUES (&apos;TYP&apos;,&apos;Type&apos;);
INSERT INTO aliasNames VALUES (&apos;USR&apos;,&apos;User&apos;);
INSERT INTO aliasNames VALUES (&apos;ID&apos;,&apos;Id&apos;);
INSERT INTO aliasNames VALUES (&apos;DESC&apos;,&apos;Description&apos;);
INSERT INTO aliasNames VALUES (&apos;TRMN&apos;,&apos;Termination&apos;);
INSERT INTO aliasNames VALUES (&apos;ISS&apos;,&apos;Issue&apos;);
INSERT INTO aliasNames VALUES (&apos;MKT&apos;,&apos;Market&apos;);
END</attribute>
  <attribute name="creationDate" type="LONG">1377564320197</attribute>
  <attribute name="creatorUserDomain" type="STRING">composite</attribute>
  <attribute name="creatorUserName" type="STRING">admin</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1560446203233</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="NULL"/>
</metadata>