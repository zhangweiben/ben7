<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:e931daa6-7fda-456a-badf-4cdb1c228a1a -->
<metadata name="2_pqCreate_DABP_privilege_triggers" path="/shared/ASAssets/BestPractices_v81/PrivilegeScripts/Metadata/DDL/Oracle_PROD/2_pqCreate_DABP_privilege_triggers" type="PROCEDURE" subtype="EXTERNAL_SQL_PROCEDURE" changeToken="0">
  <annotation>&lt;![CDATA[
&#x9;(c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.

]]&gt;</annotation>
  <parameters>
    <parameter name="SchemaName" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
      <attribute name="Customized" type="STRING">metadata.added;datatype.changed;direction.changed</attribute>
    </parameter>
    <parameter name="result" direction="OUT" nullable="true">
      <datatype name="CURSOR" type="TABLE" refId="256">
        <element name="result">
          <datatype name="CHAR" type="STRING" minLength="255" maxLength="255"/>
        </element>
      </datatype>
      <attribute name="Customized" type="STRING">metadata.added;datatype.changed;direction.changed;name.changed</attribute>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
    <privilege group="all" domain="composite" privileges="READ"/>
  </security>
  <dependency target="/shared/ASAssets/BestPractices_v81/PrivilegeScripts/Metadata/Privileges_DB_PROD_ORA" type="DATA_SOURCE">
    <datatype name="Tree" type="TREE" refId="257"></datatype>
  </dependency>
  <attribute name="SQL" type="STRING">&lt;version 2&gt;multipartseparator=;+;
-- Parameter 0: schemaName=CMPPRV

CREATE OR REPLACE TRIGGER &quot;{0}&quot;.COMPOSITE_PRIVILEGES_TRG01
BEFORE INSERT OR UPDATE
   ON &quot;{0}&quot;.COMPOSITE_PRIVILEGES
   FOR EACH ROW
DECLARE
   v_username varchar2(50);
BEGIN
 IF INSERTING THEN
   select &quot;{0}&quot;.COMPOSITEPRIVILEGES_SEQ.nextval into :new.PRIVILEGE_ID from dual;
   -- Find username of person performing INSERT into table
   SELECT user INTO v_username FROM dual;
   -- Update create_date field to current system date
   :NEW.CREATEDDATE := SYSDATE;
   :NEW.CREATEDBY   := v_username;
   :NEW.UPDATEDBY   := v_username;
   :NEW.UPDATEDDATE := SYSDATE;
 END IF;
 IF UPDATING THEN
   -- Find username of person performing INSERT into table
   SELECT user INTO v_username FROM dual;
   -- Update update_date field to current system date
   :NEW.UPDATEDBY   := v_username;
   :NEW.UPDATEDDATE := SYSDATE;
 END IF;
END;
; ;


CREATE OR REPLACE TRIGGER &quot;{0}&quot;.COMPOSITE_STUDIO_RIGHTS_TRG01
BEFORE INSERT OR UPDATE
   ON &quot;{0}&quot;.COMPOSITE_STUDIO_RIGHTS
   FOR EACH ROW
DECLARE
   v_username varchar2(50);
BEGIN
 IF INSERTING THEN
   select &quot;{0}&quot;.COMPOSITESTUDIORIGHTS_SEQ.nextval into :new.STUDIO_RIGHTS_ID from dual;
   -- Find username of person performing INSERT into table
   SELECT user INTO v_username FROM dual;
   -- Update create_date field to current system date
   :NEW.CREATEDDATE := SYSDATE;
   :NEW.CREATEDBY   := v_username;
   :NEW.UPDATEDBY   := v_username;
   :NEW.UPDATEDDATE := SYSDATE;
 END IF;
 IF UPDATING THEN
  SELECT user INTO v_username FROM dual;
   -- Update update_date field to current system date
   :NEW.UPDATEDBY   := v_username;
   :NEW.UPDATEDDATE := SYSDATE;
 END IF;
END;
; ;


CREATE OR REPLACE TRIGGER &quot;{0}&quot;.COMPOSITE_USER_TRG01
BEFORE INSERT OR UPDATE
   ON &quot;{0}&quot;.COMPOSITE_USER
   FOR EACH ROW
DECLARE
   v_username varchar2(50);
BEGIN
 IF INSERTING THEN
   select &quot;{0}&quot;.COMPOSITEUSER_SEQ.nextval into :new.USERID from dual;
   -- Find username of person performing INSERT into table
   SELECT user INTO v_username FROM dual;
   -- Update create_date field to current system date
   :NEW.CREATEDDATE := SYSDATE;
   :NEW.CREATEDBY   := v_username;
   :NEW.UPDATEDBY   := v_username;
   :NEW.UPDATEDDATE := SYSDATE;
 END IF;
 IF UPDATING THEN
  SELECT user INTO v_username FROM dual;
   -- Update update_date field to current system date
   :NEW.UPDATEDBY   := v_username;
   :NEW.UPDATEDDATE := SYSDATE;
 END IF;
END;
; ;


select &apos;SUCCESS&apos; FROM DUAL; ;</attribute>
  <attribute name="creationDate" type="LONG">1379679170655</attribute>
  <attribute name="creatorUserDomain" type="STRING">composite</attribute>
  <attribute name="creatorUserName" type="STRING">admin</attribute>
  <attribute name="isSingleSelect" type="STRING">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1513829548381</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="p:0:Customized" type="STRING">metadata.added;datatype.changed;direction.changed</attribute>
  <attribute name="p:1:Customized" type="STRING">metadata.added;datatype.changed;direction.changed;name.changed</attribute>
  <attribute name="passThroughSource" type="STRING">/shared/ASAssets/BestPractices_v81/PrivilegeScripts/Metadata/Privileges_DB_PROD_ORA</attribute>
</metadata>