<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:e931daa6-7fda-456a-badf-4cdb1c228a1a -->
<metadata name="updateResourcePrivilegesV4" path="/shared/ASAssets/BestPractices_v81/PrivilegeScripts/Helpers/updateResourcePrivilegesV4" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation>&lt;![CDATA[&#x9;(c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.
]]&gt;</annotation>
  <parameters>
    <parameter name="inDebug" direction="IN" nullable="true">
      <datatype name="CHAR" type="STRING" minLength="1" maxLength="1"/>
    </parameter>
    <parameter name="inDebugConsole" direction="IN" nullable="true">
      <datatype name="CHAR" type="STRING" minLength="1" maxLength="1"/>
    </parameter>
    <parameter name="inDebugCISLog" direction="IN" nullable="true">
      <datatype name="CHAR" type="STRING" minLength="1" maxLength="1"/>
    </parameter>
    <parameter name="owner" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="ownerDomain" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="resourcePath" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="4000"/>
    </parameter>
    <parameter name="resourceType" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="recurse" direction="IN" nullable="true">
      <datatype name="BIT" type="INTEGER" minValue="0" maxValue="1"/>
    </parameter>
    <parameter name="recurseDependencies" direction="IN" nullable="true">
      <datatype name="BIT" type="INTEGER" minValue="0" maxValue="1"/>
    </parameter>
    <parameter name="recurseDependents" direction="IN" nullable="true">
      <datatype name="BIT" type="INTEGER" minValue="0" maxValue="1"/>
      <attribute name="Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
    </parameter>
    <parameter name="mode" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="privilegeStr" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
      <attribute name="Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
    </parameter>
    <parameter name="logOutput" direction="INOUT" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="result" direction="OUT" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
    <privilege group="all" domain="composite" privileges="READ"/>
  </security>
  <dependency target="/lib/debug/Print" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="textToPrint" direction="IN">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="Text" type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/lib/resource/ResourceExists" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="path" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
      </element>
      <element name="type" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceType" type="STRING" maxLength="40"/>
      </element>
      <element name="version" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceVersion" type="STRING" maxLength="255"/>
      </element>
      <element name="exists" direction="OUT">
        <datatype type="BOOLEAN"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/lib/util/System" type="DEFINITION_SET">
    <datatype name="Tree" type="TREE" refId="257"></datatype>
  </dependency>
  <dependency target="/services/webservices/system/admin/resource/operations/changeResourceOwner" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="changeResourceOwner" direction="IN">
        <datatype name="changeResourceOwner" extendedName="{http://www.compositesw.com/services/system/admin/resource}changeResourceOwner" namespace="http://www.compositesw.com/services/system/admin/resource" referenceDefinitionSet="/services/webservices/system/admin/resource/operations/ResourceSchema" referenceType="{http://www.compositesw.com/services/system/admin/resource}changeResourceOwner" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/admin/resource}changeResourceOwner">
          <schemaDatatype>
            <datatype name="changeResourceOwner" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="changeResourceOwnerRequest" superTypeNamespace="http://www.compositesw.com/services/system/admin/resource" subType="ELEMENT_DECL" type="TREE" refId="257">
              <element name="path" namespace="http://www.compositesw.com/services/system/admin/resource">
                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="type" namespace="http://www.compositesw.com/services/system/admin/resource">
                <datatype name="resourceType" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="detail" namespace="http://www.compositesw.com/services/system/admin/resource">
                <datatype name="detailLevel" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="newOwnerName" namespace="http://www.compositesw.com/services/system/admin/resource">
                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="newOwnerDomain" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="currentOwnerName" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="currentOwnerDomain" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="recurse" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                <datatype name="boolean" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="0" maxValue="1"/>
              </element>
            </datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="changeResourceOwnerResponse" direction="OUT">
        <datatype name="changeResourceOwnerResponse" extendedName="{http://www.compositesw.com/services/system/admin/resource}changeResourceOwnerResponse" namespace="http://www.compositesw.com/services/system/admin/resource" referenceDefinitionSet="/services/webservices/system/admin/resource/operations/ResourceSchema" referenceType="{http://www.compositesw.com/services/system/admin/resource}changeResourceOwnerResponse" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/admin/resource}changeResourceOwnerResponse">
          <schemaDatatype>
            <datatype name="changeResourceOwnerResponse" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="changeResourceOwnerResponse" superTypeNamespace="http://www.compositesw.com/services/system/admin/resource" subType="ELEMENT_DECL" type="TREE" refId="513">
              <element name="resources" namespace="http://www.compositesw.com/services/system/admin/resource">
                <datatype name="resourceList" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="769">
                  <element name="resource" namespace="http://www.compositesw.com/services/system/admin/resource" maxOccurs="2147483647" minOccurs="0">
                    <datatype name="resource" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="1025">
                      <element name="name" namespace="http://www.compositesw.com/services/system/admin/resource">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="path" namespace="http://www.compositesw.com/services/system/admin/resource">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="type" namespace="http://www.compositesw.com/services/system/admin/resource">
                        <datatype name="resourceType" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="subtype" namespace="http://www.compositesw.com/services/system/admin/resource">
                        <datatype name="resourceSubType" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="id" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="changeId" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="int" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="long" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
                      </element>
                      <element name="version" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="introspectState" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="introspectState" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="ownerDomain" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="ownerName" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="impactLevel" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="impactLevel" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="impactMessage" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="enabled" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="boolean" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="0" maxValue="1"/>
                      </element>
                      <element name="lockState" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="lockState" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="1281">
                          <element name="lockOwnerDomain" namespace="http://www.compositesw.com/services/system/admin/resource">
                            <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                          </element>
                          <element name="lockOwnerName" namespace="http://www.compositesw.com/services/system/admin/resource">
                            <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                          </element>
                          <element name="lockCreateTime" namespace="http://www.compositesw.com/services/system/admin/resource">
                            <datatype name="dateTime" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="DATETIME"/>
                          </element>
                          <element name="lockParentPath" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                            <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                          </element>
                        </datatype>
                      </element>
                      <element name="hints" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="1537">
                          <element name="hint" namespace="http://www.compositesw.com/services/system/admin/resource" maxOccurs="2147483647" minOccurs="0">
                            <datatype name="attribute" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="1793">
                              <element name="name" namespace="http://www.compositesw.com/services/system/util/common">
                                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                              </element>
                              <element name="type" namespace="http://www.compositesw.com/services/system/util/common">
                                <datatype name="attributeType" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                              </element>
                              <element name="value" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                <datatype name="attributeSimpleValue" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                              </element>
                              <element name="valueList" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                <datatype name="attributeTypeValueList" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="attributeComplexValue" superTypeNamespace="http://www.compositesw.com/services/system/util/common" subType="COMPLEX_TYPE" type="TREE" refId="2049">
                                  <element name="item" namespace="http://www.compositesw.com/services/system/util/common" maxOccurs="2147483647" minOccurs="0">
                                    <datatype name="attributeTypeValue" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="2305">
                                      <element name="type" namespace="http://www.compositesw.com/services/system/util/common">
                                        <datatype name="attributeType" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                                      </element>
                                      <element name="value" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                        <datatype name="attributeSimpleValue" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                                      </element>
                                      <element name="valueList" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                        <reference refId="2049"/>
                                      </element>
                                      <element name="valueMap" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                        <datatype name="attributeTypeValueMap" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="attributeComplexValue" superTypeNamespace="http://www.compositesw.com/services/system/util/common" subType="COMPLEX_TYPE" type="TREE" refId="2561">
                                          <element name="entry" namespace="http://www.compositesw.com/services/system/util/common" maxOccurs="2147483647" minOccurs="0">
                                            <datatype superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="2817">
                                              <element name="key" namespace="http://www.compositesw.com/services/system/util/common">
                                                <reference refId="2305"/>
                                              </element>
                                              <element name="value" namespace="http://www.compositesw.com/services/system/util/common">
                                                <reference refId="2305"/>
                                              </element>
                                            </datatype>
                                          </element>
                                        </datatype>
                                      </element>
                                      <element name="valueArray" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                        <datatype name="attributeSimpleValueList" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="attributeComplexValue" superTypeNamespace="http://www.compositesw.com/services/system/util/common" subType="COMPLEX_TYPE" type="TREE" refId="3073">
                                          <element name="item" namespace="http://www.compositesw.com/services/system/util/common" maxOccurs="2147483647" minOccurs="0">
                                            <datatype name="attributeSimpleValue" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                                          </element>
                                        </datatype>
                                      </element>
                                    </datatype>
                                  </element>
                                </datatype>
                              </element>
                              <element name="valueMap" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                <reference refId="2561"/>
                              </element>
                              <element name="valueArray" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                <reference refId="3073"/>
                              </element>
                              <element name="unset" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                <datatype name="boolean" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="0" maxValue="1"/>
                              </element>
                            </datatype>
                          </element>
                        </datatype>
                      </element>
                      <element name="annotation" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="attributes" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="attributeList" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="3329">
                          <element name="attribute" namespace="http://www.compositesw.com/services/system/util/common" maxOccurs="2147483647" minOccurs="0">
                            <reference refId="1793"/>
                          </element>
                        </datatype>
                      </element>
                    </datatype>
                  </element>
                </datatype>
              </element>
            </datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="fault" direction="OUT">
        <datatype name="fault" extendedName="{http://www.compositesw.com/services/system/util/common}fault" namespace="http://www.compositesw.com/services/system/util/common" referenceDefinitionSet="/services/webservices/system/util/common/operations/CommonSchema" referenceType="{http://www.compositesw.com/services/system/util/common}fault" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/util/common}fault">
          <schemaDatatype>
            <datatype name="fault" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="fault" superTypeNamespace="http://www.compositesw.com/services/system/util/common" subType="ELEMENT_DECL" type="TREE" refId="3585">
              <element name="errorEntry" namespace="http://www.compositesw.com/services/system/util/common" maxOccurs="2147483647" minOccurs="0">
                <datatype name="messageEntry" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="3841">
                  <element name="code" namespace="http://www.compositesw.com/services/system/util/common">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="name" namespace="http://www.compositesw.com/services/system/util/common">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="message" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="detail" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="severity" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                    <datatype name="messageSeverity" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                  </element>
                </datatype>
              </element>
            </datatype>
          </schemaDatatype>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/services/webservices/system/admin/resource/operations/updateResourcePrivileges" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="updateResourcePrivileges" direction="IN">
        <datatype name="updateResourcePrivileges" extendedName="{http://www.compositesw.com/services/system/admin/resource}updateResourcePrivileges" namespace="http://www.compositesw.com/services/system/admin/resource" referenceDefinitionSet="/services/webservices/system/admin/resource/operations/ResourceSchema" referenceType="{http://www.compositesw.com/services/system/admin/resource}updateResourcePrivileges" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/admin/resource}updateResourcePrivileges">
          <schemaDatatype>
            <datatype name="updateResourcePrivileges" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="updateResourcePrivilegesRequest" superTypeNamespace="http://www.compositesw.com/services/system/admin/resource" subType="ELEMENT_DECL" type="TREE" refId="257">
              <element name="updateRecursively" namespace="http://www.compositesw.com/services/system/admin/resource">
                <datatype name="boolean" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="0" maxValue="1"/>
              </element>
              <element name="updateDependenciesRecursively" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                <datatype name="boolean" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="0" maxValue="1"/>
              </element>
              <element name="updateDependentsRecursively" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                <datatype name="boolean" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="0" maxValue="1"/>
              </element>
              <element name="privilegeEntries" namespace="http://www.compositesw.com/services/system/admin/resource">
                <datatype superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="513">
                  <element name="privilegeEntry" namespace="http://www.compositesw.com/services/system/admin/resource" maxOccurs="2147483647" minOccurs="0">
                    <datatype name="privilegeEntry" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="769">
                      <element name="path" namespace="http://www.compositesw.com/services/system/admin/resource">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="type" namespace="http://www.compositesw.com/services/system/admin/resource">
                        <datatype name="resourceOrColumnType" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="privileges" namespace="http://www.compositesw.com/services/system/admin/resource">
                        <datatype superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="1025">
                          <element name="privilege" namespace="http://www.compositesw.com/services/system/admin/resource" maxOccurs="2147483647" minOccurs="0">
                            <datatype name="privilege" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="1281">
                              <element name="domain" namespace="http://www.compositesw.com/services/system/admin/resource">
                                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                              </element>
                              <element name="name" namespace="http://www.compositesw.com/services/system/admin/resource">
                                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                              </element>
                              <element name="nameType" namespace="http://www.compositesw.com/services/system/admin/resource">
                                <datatype name="userNameType" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                              </element>
                              <element name="privs" namespace="http://www.compositesw.com/services/system/admin/resource">
                                <datatype name="privList" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                              </element>
                              <element name="combinedPrivs" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                                <datatype name="privList" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                              </element>
                              <element name="inheritedPrivs" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                                <datatype name="privList" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                              </element>
                            </datatype>
                          </element>
                        </datatype>
                      </element>
                    </datatype>
                  </element>
                </datatype>
              </element>
              <element name="mode" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                <datatype name="updatePrivilegesMode" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
              </element>
            </datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="updateResourcePrivilegesResponse" direction="OUT">
        <datatype name="updateResourcePrivilegesResponse" extendedName="{http://www.compositesw.com/services/system/admin/resource}updateResourcePrivilegesResponse" namespace="http://www.compositesw.com/services/system/admin/resource" referenceDefinitionSet="/services/webservices/system/admin/resource/operations/ResourceSchema" referenceType="{http://www.compositesw.com/services/system/admin/resource}updateResourcePrivilegesResponse" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/admin/resource}updateResourcePrivilegesResponse">
          <schemaDatatype>
            <datatype name="updateResourcePrivilegesResponse" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="updateResourcePrivilegesResponse" superTypeNamespace="http://www.compositesw.com/services/system/admin/resource" subType="ELEMENT_DECL" type="TREE" refId="1537"></datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="fault" direction="OUT">
        <datatype name="fault" extendedName="{http://www.compositesw.com/services/system/util/common}fault" namespace="http://www.compositesw.com/services/system/util/common" referenceDefinitionSet="/services/webservices/system/util/common/operations/CommonSchema" referenceType="{http://www.compositesw.com/services/system/util/common}fault" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/util/common}fault">
          <schemaDatatype>
            <datatype name="fault" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="fault" superTypeNamespace="http://www.compositesw.com/services/system/util/common" subType="ELEMENT_DECL" type="TREE" refId="1793">
              <element name="errorEntry" namespace="http://www.compositesw.com/services/system/util/common" maxOccurs="2147483647" minOccurs="0">
                <datatype name="messageEntry" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="2049">
                  <element name="code" namespace="http://www.compositesw.com/services/system/util/common">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="name" namespace="http://www.compositesw.com/services/system/util/common">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="message" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="detail" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="severity" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                    <datatype name="messageSeverity" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                  </element>
                </datatype>
              </element>
            </datatype>
          </schemaDatatype>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/BestPractices_v81/PrivilegeScripts/Helpers/addLogOutput" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="printConsole" direction="IN">
        <datatype type="STRING" minLength="1" maxLength="1"/>
      </element>
      <element name="printLog" direction="IN">
        <datatype type="STRING" minLength="1" maxLength="1"/>
      </element>
      <element name="inLogOutput" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="addLogOutput" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="outLogOutput" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/BestPractices_v81/PrivilegeScripts/Helpers/getResourcePrivileges" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="resourcePath" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
      </element>
      <element name="resourceType" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceType" type="STRING" maxLength="40"/>
      </element>
      <element name="nameTypeFilter" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="domainFilter" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="privilegeEntryType" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="includeNameEqualFilter" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="includeNameLikeFilter" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="excludeNameNotEqualFilter" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="excludeNameNotLikeFilter" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="includePrivsEqualFilter" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="includePrivsLikeFilter" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="excludePrivsNotEqualFilter" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="excludePrivsNotLikeFilter" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="includeColumnPrivs" direction="IN">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
      <element name="debug" direction="IN">
        <datatype type="STRING" minLength="1" maxLength="1"/>
      </element>
      <element name="result" direction="OUT">
        <datatype type="TABLE" refId="256">
          <element name="path">
            <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
          </element>
          <element name="type">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="name">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="nameType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="domain">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="privs">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="combinedPrivs">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="inheritedPrivs">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="p_N">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="p_R">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="p_W">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="p_E">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="p_S">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="p_U">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="p_I">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="p_D">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="p_G">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="c_N">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="c_R">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="c_W">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="c_E">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="c_S">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="c_U">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="c_I">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="c_D">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="c_G">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="i_N">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="i_R">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="i_W">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="i_E">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="i_S">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="i_U">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="i_I">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="i_D">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="i_G">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/getUsedResourcesCursor" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="resourcePath" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="4000"/>
      </element>
      <element name="resourceType" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="usedResCursor" direction="OUT">
        <datatype type="TABLE" refId="256">
          <element name="resourceName">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="resourcePath">
            <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="4000"/>
          </element>
          <element name="resourceType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="subtype">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="enabled">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="id">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="tableType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="explicitlyDesigned">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="sqlText">
            <datatype type="STRING" maxLength="32768"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <attribute name="Script" type="STRING">/* updateResourcePrivileges:
    * Assign privileges and ownership to all resources.
    * The resourcelist is an array of resources - usually folders (CONTAINER) and virtual
    * databases (DATA_SOURCE).  For each resource, an array is provided with the users or
    * groups who can access that resource, and a set of resource privileges for each.
    * If the recurse flag is &apos;1&apos; the same permissions will be applied to sub-resources.
 
&#x9;Input:
    &#x9;inDebug &#x9;&#x9;&#x9;- N/Null (default)=No debug, Y=Debug.  Determines whether to capture any debug output and return it in logOutput.
&#x9;&#x9;inDebugConsole&#x9;&#x9;- N/Null (default)=No debug, Y=Debug console.  Determines whether to print the studio console window or not.
&#x9;&#x9;inDebugCISLog&#x9;&#x9;- N/Null (default)=No debug, Y=Debug log.  Determines whether to print to the CIS log or not.
&#x9;&#x9;owner &#x9;&#x9;&#x9;&#x9;- Owner should be set to the name of the user which should own all the objects
&#x9;&#x9;ownerDomain &#x9;&#x9;- Domain for owner - default is &apos;composite&apos;
    &#x9;resourcePath &#x9;&#x9;- full resource path to the composite resource
    &#x9;resourceType &#x9;&#x9;- resource type e.g. CONTAINER, DATA_SOURCE, PROCEDURE, VIEW
&#x9;&#x9;recurse &#x9;&#x9;&#x9;- 0=no recurse, 1=recurse through folders if the resource is a folder.
&#x9;&#x9;recurseDependencies&#x9;- 0=no recurse, 1=recurse through all dependencies of the given resource and update them with the privileges assigned to their parent.
&#x9;&#x9;recurseDependents &#x9;- 0=no recurse, 1=recurse through all dependents of the given resource and update them with the privileges assigned to the resource passed in.
&#x9;&#x9;mode &#x9;&#x9;&#x9;&#x9;- &quot;OVERWRITE_APPEND&quot;=Only apply modification, &quot;SET_EXACTLY&quot;=Make child resources look like this resource. 
&#x9;&#x9;&#x9;&#x9;When &quot;mode&quot;is &quot;OVERWRITE_APPEND&quot;, or is not supplied, privileges are applied on a
&#x9;&#x9;&#x9;&#x9;&#x9;per-user or per-group basis, so that updating privileges for one user or group does not
&#x9;&#x9;&#x9;&#x9;&#x9;alter privileges from any other user or group.  The privileges applied for a user or
&#x9;&#x9;&#x9;&#x9;&#x9;group replace the previous value for that user or group. 
&#x9;&#x9;&#x9;&#x9;When &quot;mode&quot; is &quot;SET_EXACTLY&quot;, all privileges on the resource are made to look exactly like the provided privileges.
&#x9;&#x9;privilegeStr&#x9;&#x9;- LONGVARCHAR, -- domainName::name::nameType::privilegeList| [repeat row]
&#x9;&#x9;logOutput - the current log output value
&#x9;Output:
&#x9;&#x9;logOutput - the appended log output value.  Will only be set if inDebug=Y
&#x9;&#x9;result&#x9;- null if no error else an error string
&#x9;Exceptions:  none

&#x9;Modified Date:&#x9;Modified By:&#x9;&#x9;CSW Version:&#x9;Reason:
&#x9;11/07/2013&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;6.2.0&#x9;&#x9;&#x9;Created new
&#x9;07/15/2016&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.3&#x9;&#x9;&#x9;Removed use of vectors to improve performance and reduce memory leak issues.
&#x9;05/16/2017&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.5&#x9;&#x9;&#x9;Adapted for Data Abstraction Best Practices.

&#x9;(c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.

---------------------------------------------------------------------------------
/services/webservices/system/admin/resource/operations/updateResourcePrivileges:
----------------------------------------------------------------------------------
Set the privilege information for a list of resources.

Only a user with GRANT privilege on a resource can modify the privileges for that
resource.  The owner of a resource always has GRANT privilege, as do users with the
MODIFY_ALL_RESOURCES right.

When &quot;mode&quot; is &quot;OVERWRITE_APPEND&quot;, or is not supplied, privileges are applied on a
per-user or per-group basis, so that updating privileges for one user or group does not
alter privileges from any other user or group.  The privileges applied for a user or
group replace the previous value for that user or group. When &quot;mode&quot; is &quot;SET_EXACTLY&quot;,
all privileges on the resource are made to look exactly like the provided privileges.

When &quot;updateRecursively&quot; is &quot;false&quot;, the privileges are applied only the specified
resources.  When it is &quot;true&quot;, the privileges are recursively applied into any 
CONTAINER or DATA_SOURCE resource specified.  When recursively applying privileges, 
the privilege change is ignored for any resource the user lacks owner privileges for.

Privileges that are not applicable for a given resource type are automatically stripped
down to the set that is legal for each resource.  TABLE resources support NONE, READ,
WRITE, SELECT, INSERT, UPDATE, and DELETE.  PROCEDURE resources support NONE, READ,
WRITE, and EXECUTE.  All other resource types only support NONE, READ, and WRITE.

The &quot;combinedPrivs&quot; and &quot;inheritedPrivs&quot; elements on each &quot;privilegeEntry&quot; will be
ignored and can be left unset.

Request Elements:
    updateRecursively: If &quot;true&quot;, then all children of the given resources will
       recursively be updated with the privileges assigned to their parent.
    updateDependenciesRecursively: If &quot;true&quot;, then all dependencies of the given resources will
       recursively be updated with the privileges assigned to their parent.
    privilegeEntries: A list of resource names, types, and the privileges.
    mode (optional): Determines whether privileges are merged with existing ones,
       default is &quot;OVERWRITE_APPEND&quot;, which merges and does not update privileges for
       users or groups not mentioned.  &quot;SET_EXACTLY&quot; makes privileges look exactly like
       those provided in the call.

Response Elements:
    N/A

Faults:
    IllegalArgument: If any path is malformed or any type or privilege entry is illegal,
       or mode is not one of the legal values.
    NotAllowed: If an attempt is made to use this operation with an insufficient license.
    NotFound: If a path refers to a resource that does not exist.
    NotFound: If an unknown domain is provided.
    NotFound: If an unknown user is provided.
    NotFound: If an unknown group is provided.
    Security: If for a given entry path the user does not have READ access on any item
       in a path other than the last item, or does not have GRANT access on the last item.
    Security: If the user does not have the ACCESS_TOOLS right.
*/
PROCEDURE updateResourcePrivilegesV4(
&#x9;IN inDebug &#x9;&#x9;&#x9;&#x9;CHAR(1),&#x9; -- Y or N (default).  Determines whether to capture any debug output and return it in logOutput.
&#x9;IN inDebugConsole&#x9;&#x9;CHAR(1), &#x9; -- Y or N (default).  Determines whether to print the studio console window or not.
&#x9;IN inDebugCISLog&#x9;&#x9;CHAR(1), &#x9; -- Y or N (default).  Determines whether to print to the CIS log or not.
&#x9;IN owner&#x9;&#x9;&#x9;&#x9;VARCHAR(255),-- Owner should be set to the name of the user which should own all the objects
&#x9;IN ownerDomain&#x9;&#x9;&#x9;VARCHAR(255),-- Domain for owner - default is &apos;composite&apos;
&#x9;IN resourcePath&#x9;&#x9;&#x9;VARCHAR(4000),-- full resource path to the composite resource
&#x9;IN resourceType &#x9;&#x9;VARCHAR(255),-- resource type e.g. CONTAINER, DATA_SOURCE, PROCEDURE, VIEW
&#x9;IN recurse &#x9;&#x9;&#x9;&#x9;BIT,&#x9; &#x9; -- 0=no recurse, 1=recurse through folders if the resource is a folder.
&#x9;IN recurseDependencies&#x9;BIT,&#x9;&#x9; -- 0=no recurse, 1=recurse through all dependencies of the given resource and update them with the privileges assigned to their parent.
&#x9;IN recurseDependents&#x9;BIT,&#x9;&#x9; -- 0=no recurse, 1=recurse through all dependents of the given resource and update them with the privileges assigned to the resource passed in.
&#x9;IN mode&#x9;&#x9;&#x9;&#x9;&#x9;VARCHAR(255),-- &quot;OVERWRITE_APPEND&quot;=Only apply modification, &quot;SET_EXACTLY&quot;=Make child resources look like this resource. 
&#x9;IN privilegeStr&#x9;&#x9;&#x9;LONGVARCHAR, -- domainName::name::nameType::privilegeList| [repeat row]
&#x9;INOUT logOutput&#x9;&#x9;&#x9;LONGVARCHAR,
&#x9;OUT result&#x9;&#x9;&#x9;&#x9;LONGVARCHAR
)
BEGIN
&#x9;DECLARE moduleName &#x9;&#x9;&#x9;&#x9;VARCHAR DEFAULT &apos;updateResourcePrivilegesV4&apos;;
&#x9;DECLARE debug&#x9;&#x9;&#x9;&#x9;&#x9;CHAR(1) DEFAULT NVL(UPPER(inDebug),&apos;N&apos;);
&#x9;DECLARE debugConsole&#x9;&#x9;&#x9;CHAR(1) DEFAULT NVL(UPPER(inDebugConsole),&apos;N&apos;);
&#x9;DECLARE debugCISLog&#x9;&#x9;&#x9;&#x9;CHAR(1) DEFAULT NVL(UPPER(inDebugCISLog),&apos;N&apos;);
&#x9;DECLARE localDebug&#x9;&#x9;&#x9;&#x9;CHAR(1) DEFAULT &apos;N&apos;;
&#x9;DECLARE error &#x9;&#x9;&#x9;&#x9;&#x9;LONGVARCHAR;
&#x9;DECLARE request &#x9;&#x9;&#x9;&#x9;LONGVARCHAR;
&#x9;DECLARE response &#x9;&#x9;&#x9;&#x9;XML;
&#x9;DECLARE fault &#x9;&#x9;&#x9;&#x9;&#x9;XML;
    DECLARE user_exists &#x9;&#x9;&#x9;BOOLEAN;
&#x9;DECLARE message &#x9;&#x9;&#x9;&#x9;LONGVARCHAR;
&#x9;DECLARE padChar&#x9;&#x9;&#x9;&#x9;&#x9;CHAR(1) DEFAULT &apos; &apos;;
&#x9;DECLARE privilegesXML&#x9;&#x9;&#x9;VARCHAR;
&#x9;DECLARE privilegeListStr&#x9;&#x9;VARCHAR;
&#x9;DECLARE privilegeNameList&#x9;&#x9;LONGVARCHAR DEFAULT &apos; &apos;;
&#x9;DECLARE priv&#x9;&#x9;&#x9;&#x9;&#x9;VARCHAR(4000);
&#x9;DECLARE privItem&#x9;&#x9;&#x9;&#x9;VARCHAR(4000);
&#x9;DECLARE resExists&#x9;&#x9;&#x9;&#x9;BOOLEAN;
&#x9;DECLARE resourceName&#x9;&#x9;&#x9;VARCHAR;
&#x9;DECLARE parentPath&#x9;&#x9;&#x9;&#x9;LONGVARCHAR;
&#x9;DECLARE getPrivsResourcePath&#x9;LONGVARCHAR;
&#x9;DECLARE pos&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;INTEGER;
&#x9;DECLARE j,k&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;INTEGER;
&#x9;DECLARE start2&#x9;&#x9;&#x9;&#x9;&#x9;INTEGER;
&#x9;DECLARE pos1,pos2,lastpos1&#x9;&#x9;INTEGER;
&#x9;DECLARE object&#x9;&#x9;&#x9;&#x9;&#x9;VARCHAR(4000);
&#x9;DECLARE moreToDo1,moreToDo2&#x9;&#x9;BOOLEAN;
&#x9;DECLARE objectList1,objectList2&#x9;LONGVARCHAR;
&#x9;DECLARE expression1,expression2&#x9;VARCHAR;
&#x9;DECLARE explen1,explen2,poslen&#x9;INTEGER;
    DECLARE ex&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXCEPTION; &#x9;
   /*
    * The resourcelist is an array of resources - usually folders (CONTAINER) and virtual
    * databases (DATA_SOURCE).  For each resource, an array is provided with the users or
    * groups who can access that resource, and a set of resource privileges for each.
    * If the recurse flag is &apos;1&apos; the same permissions will be applied to sub-resources.
    */
&#x9;DECLARE TYPE privsType&#x9;ROW(&#x9; -- Array (vector) of privileges to be set for a given resource path/tpye.
&#x9;&#x9;domainName&#x9;&#x9;&#x9;VARCHAR(255),-- composite domain
&#x9;&#x9;name&#x9;&#x9;&#x9;&#x9;VARCHAR(255),-- name of the user or group to assign the privilege
&#x9;&#x9;nameType&#x9;&#x9;&#x9;VARCHAR(255),-- USER or GROUP
&#x9;&#x9;privilegeList&#x9;&#x9;VARCHAR(255) -- space separated list of privileges: NONE or READ WRITE SELECT EXECUTE INSERT UPDATE DELETE GRANT
&#x9;);
&#x9;DECLARE privRec&#x9;&#x9;&#x9;privsType;
    DECLARE resourcelist&#x9;ROW(resource VARCHAR, resourceType VARCHAR, recurse CHAR(1), recurseDependencies CHAR(1), recurseDependents CHAR(1), mode VARCHAR, resourcePrivs LONGVARCHAR);
/*
(&apos;/shared&apos;, &apos;CONTAINER&apos;, &apos;1&apos;, VECTOR[ (&apos;vipsuser&apos;, &apos;composite&apos;, &apos;GROUP&apos;, &apos;READ SELECT EXECUTE&apos;) ]),
(&apos;/shared/ASAssets/BestPractices+v81&apos;, &apos;CONTAINER&apos;, &apos;1&apos;, VECTOR[  (&apos;vipsuser&apos;, &apos;composite&apos;, &apos;GROUP&apos;, &apos;READ SELECT EXECUTE INSERT UPDATE DELETE&apos;)    ]),
(&apos;/shared/ASAssets/Utilities&apos;, &apos;CONTAINER&apos;, &apos;1&apos;, VECTOR[      (&apos;vipsuser&apos;, &apos;composite&apos;, &apos;GROUP&apos;, &apos;READ SELECT EXECUTE INSERT UPDATE DELETE&apos;)    ]),

(&apos;/services/databases/VIPSAPP&apos;, &apos;DATA_SOURCE&apos;, &apos;1&apos;, VECTOR[(&apos;vipsuser&apos;, &apos;composite&apos;, &apos;GROUP&apos;, &apos;READ SELECT EXECUTE INSERT UPDATE DELETE&apos;) ]),
(&apos;/shared/VIPS_02&apos;, &apos;CONTAINER&apos;, &apos;1&apos;, VECTOR[ (&apos;vipsuser&apos;, &apos;composite&apos;, &apos;GROUP&apos;, &apos;READ SELECT EXECUTE INSERT UPDATE DELETE&apos;)  ]),
(&apos;/shared/VIPS_03&apos;, &apos;CONTAINER&apos;, &apos;1&apos;, VECTOR[ (&apos;vipsuser&apos;, &apos;composite&apos;, &apos;GROUP&apos;, &apos;READ SELECT EXECUTE INSERT UPDATE DELETE&apos;)  ]),
(&apos;/shared/VIPS_DataSources&apos;, &apos;CONTAINER&apos;, &apos;1&apos;, VECTOR[ (&apos;vipsuser&apos;, &apos;composite&apos;, &apos;GROUP&apos;, &apos;READ SELECT EXECUTE INSERT UPDATE DELETE&apos;)  ]),


(&apos;/services/webservices/spiral1&apos;, &apos;CONTAINER&apos;, &apos;1&apos;, VECTOR[  (&apos;vipsuser&apos;, &apos;composite&apos;, &apos;GROUP&apos;, &apos;READ SELECT EXECUTE INSERT UPDATE DELETE&apos;)   ]),
(&apos;/services/webservices/vipsApplicationWS_v1_1&apos;, &apos;DATA_SOURCE&apos;, &apos;1&apos;, VECTOR[  (&apos;vipsuser&apos;, &apos;composite&apos;, &apos;GROUP&apos;, &apos;READ SELECT EXECUTE INSERT UPDATE DELETE&apos;)   ]),
(&apos;/services/webservices/vipsMedicalPrescreenFormWS_v1_1&apos;, &apos;DATA_SOURCE&apos;, &apos;1&apos;, VECTOR[ (&apos;vipsuser&apos;, &apos;composite&apos;, &apos;GROUP&apos;, &apos;READ SELECT EXECUTE INSERT UPDATE DELETE&apos;)    ]),
(&apos;/services/webservices/vipsMedicalPrescreenWS_v1_1&apos;, &apos;DATA_SOURCE&apos;, &apos;1&apos;, VECTOR[  (&apos;vipsuser&apos;, &apos;composite&apos;, &apos;GROUP&apos;, &apos;READ SELECT EXECUTE INSERT UPDATE DELETE&apos;)     ]),
(&apos;/services/webservices/vipsStatusWS_v1_1&apos;, &apos;DATA_SOURCE&apos;, &apos;1&apos;, VECTOR[  (&apos;vipsuser&apos;, &apos;composite&apos;, &apos;GROUP&apos;, &apos;READ SELECT EXECUTE INSERT UPDATE DELETE&apos;)    ])    ];
*/
&#x9;set result = null;
&#x9;-- Initialize logOutput
&#x9;IF (logOutput IS NULL) THEN
&#x9;&#x9;set logOutput = &apos;&apos;;
&#x9;END IF;

  BEGIN INDEPENDENT TRANSACTION

&#x9;-- Validate resource path and type
&#x9;if ((resourcePath is not null and LENGTH(resourcePath) &gt; 0) and (resourceType is not null and LENGTH(resourceType) &gt; 0)) then
&#x9;&#x9;if (resourceType != &apos;COLUMN&apos;) then
&#x9;&#x9;&#x9;call /lib/resource/ResourceExists(resourcePath, resourceType, null, resExists);
&#x9;&#x9;&#x9;if (not resExists) then
&#x9;&#x9;&#x9;&#x9;raise ex value &apos;The specified resource does not exist. path=&apos;||resourcePath||&apos;  type=&apos;||resourceType;
&#x9;&#x9;&#x9;end if;
&#x9;&#x9;end if;
&#x9;else
&#x9;&#x9;raise ex value &apos;The specified resource path or type cannot be null or empty.&apos;;
&#x9;end if;

&#x9;-- Build the resource list vector
&#x9;set resourcelist.resource = resourcePath;
&#x9;set resourcelist.resourceType = resourceType;
&#x9;set resourcelist.resourcePrivs = privilegeStr;

&#x9;-- Validate recurse and set the default to 0 if needed
&#x9;set resourcelist.recurse = &apos;0&apos;;
&#x9;if (recurse is not null and (recurse = 1 or recurse = 0)) then
&#x9;&#x9;set resourcelist.recurse = CAST(recurse AS VARCHAR);
&#x9;end if;

&#x9;-- Validate recurseDependencies and set the default to 0 if needed
&#x9;set resourcelist.recurseDependencies = &apos;0&apos;;
&#x9;if (recurseDependencies is not null and (recurseDependencies = 1 or recurseDependencies = 0)) then
&#x9;&#x9;set resourcelist.recurseDependencies = CAST(recurseDependencies AS VARCHAR);
&#x9;end if;

&#x9;-- Validate recurseDependents and set the default to 0 if needed
&#x9;set resourcelist.recurseDependents = &apos;0&apos;;
&#x9;if (recurseDependents is not null and (recurseDependents = 1 or recurseDependents = 0)) then
&#x9;&#x9;set resourcelist.recurseDependents = CAST(recurseDependents AS VARCHAR);
&#x9;end if;

&#x9;-- Validate the mode and set the default to &quot;OVERWRITE_APPEND&quot; if needed
&#x9;set resourcelist.mode = &apos;OVERWRITE_APPEND&apos;;
&#x9;if (mode is not null and (UPPER(mode) = &apos;OVERWRITE_APPEND&apos; or UPPER(mode) = &apos;SET_EXACTLY&apos;)) then
&#x9;&#x9;set resourcelist.mode = UPPER(mode);
&#x9;end if;

&#x9;-- Validate the list of privileges
&#x9;IF (debug = &apos;Y&apos;) THEN
&#x9;&#x9;IF (privilegeStr IS NULL OR LENGTH(TRIM(privilegeStr)) = 0) THEN
&#x9;&#x9;&#x9;set message = &apos;LENGTH(privilegeStr)=0 --- EMPTY: NO PRIVILEGES TO APPLY&apos;;
&#x9;&#x9;ELSE
&#x9;&#x9;&#x9;set message = &apos;LENGTH(privilegeStr)=&apos; || CAST(LENGTH(TRIM(privilegeStr)) AS VARCHAR);
&#x9;&#x9;END IF;
&#x9;&#x9;call /shared/ASAssets/BestPractices_v81/PrivilegeScripts/Helpers/addLogOutput(debugConsole, debugCISLog, logOutput, moduleName||&apos; : &apos;||message||chr(10), logOutput);
&#x9;END IF;
/*
    * Step three: Display the existing privileges
 &#x9;&#x9;   OUT result CURSOR (
&#x9;&#x9;&#x9;&#x9;&quot;domain&quot; VARCHAR(32768), 
&#x9;&#x9;&#x9;&#x9;name VARCHAR(32768), 
&#x9;&#x9;&#x9;&#x9;nameType VARCHAR(32768), 
&#x9;&#x9;&#x9;&#x9;privs VARCHAR(32768), 
&#x9;&#x9;&#x9;&#x9;combinedPrivs VARCHAR(32768), 
&#x9;&#x9;&#x9;&#x9;inheritedPrivs VARCHAR(32768)
   &#x9;&#x9;     )
*/
&#x9;IF (privilegeStr IS NOT NULL AND LENGTH(TRIM(privilegeStr)) &gt; 0) THEN

&#x9;&#x9;IF (debug = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;set message = &apos;EXISTING PRIVILEGES FOR PATH: &apos; || TRIM(NVL(resourcelist.resource,&apos; &apos;));
&#x9;&#x9;&#x9;call /shared/ASAssets/BestPractices_v81/PrivilegeScripts/Helpers/addLogOutput(debugConsole, debugCISLog, logOutput, moduleName||&apos; : &apos;||message||chr(10), logOutput);
&#x9;&#x9;END IF;

&#x9;&#x9;IF (debug = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;set message = &#x9;&apos;EXISTING PRIVILEGES:&apos; || 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;RPAD(&apos;domain&apos;,12,padChar) ||&apos; &apos;||
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;RPAD(&apos;name&apos;,50,padChar) || &apos; &apos;||
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;RPAD(&apos;type&apos;,5,padChar) || &apos; &apos;||
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;RPAD(&apos;privs&apos;,55,padChar) || &apos; &apos;||
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;RPAD(&apos;combinedPrivs&apos;,55,padChar) || &apos; &apos;||
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;RPAD(&apos;inheritedPrivs&apos;,55,padChar);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;
&#x9;&#x9;&#x9;call /shared/ASAssets/BestPractices_v81/PrivilegeScripts/Helpers/addLogOutput(debugConsole, debugCISLog, logOutput, moduleName||&apos; : &apos;||message||chr(10), logOutput);
&#x9;&#x9;END IF;

&#x9;&#x9;IF (debug = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;set message = &#x9;&apos;EXISTING PRIVILEGES:&apos; || 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;RPAD(&apos;-&apos;,12,&apos;-&apos;) ||&apos; &apos;||
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;RPAD(&apos;-&apos;,50,&apos;-&apos;) || &apos; &apos;||
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;RPAD(&apos;-&apos;,5,&apos;-&apos;) || &apos; &apos;||
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;RPAD(&apos;-&apos;,55,&apos;-&apos;) || &apos; &apos;||
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;RPAD(&apos;-&apos;,55,&apos;-&apos;) || &apos; &apos;||
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;RPAD(&apos;-&apos;,55,&apos;-&apos;);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;
&#x9;&#x9;&#x9;call /shared/ASAssets/BestPractices_v81/PrivilegeScripts/Helpers/addLogOutput(debugConsole, debugCISLog, logOutput, moduleName||&apos; : &apos;||message||chr(10), logOutput);
&#x9;&#x9;END IF;

&#x9;&#x9;/*
&#x9;&#x9;Get Lineage for Published Resource Column
&#x9;&#x9;&#x9;If resourcePath in /services/databases and resourceType = COLUMN then get the lineage to the view immediately publishing to the database.  
&#x9;&#x9;&#x9;This is where the actual privileges are set
&#x9;&#x9;*/
&#x9;&#x9;SET getPrivsResourcePath = resourcelist.resource;
&#x9;&#x9;IF (POSITION(&apos;/services/databases/&apos; IN getPrivsResourcePath) &gt; 0 AND resourcelist.resourceType = &apos;COLUMN&apos;) THEN
&#x9;&#x9;&#x9;SET resourceName = null;
&#x9;&#x9;&#x9;SET parentPath = null;
&#x9;&#x9;&#x9;SET pos = INSTR(getPrivsResourcePath, &apos;/&apos;, -1, 1);
&#x9;&#x9;&#x9;IF (pos &gt; 0) THEN
&#x9;&#x9;&#x9;&#x9;SET resourceName = SUBSTRING(getPrivsResourcePath, pos+1);
&#x9;&#x9;&#x9;&#x9;SET parentPath = SUBSTRING(getPrivsResourcePath, 1, pos-1);
&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;-- Retrieve the first level depth resource
&#x9;&#x9;&#x9;FOR r AS select * from /shared/ASAssets/Utilities/repository/getUsedResourcesCursor(parentPath, &apos;LINK&apos;) DO
&#x9;&#x9;&#x9;&#x9;set getPrivsResourcePath = r.resourcePath||&apos;/&apos;||resourceName;
&#x9;&#x9;&#x9;END FOR;
&#x9;&#x9;END IF;

&#x9;/*  getResourcePrivilegesV2:
&#x9;        resourcePath - path to resource
&#x9;&#x9;&#x9;resourceType - type of resource (e.g. LINK, CONTAINER, TABLE, PROCEDURE, TREE, DEFINITION_SET, TRIGGER, etc.)
&#x9;&#x9;&#x9;nameTypeFilter - (optional) A filter that is set to null, USER or GROUP.
&#x9;&#x9;&#x9;domainFilter - (optional) A filter that is set to null or the domain such as composite, dynamic or an LDAP domain name.
&#x9;&#x9;&#x9;privilegeEntryType&#x9;- [mandatory:  privs, combinedPrivs, inheritedPrivs] 1 of the selection list.  
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   privs=the actual privileges. 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   combinedPrivs=Combination of actual privileges and inherited privileges.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   inheritedPrivs=Inherited privileges.
&#x9;&#x9;&#x9;includeNameEqualFilter - (optional) A comma separated filter list that is used to retrieve privileges where the &quot;name =&quot; the incoming string.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;When a list of names are passed in the where clause constructs &quot;OR&quot; statements where (name = &apos;name1&apos; or nanme = &apos;name2&apos;).
&#x9;&#x9;&#x9;includeNameLikeFilter - (optional) A comma separated filter list that is used to retrieve privileges where the &quot;name LIKE&quot; the incoming string.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;When a list of name are passed in the where clause constructs &quot;OR&quot; statements where (name LIKE &apos;name%&apos; or name LIKE &apos;myname%&apos;).
&#x9;&#x9;&#x9;excludeNameNotEqualFilter - (optional) A comma separated filter list that is used to retrieve privileges where the &quot;name !=&quot; to the incoming string.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;When a list of name are passed in the where clause constructs &quot;AND&quot; statements where name != &apos;name&apos; AND name != &apos;myname&apos;.
&#x9;&#x9;&#x9;excludeNameNotLikeFilter - (optional) A comma separated filter list that is used to retrieve privileges where the &quot;name NOT LIKE&quot; the incoming string.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;When a list of name are passed in the where clause constructs &quot;AND&quot; statements where name NOT LIKE &apos;name%&apos; AND name NOT LIKE &apos;myname%&apos;.
&#x9;&#x9;&#x9;includePrivsEqualFilter - (optional) A comma separated filter list that is used to retrieve privileges where the &quot;combinedPrivs =&quot; the incoming string.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;When a list of privs are passed in the where clause constructs &quot;OR&quot; statements where (combinedPrivs = &apos;NONE&apos; or combinedPrivs = &apos;READ&apos;).
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;combinedPrivs&quot; should be in this order: READ WRITE EXECUTE SELECT UPDATE INSERT DELETE GRANT
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;       &quot;combinedPrivs&quot; with no settings: NONE
&#x9;&#x9;&#x9;includePrivsLikeFilter - (optional) A comma separated filter list that is used to retrieve privileges where the &quot;combinedPrivs LIKE&quot; the incoming string.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;When a list of privs are passed in the where clause constructs &quot;OR&quot; statements where (combinedPrivs LIKE &apos;READ EXECUTE%&apos; or combinedPrivs LIKE &apos;READ%&apos;).
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;combinedPrivs&quot; should be in this order: READ WRITE EXECUTE SELECT UPDATE INSERT DELETE GRANT
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;       &quot;combinedPrivs&quot; with no settings: NONE
&#x9;&#x9;&#x9;excludePrivsNotEqualFilter - (optional) A comma separated filter list that is used to retrieve privileges where the &quot;combinedPrivs !=&quot; to the incoming string.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;When a list of privs are passed in the where clause constructs &quot;AND&quot; statements where combinedPrivs != &apos;NONE&apos; AND combinedPrivs != &apos;READ&apos;.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;combinedPrivs&quot; should be in this order: READ WRITE EXECUTE SELECT UPDATE INSERT DELETE GRANT
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;       &quot;combinedPrivs&quot; with no settings: NONE
&#x9;&#x9;&#x9;excludePrivsNotLikeFilter - (optional) A comma separated filter list that is used to retrieve privileges where the &quot;combinedPrivs NOT LIKE&quot; the incoming string.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;When a list of privs are passed in the where clause constructs &quot;AND&quot; statements where combinedPrivs NOT LIKE &apos;READ EXECUTE%&apos; AND combinedPrivs NOT LIKE &apos;READ%&apos;.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;combinedPrivs&quot; should be in this order: READ WRITE EXECUTE SELECT UPDATE INSERT DELETE GRANT
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;       &quot;combinedPrivs&quot; with no settings: NONE
&#x9;&#x9;&#x9;includeColumnPrivs - (optional) A bit (1 or 0) that instructs whether to return column level privileges for resources such as tables that contain columns.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;1=yes include column privileges, 0=no do not include column privileges
&#x9;&#x9;&#x9;debug - (optional) A char(1) (null, Y or N) indicating whether to output debug statements like the SQL Stateement that will be executed.
&#x9;&#x9;*/
&#x9;&#x9;IF (debug = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;for r as select * 
&#x9;&#x9;&#x9;&#x9;from /shared/ASAssets/BestPractices_v81/PrivilegeScripts/Helpers/getResourcePrivileges(getPrivsResourcePath,resourcelist.resourceType,NULL,NULL,&apos;privs&apos;,NULL,NULL,NULL,NULL,NULL,NULL,&apos;NONE&apos;,NULL,NULL,&apos;N&apos;)
&#x9;&#x9;&#x9;&#x9;order by nameType, name
&#x9;&#x9;&#x9;do
&#x9;&#x9;&#x9;&#x9;&#x9;set message = &apos;EXISTING PRIVILEGES:&apos; || 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;RPAD(r.&quot;domain&quot;,12,padChar) ||&apos; &apos;||
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;RPAD(r.name,50,padChar) || &apos; &apos;||
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;RPAD(r.nameType,5,padChar) || &apos; &apos;||
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;RPAD(r.privs,55,padChar) || &apos; &apos;||
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;RPAD(r.combinedPrivs,55,padChar) || &apos; &apos;||
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;RPAD(r.inheritedPrivs,55,padChar);&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;
&#x9;&#x9;&#x9;&#x9;&#x9;call /shared/ASAssets/BestPractices_v81/PrivilegeScripts/Helpers/addLogOutput(debugConsole, debugCISLog, logOutput, moduleName||&apos; : &apos;||message||chr(10), logOutput);
&#x9;&#x9;&#x9;end for;
&#x9;&#x9;END IF;

&#x9;   /*
&#x9;&#x9;* Step three: Assign privileges and ownership to all resources
&#x9;&#x9;*/
&#x9;&#x9;IF (debug = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;set message = &apos;Assigning PRIVILEGES TO: &apos; || TRIM(NVL(resourcelist.resource,&apos; &apos;));
&#x9;&#x9;&#x9;call /shared/ASAssets/BestPractices_v81/PrivilegeScripts/Helpers/addLogOutput(debugConsole, debugCISLog, logOutput, moduleName||&apos; : &apos;||message||chr(10), logOutput);
&#x9;&#x9;END IF;

&#x9;&#x9;BEGIN
&#x9;&#x9;&#x9;DECLARE privs LONGVARCHAR DEFAULT &apos;&apos;;
&#x9;&#x9;&#x9;set j = 1;
&#x9;&#x9;&#x9;-- Extract the object from the object list
&#x9;&#x9;&#x9;SET objectList1 = privilegeStr;
&#x9;&#x9;&#x9;SET expression1 = &apos;|&apos;;
&#x9;&#x9;&#x9;SET explen1 = length(expression1);
&#x9;&#x9;&#x9;SET moreToDo1 = true;
&#x9;&#x9;&#x9;SET j = 0;
&#x9;&#x9;&#x9;WHILE (moreToDo1) DO
&#x9;&#x9;&#x9;&#x9;-- Extract the source column type
&#x9;&#x9;&#x9;&#x9;set j = j + 1;
&#x9;&#x9;&#x9;&#x9;SET object = null;
&#x9;&#x9;&#x9;&#x9;IF (j = 1) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;SET pos1 = INSTR(objectList1, expression1, 1, j);
&#x9;&#x9;&#x9;&#x9;&#x9;IF (pos1 &gt; 0) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET object = SUBSTRING(objectList1, 1, pos1-1);
&#x9;&#x9;&#x9;&#x9;&#x9;ELSE
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IF (LENGTH(TRIM(objectList1)) &gt; 0) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET object = objectList1;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET moreToDo1 = false;
&#x9;&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;&#x9;ELSE
&#x9;&#x9;&#x9;&#x9;&#x9;SET pos1 = INSTR(objectList1, expression1, 1, j-1);
&#x9;&#x9;&#x9;&#x9;&#x9;SET pos2 = INSTR(objectList1, expression1, 1, j);
&#x9;&#x9;&#x9;&#x9;&#x9;IF (pos1 &gt; 0 and pos2 &gt; 0) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET object = SUBSTRING(objectList1, pos1+explen1, pos2-pos1-explen1);
&#x9;&#x9;&#x9;&#x9;&#x9;ELSEIF (pos1 &gt; 0 and pos2 = 0) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET object = SUBSTRING(objectList1, pos1+explen1);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET moreToDo1 = false;
&#x9;&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;&#x9;SET object = TRIM(object);
&#x9;&#x9;&#x9;&#x9;--CALL print(&apos;priv object=[&apos;||TRIM(NVL(object,&apos;  &apos;))||&apos;]&apos;);
&#x9;&#x9;&#x9;&#x9;IF (object IS NOT NULL and LENGTH(TRIM(object)) &gt; 0) then
&#x9;&#x9;&#x9;&#x9;&#x9;set priv = object;

&#x9;&#x9;&#x9;&#x9;&#x9;IF (localDebug = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;call print(moduleName||&apos;:: priv=&apos;||priv);
&#x9;&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;/*
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;domainName&#x9;&#x9;&#x9;VARCHAR(255),-- composite domain
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;name&#x9;&#x9;&#x9;&#x9;VARCHAR(255),-- name of the user or group to assign the privilege
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;nameType&#x9;&#x9;&#x9;VARCHAR(255),-- USER or GROUP
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;privilegeList&#x9;&#x9;VARCHAR(255) -- space separated list of privileges: NONE or READ WRITE SELECT EXECUTE INSERT UPDATE DELETE GRANT
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;*/
&#x9;&#x9;&#x9;&#x9;&#x9;-- Extract the object from the object list
&#x9;&#x9;&#x9;&#x9;&#x9;SET objectList2 = priv;
&#x9;&#x9;&#x9;&#x9;&#x9;SET expression2 = &apos;::&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;SET moreToDo2 = true;
&#x9;&#x9;&#x9;&#x9;&#x9;SET explen2 = length(expression2);
&#x9;&#x9;&#x9;&#x9;&#x9;SET start2 = 1;
&#x9;&#x9;&#x9;&#x9;&#x9;SET lastpos1 = 0;
&#x9;&#x9;&#x9;&#x9;&#x9;SET k = 0;
&#x9;&#x9;&#x9;&#x9;&#x9;WHILE (moreToDo2) DO
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;set k = k + 1;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET object = null;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IF (k = 1) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET pos1 = INSTR(objectList2, expression2, start2, 1);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--call print(&apos;&quot;privRow&quot; start2=&apos;||start2||&apos;  pos1=&apos;||pos1||&apos;  pos1-1=&apos;||CAST(pos1-1 AS VARCHAR));
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IF (pos1 &gt; 0) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET poslen = pos1-1;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IF (poslen &lt; 0) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET poslen = 0;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET object = SUBSTRING(objectList2, 1, poslen);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IF (LENGTH(TRIM(objectList2)) &gt; 0) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET object = objectList2;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET moreToDo2 = false;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET lastpos1 = pos1;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET start2 = lastpos1+explen2;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET pos2 = INSTR(objectList2, expression2, start2, 1);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--call print(&apos;&quot;privRow&quot; start2=&apos;||start2||&apos;  lastpos1=&apos;||lastpos1||&apos;  pos2=&apos;||pos2||&apos;  explen2=&apos;||explen2||&apos;  pos2-lastpos1-explen2=&apos;||CAST(pos2-lastpos1-explen2 AS VARCHAR));
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IF (lastpos1 &gt; 0 and pos2 &gt; 0) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET poslen = pos2-lastpos1-explen2;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IF (poslen &lt; 0) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET poslen = 0;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET object = SUBSTRING(objectList2, lastpos1+explen2, poslen);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSEIF (lastpos1 &gt; 0 and pos2 = 0) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET object = SUBSTRING(objectList2, lastpos1+explen2);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET moreToDo2 = false;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET lastpos1 = pos2;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET start2 = lastpos1+explen2;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET object = TRIM(object);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--CALL print(&apos;priv k=&apos;||k||&apos;  object=[&apos;||TRIM(NVL(object,&apos;  &apos;))||&apos;]&apos;);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;set privItem = object;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IF (localDebug = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;call print(moduleName||&apos;::    privItem=&apos;||privItem);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (k = 1) then
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;set privRec.domainName = privItem;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (k = 2) then
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;set privRec.name = privItem;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (k = 3) then
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;set privRec.nameType = privItem;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (k = 4) then
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;set privRec.privilegeList = privItem;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;&#x9;END WHILE;

&#x9;&#x9;&#x9;&#x9;&#x9;-- Validate the required privilege fields - &quot;name&quot;
&#x9;&#x9;&#x9;&#x9;&#x9;if (privRec.name is null or LENGTH(TRIM(privRec.name)) = 0) then
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value &apos;Row=&apos;||cast(j as varchar)||&apos;  The &quot;privRec.name&quot; field cannot be null or empty.&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;&#x9;-- Validate the required privilege fields - &quot;domainName&quot;
&#x9;&#x9;&#x9;&#x9;&#x9;if (privRec.domainName is null or LENGTH(TRIM(privRec.domainName)) = 0) then
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value &apos;Row=&apos;||cast(j as varchar)||&apos;  The &quot;privRec.domainName&quot; field cannot be null or empty.&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;&#x9;-- Validate the required privilege fields - &quot;nameType&quot;
&#x9;&#x9;&#x9;&#x9;&#x9;if (privRec.nameType is null or LENGTH(TRIM(privRec.nameType)) = 0) then
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value &apos;Row=&apos;||cast(j as varchar)||&apos;  The &quot;privRec.nameType&quot; field cannot be null or empty.&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;ELSE
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (UPPER(privRec.nameType) != &apos;USER&apos; and UPPER(privRec.nameType) != &apos;GROUP&apos;) then
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value &apos;Row=&apos;||cast(j as varchar)||&apos;  The &quot;privRec.nameType&quot; field must be either &quot;USER&quot; or &quot;GROUP&quot;.&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;end if;&#x9;
&#x9;&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;&#x9;-- Validate the required privilege fields - &quot;privilegeList&quot;
&#x9;&#x9;&#x9;&#x9;&#x9;if (privRec.privilegeList is null or LENGTH(TRIM(privRec.privilegeList)) = 0) then
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value &apos;Row=&apos;||cast(j as varchar)||&apos;  The &quot;privRec.privilegeList&quot; field cannot be null or empty.&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;end if;

&#x9;&#x9;&#x9;&#x9;&#x9;-- Set the complete list of names
&#x9;&#x9;&#x9;&#x9;&#x9;set privilegeNameList = privilegeNameList || privRec.name||&apos; &apos;;

&#x9;&#x9;&#x9;&#x9;&#x9;-- Make the name and domain are lower case when the domain is &quot;composite&quot;
&#x9;&#x9;&#x9;&#x9;&#x9;if (LOWER(privRec.domainName) = &apos;composite&apos;) then
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;set privRec.domainName = LOWER(privRec.domainName);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;set privRec.name = LOWER(privRec.name);
&#x9;&#x9;&#x9;&#x9;&#x9;end if;&#x9;&#x9;

&#x9;&#x9;&#x9;&#x9;&#x9;IF (debug = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;set message = &apos;    &apos; || TRIM(NVL(privRec.nameType,&apos; &apos;)) || &apos; &apos; || 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;TRIM(NVL(privRec.name,&apos; &apos;)) || &apos; SET TO: &apos; || TRIM(NVL(privRec.privilegeList,&apos; &apos;));
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;call /shared/ASAssets/BestPractices_v81/PrivilegeScripts/Helpers/addLogOutput(debugConsole, debugCISLog, logOutput, moduleName||&apos; : &apos;||message||chr(10), logOutput);
&#x9;&#x9;&#x9;&#x9;&#x9;END IF;

&#x9;&#x9;&#x9;&#x9;&#x9;SET privs = privs || &apos;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;ns1:privilege&gt;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;ns1:domain&gt;&apos; || privRec.domainname || &apos;&lt;/ns1:domain&gt;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;ns1:name&gt;&apos; || privRec.name || &apos;&lt;/ns1:name&gt;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;ns1:nameType&gt;&apos; || privRec.nameType || &apos;&lt;/ns1:nameType&gt;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;ns1:privs&gt;&apos; || TRIM(privRec.privilegeList) || &apos;&lt;/ns1:privs&gt;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/ns1:privilege&gt;&apos;;
&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;END WHILE;
&#x9;&#x9;&#x9;&#x9;  
&#x9;&#x9;&#x9;set request =
&#x9;&#x9;&#x9;   &apos;&lt;ns1:updateResourcePrivileges xmlns:ns1=&quot;http://www.compositesw.com/services/system/admin/resource&quot;
&#x9;&#x9;&#x9;&#x9;&#x9; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot;
&#x9;&#x9;&#x9;&#x9;&#x9; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;
&#x9;&#x9;&#x9;&#x9;   &lt;ns1:updateRecursively&gt;&apos; || resourcelist.recurse || &apos;&lt;/ns1:updateRecursively&gt;
&apos;;
&#x9;&#x9;&#x9;if (resourcelist.recurseDependencies = 1) then
&#x9;&#x9;&#x9;&#x9;set request = request ||
&apos;                   &lt;ns1:updateDependenciesRecursively&gt;&apos; || resourcelist.recurseDependencies || &apos;&lt;/ns1:updateDependenciesRecursively&gt;
&apos;;
&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;if (resourcelist.recurseDependents = 1) then
&#x9;&#x9;&#x9;&#x9;set request = request ||
&apos;                   &lt;ns1:updateDependentsRecursively&gt;&apos; || resourcelist.recurseDependents || &apos;&lt;/ns1:updateDependentsRecursively&gt;
&apos;;
&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;set request = request ||
&apos;                   &lt;ns1:privilegeEntries&gt;
&#x9;&#x9;&#x9;&#x9;&#x9; &lt;ns1:privilegeEntry&gt;
&#x9;&#x9;&#x9;&#x9;&#x9;   &lt;ns1:path&gt;&apos; || resourcelist.resource || &apos;&lt;/ns1:path&gt;
&#x9;&#x9;&#x9;&#x9;&#x9;   &lt;ns1:type&gt;&apos; || resourcelist.resourceType || &apos;&lt;/ns1:type&gt;
&#x9;&#x9;&#x9;&#x9;&#x9;   &lt;ns1:privileges&gt;&apos; || privs || &apos;
&#x9;&#x9;&#x9;&#x9;&#x9;   &lt;/ns1:privileges&gt;
&#x9;&#x9;&#x9;&#x9;&#x9; &lt;/ns1:privilegeEntry&gt;
&#x9;&#x9;&#x9;&#x9;   &lt;/ns1:privilegeEntries&gt;
&#x9;&#x9;&#x9;&#x9;   &lt;ns1:mode&gt;&apos;||resourcelist.mode||&apos;&lt;/ns1:mode&gt;
&#x9;&#x9;&#x9;&#x9;&lt;/ns1:updateResourcePrivileges&gt;&apos;;

&#x9;&#x9;&#x9;IF (debug = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;&#x9;--call print(request);  -- Print the full XML with carriage return / line feed.
&#x9;&#x9;&#x9;&#x9;set message = TRIM(NVL(request,&apos; &apos;)) || CHR(10); -- This version of the print trims out carriage return and line feeds so it prints the XML on one line.
&#x9;&#x9;&#x9;&#x9;call /shared/ASAssets/BestPractices_v81/PrivilegeScripts/Helpers/addLogOutput(debugConsole, debugCISLog, logOutput, moduleName||&apos; : &apos;||message||chr(10), logOutput);
&#x9;&#x9;&#x9;END IF;

&#x9;&#x9;&#x9;CALL /services/webservices/system/admin/resource/operations/updateResourcePrivileges(request, response, fault);
&#x9;&#x9;&#x9;if (fault is not null) then
&#x9;&#x9;&#x9;&#x9;raise ex value CAST(fault as LONGVARCHAR);
&#x9;&#x9;&#x9;end if;
&#x9;&#x9;EXCEPTION                     
&#x9;&#x9;&#x9;WHEN System.SOAPFaultException THEN
&#x9;&#x9;&#x9;&#x9;set message = &apos;&apos;;
&#x9;&#x9;&#x9;&#x9;IF (CURRENT_EXCEPTION.NAME IS NOT NULL) THEN set message = message || &apos;NAME=&apos;||CURRENT_EXCEPTION.NAME; END IF;
&#x9;&#x9;&#x9;&#x9;IF (CURRENT_EXCEPTION.ID IS NOT NULL) THEN set message = message || &apos;  ID=&apos;||CAST(CURRENT_EXCEPTION.ID AS VARCHAR); END IF;
&#x9;&#x9;&#x9;&#x9;IF (CURRENT_EXCEPTION.MESSAGE IS NOT NULL) THEN set message = message || &apos;  MESSAGE=&apos;||CURRENT_EXCEPTION.MESSAGE; END IF;
&#x9;&#x9;&#x9;&#x9;IF (CURRENT_EXCEPTION.TRACE IS NOT NULL) THEN set message = message || &apos;  TRACE=&apos;||CURRENT_EXCEPTION.TRACE; END IF;
&#x9;&#x9;&#x9;&#x9;set message = &apos;EXCEPTION: &apos; || message;
&#x9;&#x9;&#x9;&#x9;call /shared/ASAssets/BestPractices_v81/PrivilegeScripts/Helpers/addLogOutput(debugConsole, debugCISLog, logOutput, moduleName||&apos; : &apos;||message||chr(10), logOutput);
&#x9;&#x9;&#x9;RAISE;                                   
&#x9;&#x9;END;
 
&#x9;&#x9;-- Change the ownership of the resource if it is not a COLUMN
&#x9;&#x9;if (resourcelist.resourceType != &apos;COLUMN&apos; and owner is not null and LENGTH(owner) &gt; 0 and ownerDomain is not null and LENGTH(ownerDomain) &gt; 0) then
&#x9;&#x9;&#x9;IF (debug = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;&#x9;set message = &apos;Assigning ownership FOR &apos;||TRIM(NVL(owner,&apos; &apos;))||&apos; TO &apos; || TRIM(NVL(resourcelist.resource,&apos; &apos;));
&#x9;&#x9;&#x9;&#x9;call /shared/ASAssets/BestPractices_v81/PrivilegeScripts/Helpers/addLogOutput(debugConsole, debugCISLog, logOutput, moduleName||&apos; : &apos;||message||chr(10), logOutput);
&#x9;&#x9;&#x9;END IF;
 
&#x9;&#x9;&#x9;BEGIN
&#x9;&#x9;&#x9;&#x9;set request =
&#x9;&#x9;&#x9;&#x9;   &apos;&lt;ns1:changeResourceOwner xmlns:ns1=&quot;http://www.compositesw.com/services/system/admin/resource&quot;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;
&#x9;&#x9;&#x9;&#x9;&#x9;   &lt;ns1:path&gt;&apos; || resourcelist.resource || &apos;&lt;/ns1:path&gt;
&#x9;&#x9;&#x9;&#x9;&#x9;   &lt;ns1:type&gt;&apos; || resourcelist.resourceType || &apos;&lt;/ns1:type&gt;
&#x9;&#x9;&#x9;&#x9;&#x9;   &lt;ns1:detail&gt;NONE&lt;/ns1:detail&gt;
&#x9;&#x9;&#x9;&#x9;&#x9;   &lt;ns1:newOwnerName&gt;&apos; || owner || &apos;&lt;/ns1:newOwnerName&gt;
&#x9;&#x9;&#x9;&#x9;&#x9;   &lt;ns1:newOwnerDomain&gt;&apos; || ownerDomain || &apos;&lt;/ns1:newOwnerDomain&gt;
&#x9;&#x9;&#x9;&#x9;&#x9;   &lt;ns1:recurse&gt;TRUE&lt;/ns1:recurse&gt;
&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/ns1:changeResourceOwner&gt;&apos;;
&#x9;&#x9;&#x9;&#x9;IF (debug = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;set message = TRIM(NVL(request,&apos; &apos;)) || CHR(10);
&#x9;&#x9;&#x9;&#x9;&#x9;call /shared/ASAssets/BestPractices_v81/PrivilegeScripts/Helpers/addLogOutput(debugConsole, debugCISLog, logOutput, moduleName||&apos; : &apos;||message||chr(10), logOutput);
&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;
&#x9;&#x9;&#x9;CALL /services/webservices/system/admin/resource/operations/changeResourceOwner(request, response, fault);
&#x9;&#x9;&#x9;EXCEPTION                     
&#x9;&#x9;&#x9;&#x9;WHEN System.SOAPFaultException THEN
&#x9;&#x9;&#x9;&#x9;&#x9;set message = &apos;&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;IF (CURRENT_EXCEPTION.NAME IS NOT NULL) THEN set message = message || &apos;NAME=&apos;||CURRENT_EXCEPTION.NAME; END IF;
&#x9;&#x9;&#x9;&#x9;&#x9;IF (CURRENT_EXCEPTION.ID IS NOT NULL) THEN set message = message || &apos;  ID=&apos;||CAST(CURRENT_EXCEPTION.ID AS VARCHAR); END IF;
&#x9;&#x9;&#x9;&#x9;&#x9;IF (CURRENT_EXCEPTION.MESSAGE IS NOT NULL) THEN set message = message || &apos;  MESSAGE=&apos;||CURRENT_EXCEPTION.MESSAGE; END IF;
&#x9;&#x9;&#x9;&#x9;&#x9;IF (CURRENT_EXCEPTION.TRACE IS NOT NULL) THEN set message = message || &apos;  TRACE=&apos;||CURRENT_EXCEPTION.TRACE; END IF;
&#x9;&#x9;&#x9;&#x9;&#x9;set message = &apos;EXCEPTION: &apos; || message;
&#x9;&#x9;&#x9;&#x9;&#x9;call /shared/ASAssets/BestPractices_v81/PrivilegeScripts/Helpers/addLogOutput(debugConsole, debugCISLog, logOutput, moduleName||&apos; : &apos;||message||chr(10), logOutput);
&#x9;&#x9;&#x9;&#x9;RAISE;                                   
&#x9;&#x9;&#x9;END;
&#x9;&#x9;else
&#x9;&#x9;&#x9;IF (resourcelist.resourceType = &apos;COLUMN&apos; and debug = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;&#x9;IF (debug = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;set message = &apos;Ownership does not get set for COLUMN types.  resource=&apos; || TRIM(NVL(resourcelist.resource,&apos; &apos;));
&#x9;&#x9;&#x9;&#x9;&#x9;call /shared/ASAssets/BestPractices_v81/PrivilegeScripts/Helpers/addLogOutput(debugConsole, debugCISLog, logOutput, moduleName||&apos; : &apos;||message||chr(10), logOutput);
&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;ELSEIF (debug = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;&#x9;IF (debug = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;set message = &apos;Unable to assign ownership to resource=&apos; || TRIM(NVL(resourcelist.resource,&apos; &apos;) || &apos;  for owner=[&apos;||TRIM(NVL(owner,&apos;  &apos;))||&apos;]  and domain=[&apos;||TRIM(NVL(ownerDomain,&apos;  &apos;))||&apos;]&apos;);
&#x9;&#x9;&#x9;&#x9;&#x9;call /shared/ASAssets/BestPractices_v81/PrivilegeScripts/Helpers/addLogOutput(debugConsole, debugCISLog, logOutput, moduleName||&apos; : &apos;||message||chr(10), logOutput);
&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;end if;
&#x9;END IF;

  EXCEPTION
&#x9;ELSE
&#x9;&#x9;set result = CAST(CURRENT_EXCEPTION.TRACE AS LONGVARCHAR);
  END;
END</attribute>
  <attribute name="creationDate" type="LONG">0</attribute>
  <attribute name="creatorUserDomain" type="STRING"/>
  <attribute name="creatorUserName" type="STRING"/>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1560603906783</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="p:11:Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
  <attribute name="p:9:Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
  <attribute name="references" type="MAP">
    <item>
      <key type="STRING">13/460</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">9/561</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>util</item>
        <item>System</item>
      </value>
    </item>
    <item>
      <key type="STRING">10/598</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>util</item>
        <item>System</item>
      </value>
    </item>
    <item>
      <key type="STRING">12/404</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
  </attribute>
</metadata>