<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:9a66723c-3693-47f1-a1f0-d7811996f9d5 -->
<metadata name="validate_groups" path="/shared/ASAssets/BestPractices_v81/PrivilegeScripts/CleanupGroups/validate_groups" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation>&lt;![CDATA[&#x9;(c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCO® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.
]]&gt;</annotation>
  <parameters>
    <parameter name="indomainName" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="inExceptionList" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="inInclusionList" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="result" direction="OUT" nullable="true">
      <datatype name="result" type="TABLE" refId="256">
        <element name="GroupName">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="DomainName">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="Status">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
      </datatype>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
    <privilege group="all" domain="composite" privileges="READ"/>
  </security>
  <dependency target="/lib/debug/Print" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="textToPrint" direction="IN">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="Text" type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/BestPractices_v81/PrivilegeScripts/CleanupGroups/group_list_curs" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="curs" direction="OUT">
        <datatype type="TABLE" refId="256">
          <element name="groupName">
            <datatype type="STRING" maxLength="1024"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/user/getDomainGroups" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="inDomainName" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="result" direction="OUT">
        <datatype type="TABLE" refId="256">
          <element name="name">
            <datatype type="STRING" maxLength="32768"/>
          </element>
          <element name="domainName">
            <datatype type="STRING" maxLength="32768"/>
          </element>
          <element name="id">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="explicitRights">
            <datatype type="STRING" maxLength="32768"/>
          </element>
          <element name="effectiveRights">
            <datatype type="STRING" maxLength="32768"/>
          </element>
          <element name="inheritedRights">
            <datatype type="STRING" maxLength="32768"/>
          </element>
          <element name="annotation">
            <datatype type="STRING" maxLength="32768"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <attribute name="Script" type="STRING">/*
&#x9;validate_groups

&#x9;This procedure is used to validate the existence of groups from CIS using the free-form list &quot;group_list_string&quot;.

&#x9;Modified Date:&#x9;Modified By:&#x9;&#x9;CSW Version:&#x9;Reason:
&#x9;05/16/2017&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.5&#x9;&#x9;&#x9;Adapted for Data Abstraction Best Practices.

&#x9;(c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCO® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.

*/
PROCEDURE validate_groups(
&#x9;-- Provide the Composite domain in which to validate the group list
&#x9;-- e.g. composite, ldap or ldap_im or whatever the domain name is where the groups reside.
&#x9;IN indomainName &#x9;VARCHAR(255),
&#x9;-- [OPTINOAL] Add an item to the exclusion list to keep from deleting that group.  
&#x9;--&#x9;Each item must be appended with a comma including the last one.
&#x9;IN inExceptionList&#x9;LONGVARCHAR,
&#x9;-- [OPTIONAL] Add an item to the inclusion list to test one or more specific groups.  
&#x9;--&#x9;Each item must be appended with a comma including the last one.
&#x9;IN inInclusionList&#x9;LONGVARCHAR,
    OUT result &#x9;&#x9;&#x9;PIPE  (
        GroupName &#x9;VARCHAR(255), 
        DomainName &#x9;VARCHAR(255),
&#x9;&#x9;Status&#x9;&#x9;VARCHAR(255)
&#x9;)
)
BEGIN
&#x9;DECLARE domainName&#x9;&#x9;&#x9;VARCHAR DEFAULT indomainName;
&#x9;-- Add an item to the exclusion list to keep from deleting that group.  Each item must be appended with a comma including the last one.
&#x9;DECLARE ExceptionList&#x9;&#x9;LONGVARCHAR DEFAULT TRIM(inExceptionList);
&#x9;-- Add an item to the inclusion list to test one or more specific groups.  Each item must be appended with a comma including the last one.
&#x9;DECLARE InclusionList&#x9;&#x9;LONGVARCHAR DEFAULT TRIM(inInclusionList); 
&#x9;DECLARE cnt&#x9;&#x9;&#x9;&#x9;&#x9;INTEGER;
&#x9;DECLARE groupName&#x9;&#x9;&#x9;VARCHAR;
&#x9;DECLARE ex&#x9;&#x9;&#x9;&#x9;&#x9;EXCEPTION;

&#x9;IF (InclusionList IS NULL) THEN
&#x9;&#x9;set InclusionList = &apos;&apos;;
&#x9;END IF;
&#x9;IF (ExceptionList IS NULL) THEN
&#x9;&#x9;set ExceptionList = &apos;&apos;;
&#x9;END IF;
&#x9;-- Add a comma to the end of the list
&#x9;IF (LENGTH(InclusionList) &gt; 0) THEN
&#x9;&#x9;set InclusionList = REPLACE(InclusionList||&apos;,&apos;, &apos;,,&apos;, &apos;,&apos;);
&#x9;END IF;
&#x9;-- Add a comma to the end of the list
&#x9;IF (LENGTH(ExceptionList) &gt; 0) THEN
&#x9;&#x9;set ExceptionList = REPLACE(ExceptionList||&apos;,&apos;, &apos;,,&apos;, &apos;,&apos;);
&#x9;END IF;

&#x9;FOR r as SELECT * FROM /shared/ASAssets/BestPractices_v81/PrivilegeScripts/CleanupGroups/group_list_curs() DO
&#x9;&#x9;set groupName = r.GroupName;

&#x9;&#x9;IF (POSITION(groupName||&apos;,&apos; IN ExceptionList) = 0
&#x9;&#x9;&#x9;AND 
&#x9;&#x9;&#x9;(
&#x9;&#x9;&#x9;&#x9;LENGTH(InclusionList) = 0 OR 
&#x9;&#x9;&#x9;&#x9;(LENGTH(InclusionList) &gt; 0 AND POSITION(groupName||&apos;,&apos; IN InclusionList) &gt; 0)
&#x9;&#x9;&#x9;) 
&#x9;&#x9;) THEN
&#x9;&#x9;&#x9;&#x9;if (groupName is null or LENGTH(groupName) = 0) then
&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value &apos;The &quot;groupName&quot; parameter may not be null or empty.&apos;;
&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;if (domainName is null or LENGTH(domainName) = 0) then
&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value &apos;The &quot;domainName&quot; parameter may not be null or empty.&apos;;
&#x9;&#x9;&#x9;&#x9;end if;

&#x9;&#x9;&#x9;&#x9;-- when the domain is composite use all lower case for domains and group names
&#x9;&#x9;&#x9;&#x9;if (LOWER(domainName) = &apos;composite&apos;) then
&#x9;&#x9;&#x9;&#x9;&#x9;set groupName = LOWER(groupName);
&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;if (LOWER(domainName) = &apos;composite&apos;) then
&#x9;&#x9;&#x9;&#x9;&#x9;set domainName = LOWER(domainName);
&#x9;&#x9;&#x9;&#x9;end if;

&#x9;&#x9;&#x9;&#x9;select count(*) cnt into cnt from /shared/ASAssets/Utilities/repository/&quot;user&quot;/getDomainGroups(domainName)
&#x9;&#x9;&#x9;&#x9;&#x9;where name = groupName;
&#x9;&#x9;&#x9;&#x9;if (cnt = 0) then
&#x9;&#x9;&#x9;&#x9;&#x9;INSERT INTO result VALUES (groupName, domainName, &apos;NOT EXISTS&apos;);
&#x9;&#x9;&#x9;&#x9;&#x9;call print(&apos;Validating...GroupName=&apos;||groupName||&apos;  DomainName=&apos;||domainName||&apos;  status=NOT EXISTS&apos;);
&#x9;&#x9;&#x9;&#x9;else
&#x9;&#x9;&#x9;&#x9;&#x9;INSERT INTO result VALUES (groupName, domainName, &apos;EXISTS&apos;);
&#x9;&#x9;&#x9;&#x9;&#x9;call print(&apos;Validating...GroupName=&apos;||groupName||&apos;  DomainName=&apos;||domainName||&apos;  status=EXISTS&apos;);
&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;ELSE
&#x9;&#x9;&#x9;INSERT INTO result VALUES (groupName, domainName, &apos;EXCLUDED&apos;);
&#x9;&#x9;END IF;
&#x9;END FOR;
END</attribute>
  <attribute name="creationDate" type="LONG">1432047322449</attribute>
  <attribute name="creatorUserDomain" type="STRING">ldap</attribute>
  <attribute name="creatorUserName" type="STRING">zkxl6un</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1564075714164</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="MAP">
    <item>
      <key type="STRING">11/96</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">11/99</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
  </attribute>
</metadata>