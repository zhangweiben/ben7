<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:e931daa6-7fda-456a-badf-4cdb1c228a1a -->
<metadata name="dynamicFileQueueInsert" path="/shared/ASAssets/BestPractices_v81/DynamicFileFramework/dynamicFileQueueInsert" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation>&lt;![CDATA[dynamicFileQueueInsert:

&#x9;This procedure manages the insert of requests for A=Add, R=Remove, and C=Clean into the database queue table...DYNAMIC_FILE_QUEUE.
&#x9;This servers as a way of throttling requests so that the DV server does not become overwhelmed by file/view generation.
&#x9;The DYNAMIC_FILE_QUEUE servers as a historical log of activity and can be reported on and sorted using ORGANIZATION, PROJECT_NAME and
&#x9;SUBPROJECT_NAME.

 &#x9;Input:
&#x9;&#x9;debug&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;N=no, Y=yes
&#x9;&#x9;organization:&#x9;&#x9;&#x9;&#x9;Mandatory - the organization name.  Used for filtering on the DYNAMIC_FILE_QUEUE table.
&#x9;&#x9;projectName:&#x9;&#x9;&#x9;&#x9;Mandatory - the project name.  Used for filtering on the DYNAMIC_FILE_QUEUE table.
&#x9;&#x9;subprojectName:&#x9;&#x9;&#x9;&#x9;Optional - the sub-project name.  Used for filtering on the DYNAMIC_FILE_QUEUE table.
&#x9;&#x9;actionOriginator&#x9;&#x9;&#x9;Mandatory - The originating procedure.
&#x9;&#x9;actiontype:&#x9;&#x9;&#x9;&#x9;&#x9;Mandatory - A=Add, R=Remove, C=Cleanup
&#x9;&#x9;requestusername&#x9;&#x9;&#x9;&#x9;Mandatory - The request user name comes from the environment context using GetProperty(&apos;CURRENT_USER_NAME&apos;)
&#x9;&#x9;requestdomain&#x9;&#x9;&#x9;&#x9;Mandatory - The request domain name comes from the environment context using GetProperty(&apos;CURRENT_USER_DOMAIN&apos;)
&#x9;&#x9;requestfilename&#x9;&#x9;&#x9;&#x9;Mandatory - The file name to be acted upon.
&#x9;&#x9;allownullfilename&#x9;&#x9;&#x9;Mandatory - 0=Do not allow user to pass in null/empty for the file name.  Throw an exception.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  - 1=Allow the user to pass in null/empty for the file name which results in picking up all unclaimed 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(not introspected) files in the file system for the invoking user.
&#x9;&#x9;constantslocation&#x9;&#x9;&#x9;Mandatory - the location of the project &quot;constants&quot; procedure
&#x9;&#x9;metadatalayerpath&#x9;&#x9;&#x9;Mandatory - Fully qualified path to the Dynamic physical metadata data source folder where the file tables will be introspeted.
&#x9;&#x9;&#x9;e.g. /shared/ex_project/Physical/Metadata/Dynamic
&#x9;&#x9;formattinglayerpath&#x9;&#x9;&#x9;Optional - Fully qualified path to the Dynamic physical formatting views folder where the views will be generated.
&#x9;&#x9;&#x9;e.g. /shared/ex_project/Physical/Formatting/Dynamic
&#x9;&#x9;businesslayerpath&#x9;&#x9;&#x9;Optional - Fully qualified path to the Dynamic business logical views folder where the views will be generated.
&#x9;&#x9;&#x9;e.g. /shared/ex_project/Business/Logical/Dynamic
&#x9;&#x9;applicationlayerpath&#x9;&#x9;Optional - Fully qualified path to the Dynamic application views folder where the views will be generated.
&#x9;&#x9;&#x9;e.g. /shared/ex_project/Application/Views/Dynamic
&#x9;&#x9;publishedschemapath&#x9;&#x9;&#x9;Mandatory - Fully Qualified path to the Dynamic database schema in the publish area.
&#x9;&#x9;&#x9;e.g. /services/databases/published_data_source/catalog/Dynamic
&#x9;&#x9;publisheddatabase&#x9;&#x9;&#x9;Mandatory - The published database name
&#x9;&#x9;retentionpolicydays&#x9;&#x9;&#x9;Mandatory - Delete files and DV resources older than x days.  This is a numeric value that will be converted from text to integer.
&#x9;Output:
&#x9;&#x9;proxyfilename&#x9;&#x9;&#x9;VARCHAR,
&#x9;&#x9;proxyfilename&#x9;&#x9;&#x9;VARCHAR,
            status&#x9;&#x9;&#x9;&#x9;VARCHAR - status message
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FILE ADD QUEUED&#x9;&#x9;&#x9;&#x9;actiontype=&apos;A&apos;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FILE REMOVE QUEUED&#x9;&#x9;&#x9;actiontype=&apos;R&apos;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FILE CLEAN-UP QUEUED&#x9;&#x9;actiontype=&apos;C&apos;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;DUPLICATE REQUEST IGNORED&#x9;actiontype=&apos;A&apos;,&apos;R&apos;,&apos;C&apos;

&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;- Occurs when actiontype = &apos;A&apos; or &apos;R&apos; and the file extension, format or user are invalid.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;FILE REMOVED.&apos; + 1 of the following
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;INVALID FILE EXTENSION.  VIEWS NOT PUBLISHED&apos; &#x9;-- Invalid extension
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;INVALID FILENAME.  VIEWS NOT PUBLISHED&apos;&#x9;&#x9;-- Invalid filename. Missing the username in the file name.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;FILE NOT ASSOCIATED WITH USERNAME=&lt;username&gt;&#x9;-- The actual or proxy username does not match the file username.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;UNABLE TO REMOVE FILE.&apos; + 1 of the following
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;INVALID FILE EXTENSION.  VIEWS NOT PUBLISHED&apos;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;INVALID FILENAME.  VIEWS NOT PUBLISHED&apos;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;FILE NOT ASSOCIATED WITH USERNAME=&lt;username&gt;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;FILE DOES NOT EXIST.&apos; + 1 of the following 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;INVALID FILE EXTENSION.  VIEWS NOT PUBLISHED&apos;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;INVALID FILENAME.  VIEWS NOT PUBLISHED&apos;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;FILE NOT ASSOCIATED WITH USERNAME=&lt;username&gt;

&#x9;Modified Date:&#x9;Modified By:&#x9;&#x9;CSW Version:&#x9;Reason:
&#x9;02/20/2018&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.5&#x9;&#x9;&#x9;Adapted for Assets Data Abstraction Best Practices

&#x9;(c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.]]&gt;</annotation>
  <parameters>
    <parameter name="debug" direction="IN" nullable="true">
      <datatype name="CHAR" type="STRING" minLength="1" maxLength="1"/>
    </parameter>
    <parameter name="organization" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="projectname" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="subprojectname" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="actionOriginator" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="actiontype" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="requestusername" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="requestdomain" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="requestfilename" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="allownullfilename" direction="IN" nullable="true">
      <datatype name="SMALLINT" type="INTEGER" minValue="-32768" maxValue="32767"/>
    </parameter>
    <parameter name="constantslocation" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="4000"/>
    </parameter>
    <parameter name="metadatalayerpath" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="4000"/>
    </parameter>
    <parameter name="formattinglayerpath" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="4000"/>
    </parameter>
    <parameter name="businesslayerpath" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="4000"/>
    </parameter>
    <parameter name="appliationlayerpath" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="4000"/>
    </parameter>
    <parameter name="publishedschemapath" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="4000"/>
    </parameter>
    <parameter name="publisheddatabase" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="retentionpolicydays" direction="IN" nullable="true">
      <datatype name="SMALLINT" type="INTEGER" minValue="-32768" maxValue="32767"/>
    </parameter>
    <parameter name="proxyfilename" direction="OUT" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="status" direction="OUT" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
    <privilege group="all" domain="composite" privileges="READ"/>
  </security>
  <dependency target="/lib/debug/Log" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="textToLog" direction="IN">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="Text" type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/lib/resource/ResourceExists" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="path" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
      </element>
      <element name="type" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceType" type="STRING" maxLength="40"/>
      </element>
      <element name="version" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceVersion" type="STRING" maxLength="255"/>
      </element>
      <element name="exists" direction="OUT">
        <datatype type="BOOLEAN"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/lib/util/GetProperty" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="property" direction="IN">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="PropertyName" type="STRING" maxLength="255"/>
      </element>
      <element name="result" direction="OUT">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="PropertyValue" type="STRING" maxLength="4096"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/lib/util/SendEMail" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="from" direction="IN">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="EMailAddress" type="STRING" maxLength="1024"/>
      </element>
      <element name="replyTo" direction="IN">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="EMailAddress" type="STRING" maxLength="1024"/>
      </element>
      <element name="to" direction="IN">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="EMailAddress" type="STRING" maxLength="1024"/>
      </element>
      <element name="cc" direction="IN">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="EMailAddress" type="STRING" maxLength="1024"/>
      </element>
      <element name="bcc" direction="IN">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="EMailAddress" type="STRING" maxLength="1024"/>
      </element>
      <element name="subject" direction="IN">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="PropertyValue" type="STRING" maxLength="4096"/>
      </element>
      <element name="contentType" direction="IN">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="PropertyName" type="STRING" maxLength="255"/>
      </element>
      <element name="content" direction="IN">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="Content" type="STRING" maxLength="65535"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/BestPractices_v81/DynamicFileFramework/00_ExecuteDDL" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="inputSQL" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="result" direction="OUT">
        <datatype type="TABLE" refId="256">
          <element name="outputValue">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/BestPractices_v81/DynamicFileFramework/02_display_DYNAMIC_FILE_QUEUE" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="debug" direction="IN">
        <datatype type="STRING" minLength="1" maxLength="1"/>
      </element>
      <element name="sortOrder" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="requestId" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="requestDateStart" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="requestDateEnd" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="organization" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="projectName" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="subProjectName" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="actionOriginator" direction="IN">
        <datatype type="STRING" maxLength="50"/>
      </element>
      <element name="actionType" direction="IN">
        <datatype type="STRING" maxLength="1"/>
      </element>
      <element name="status" direction="IN">
        <datatype type="STRING" maxLength="100"/>
      </element>
      <element name="message" direction="IN">
        <datatype type="STRING" maxLength="4000"/>
      </element>
      <element name="emailError" direction="IN">
        <datatype type="STRING" maxLength="4000"/>
      </element>
      <element name="requestFileName" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="requestUserName" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="requestDomainName" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="fileName" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="proxyUserName" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="proxyUserEmail" direction="IN">
        <datatype type="STRING" maxLength="4000"/>
      </element>
      <element name="allowNullFileName" direction="IN">
        <datatype type="INTEGER" minValue="-32768" maxValue="32767"/>
      </element>
      <element name="datasourcePath" direction="IN">
        <datatype type="STRING" maxLength="4000"/>
      </element>
      <element name="formattingLayerPath" direction="IN">
        <datatype type="STRING" maxLength="4000"/>
      </element>
      <element name="businessLayerPath" direction="IN">
        <datatype type="STRING" maxLength="4000"/>
      </element>
      <element name="applicationLayerPath" direction="IN">
        <datatype type="STRING" maxLength="4000"/>
      </element>
      <element name="publishedSchemaPath" direction="IN">
        <datatype type="STRING" maxLength="4000"/>
      </element>
      <element name="publishedDatabase" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="constantsPath" direction="IN">
        <datatype type="STRING" maxLength="4000"/>
      </element>
      <element name="retentionPolicyDays" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="queueResult" direction="OUT">
        <datatype type="TABLE" refId="256">
          <element name="REQUEST_ID">
            <datatype type="DECIMAL" maxDigits="19" maxFractionalDigits="0"/>
          </element>
          <element name="REQUEST_DATE_START">
            <datatype type="DATETIME"/>
          </element>
          <element name="REQUEST_DATE_END">
            <datatype type="DATETIME"/>
          </element>
          <element name="ORGANIZATION">
            <datatype type="STRING" maxLength="50"/>
          </element>
          <element name="PROJECT_NAME">
            <datatype type="STRING" maxLength="50"/>
          </element>
          <element name="SUBPROJECT_NAME">
            <datatype type="STRING" maxLength="50"/>
          </element>
          <element name="ACTION_ORIGINATOR">
            <datatype type="STRING" maxLength="50"/>
          </element>
          <element name="ACTION_TYPE">
            <datatype type="STRING" maxLength="1"/>
          </element>
          <element name="STATUS">
            <datatype type="STRING" maxLength="100"/>
          </element>
          <element name="MESSAGE">
            <datatype type="STRING" maxLength="4000"/>
          </element>
          <element name="EMAIL_ERROR">
            <datatype type="STRING" maxLength="4000"/>
          </element>
          <element name="REQUEST_FILE_NAME">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="REQUEST_USER_NAME">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="REQUEST_DOMAIN_NAME">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="FILE_NAME">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="PROXY_USER_NAME">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="PROXY_USER_EMAIL">
            <datatype type="STRING" maxLength="4000"/>
          </element>
          <element name="ALLOW_NULL_FILE_NAME">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="DATA_SOURCE_PATH">
            <datatype type="STRING" maxLength="4000"/>
          </element>
          <element name="FORMATTING_LAYER_PATH">
            <datatype type="STRING" maxLength="4000"/>
          </element>
          <element name="BUSINESS_LAYER_PATH">
            <datatype type="STRING" maxLength="4000"/>
          </element>
          <element name="APPLICATION_LAYER_PATH">
            <datatype type="STRING" maxLength="4000"/>
          </element>
          <element name="PUBLISHED_SCHEMA_PATH">
            <datatype type="STRING" maxLength="4000"/>
          </element>
          <element name="PUBLISHED_DATABASE">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="CONSTANTS_PATH">
            <datatype type="STRING" maxLength="4000"/>
          </element>
          <element name="RETENTION_POLICY_DAYS">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/BestPractices_v81/DynamicFileFramework/Helper/deleteFile" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="debug" direction="IN">
        <datatype type="STRING" minLength="1" maxLength="1"/>
      </element>
      <element name="fileName" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="datasourcePath" direction="IN">
        <datatype type="STRING" maxLength="4000"/>
      </element>
      <element name="messageAppend" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="fileDeleted" direction="OUT">
        <datatype type="INTEGER" minValue="-32768" maxValue="32767"/>
      </element>
      <element name="message" direction="OUT">
        <datatype type="STRING" maxLength="4000"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/BestPractices_v81/DynamicFileFramework/Helper/emailGetUser" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="debug" direction="IN">
        <datatype type="STRING" minLength="1" maxLength="1"/>
      </element>
      <element name="userName" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="userEmail" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/BestPractices_v81/DynamicFileFramework/constants" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="EXECUTE_DDL_PACKAGE_PATH" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="DATASOURCE_PATH" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="CATALOG_NAME" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="SCHEMA_NAME" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="DYNAMIC_FILE_SEQ" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="DYNAMIC_FILE_EMAIL" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="DYNAMIC_FILE_QUEUE" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="TABLESPACE_FILEGROUP" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="PROCESS_WAIT_TIME_SECONDS" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="DEFAULT_EMAIL" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="DEFAULT_RETENTION_POLICY_DAYS" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="CSV_SUPPORTED_FILE_EXTENSIONS" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="EXCEL_SUPPORTED_FILE_EXTENSIONS" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/environment/getEnvName" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="envName" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/log/logDebugMessage" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="moduleName" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="moduleNameType" type="STRING" maxLength="4096"/>
      </element>
      <element name="debug" direction="IN">
        <datatype type="STRING" maxLength="1"/>
      </element>
      <element name="messageText" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/RepoUtils/applyReservedListToPath" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="inPath" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="debug" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="result" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/createAllFoldersPrivileges" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="inSourceFolderPath" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="4000"/>
      </element>
      <element name="updatePrivilegesRecursively" direction="IN">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
      <element name="copyPrivilegeMode" direction="IN">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
      <element name="success" direction="OUT">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
      <element name="faultResponse" direction="OUT">
        <datatype name="XML" referenceType="XML" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="TYPE" componentName="XML">
          <schemaDatatype>
            <datatype name="XML" type="TREE" refId="257"></datatype>
          </schemaDatatype>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/getBasicResourceCursor" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="fullResourcePath" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="4000"/>
      </element>
      <element name="resourceType" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="resourceCursor" direction="OUT">
        <datatype type="TABLE" refId="256">
          <element name="name">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="path">
            <datatype type="STRING" maxLength="32768"/>
          </element>
          <element name="type">
            <datatype type="STRING" maxLength="32768"/>
          </element>
          <element name="subtype">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="enabled">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="id">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="changeid">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="version">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="introspectState">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="ownerDomain">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="ownerName">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="impactLevel">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="impactMessage">
            <datatype type="STRING" maxLength="32768"/>
          </element>
          <element name="annotation">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
          <element name="explicitlyDesigned">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="tableType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="sqlText">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
          <element name="scriptText">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
          <element name="childCount">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="dataSourceType">
            <datatype type="STRING" maxLength="255"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/string/extractBiDelimitedText" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="inText" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="searchTerm" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="openingDelim" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="closingDelim" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="inOccurrence" direction="IN">
        <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      </element>
      <element name="inTrimText" direction="IN">
        <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      </element>
      <element name="inCaseSensitive" direction="IN">
        <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      </element>
      <element name="result" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/string/getConstantV2" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="constantsPath" direction="IN">
        <datatype type="STRING" maxLength="4000"/>
      </element>
      <element name="constantsName" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="optionReturn" direction="IN">
        <datatype type="INTEGER" minValue="-32768" maxValue="32767"/>
      </element>
      <element name="outValue" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <attribute name="Script" type="STRING">/* dynamicFileQueueInsert:

&#x9;This procedure manages the insert of requests for A=Add, R=Remove, and C=Clean into the database queue table...DYNAMIC_FILE_QUEUE.
&#x9;This servers as a way of throttling requests so that the DV server does not become overwhelmed by file/view generation.
&#x9;The DYNAMIC_FILE_QUEUE servers as a historical log of activity and can be reported on and sorted using ORGANIZATION, PROJECT_NAME and
&#x9;SUBPROJECT_NAME.

 &#x9;Input:
&#x9;&#x9;debug&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;N=no, Y=yes
&#x9;&#x9;organization:&#x9;&#x9;&#x9;&#x9;Mandatory - the organization name.  Used for filtering on the DYNAMIC_FILE_QUEUE table.
&#x9;&#x9;projectName:&#x9;&#x9;&#x9;&#x9;Mandatory - the project name.  Used for filtering on the DYNAMIC_FILE_QUEUE table.
&#x9;&#x9;subprojectName:&#x9;&#x9;&#x9;&#x9;Optional - the sub-project name.  Used for filtering on the DYNAMIC_FILE_QUEUE table.
&#x9;&#x9;actionOriginator&#x9;&#x9;&#x9;Mandatory - The originating procedure.
&#x9;&#x9;actiontype:&#x9;&#x9;&#x9;&#x9;&#x9;Mandatory - A=Add, R=Remove, C=Cleanup
&#x9;&#x9;requestusername&#x9;&#x9;&#x9;&#x9;Mandatory - The request user name comes from the environment context using GetProperty(&apos;CURRENT_USER_NAME&apos;)
&#x9;&#x9;requestdomain&#x9;&#x9;&#x9;&#x9;Mandatory - The request domain name comes from the environment context using GetProperty(&apos;CURRENT_USER_DOMAIN&apos;)
&#x9;&#x9;requestfilename&#x9;&#x9;&#x9;&#x9;Mandatory - The file name to be acted upon.
&#x9;&#x9;allownullfilename&#x9;&#x9;&#x9;Mandatory - 0=Do not allow user to pass in null/empty for the file name.  Throw an exception.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  - 1=Allow the user to pass in null/empty for the file name which results in picking up all unclaimed 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(not introspected) files in the file system for the invoking user.
&#x9;&#x9;constantslocation&#x9;&#x9;&#x9;Mandatory - the location of the project &quot;constants&quot; procedure
&#x9;&#x9;metadatalayerpath&#x9;&#x9;&#x9;Mandatory - Fully qualified path to the Dynamic physical metadata data source folder where the file tables will be introspeted.
&#x9;&#x9;&#x9;e.g. /shared/ex_project/Physical/Metadata/Dynamic
&#x9;&#x9;formattinglayerpath&#x9;&#x9;&#x9;Optional - Fully qualified path to the Dynamic physical formatting views folder where the views will be generated.
&#x9;&#x9;&#x9;e.g. /shared/ex_project/Physical/Formatting/Dynamic
&#x9;&#x9;businesslayerpath&#x9;&#x9;&#x9;Optional - Fully qualified path to the Dynamic business logical views folder where the views will be generated.
&#x9;&#x9;&#x9;e.g. /shared/ex_project/Business/Logical/Dynamic
&#x9;&#x9;applicationlayerpath&#x9;&#x9;Optional - Fully qualified path to the Dynamic application views folder where the views will be generated.
&#x9;&#x9;&#x9;e.g. /shared/ex_project/Application/Views/Dynamic
&#x9;&#x9;publishedschemapath&#x9;&#x9;&#x9;Mandatory - Fully Qualified path to the Dynamic database schema in the publish area.
&#x9;&#x9;&#x9;e.g. /services/databases/published_data_source/catalog/Dynamic
&#x9;&#x9;publisheddatabase&#x9;&#x9;&#x9;Mandatory - The published database name
&#x9;&#x9;retentionpolicydays&#x9;&#x9;&#x9;Mandatory - Delete files and DV resources older than x days.  This is a numeric value that will be converted from text to integer.
&#x9;Output:
&#x9;&#x9;proxyfilename&#x9;&#x9;&#x9;VARCHAR,
            status&#x9;&#x9;&#x9;&#x9;VARCHAR - status message
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FILE ADD QUEUED&#x9;&#x9;&#x9;&#x9;actiontype=&apos;A&apos;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FILE REMOVE QUEUED&#x9;&#x9;&#x9;actiontype=&apos;R&apos;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FILE CLEAN-UP QUEUED&#x9;&#x9;actiontype=&apos;C&apos;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;DUPLICATE REQUEST IGNORED&#x9;actiontype=&apos;A&apos;,&apos;R&apos;,&apos;C&apos;

&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;- Occurs when actiontype = &apos;A&apos; or &apos;R&apos; and the file extension, format or user are invalid.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;FILE REMOVED.&apos; + 1 of the following
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;INVALID FILE EXTENSION.  VIEWS NOT PUBLISHED&apos; &#x9;-- Invalid extension
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;INVALID FILENAME.  VIEWS NOT PUBLISHED&apos;&#x9;&#x9;-- Invalid filename. Missing the username in the file name.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;FILE NOT ASSOCIATED WITH USERNAME=&lt;username&gt;&#x9;-- The actual or proxy username does not match the file username.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;UNABLE TO REMOVE FILE.&apos; + 1 of the following
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;INVALID FILE EXTENSION.  VIEWS NOT PUBLISHED&apos;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;INVALID FILENAME.  VIEWS NOT PUBLISHED&apos;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;FILE NOT ASSOCIATED WITH USERNAME=&lt;username&gt;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;FILE DOES NOT EXIST.&apos; + 1 of the following 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;INVALID FILE EXTENSION.  VIEWS NOT PUBLISHED&apos;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;INVALID FILENAME.  VIEWS NOT PUBLISHED&apos;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;FILE NOT ASSOCIATED WITH USERNAME=&lt;username&gt;

&#x9;Modified Date:&#x9;Modified By:&#x9;&#x9;CSW Version:&#x9;Reason:
&#x9;02/20/2018&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.5&#x9;&#x9;&#x9;Adapted for Assets Data Abstraction Best Practices

&#x9;(c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.
*/
PROCEDURE dynamicFileQueueInsert(
&#x9;IN&#x9;debug&#x9;&#x9;&#x9;&#x9;&#x9;CHAR(1), &#x9;&#x9;-- N=no, Y=yes
&#x9;IN&#x9;organization&#x9;&#x9;&#x9;VARCHAR,
&#x9;IN&#x9;projectname&#x9;&#x9;&#x9;&#x9;VARCHAR,
&#x9;IN&#x9;subprojectname&#x9;&#x9;&#x9;VARCHAR,
&#x9;IN&#x9;actionOriginator&#x9;&#x9;VARCHAR,
&#x9;IN&#x9;actiontype&#x9;&#x9;&#x9;&#x9;VARCHAR,&#x9;&#x9;-- A=Add, R=Remove, C=Cleanup
&#x9;IN  requestusername&#x9;&#x9;&#x9;VARCHAR,
&#x9;IN&#x9;requestdomain&#x9;&#x9;&#x9;VARCHAR,
&#x9;IN&#x9;requestfilename&#x9;&#x9;&#x9;VARCHAR,
&#x9;IN&#x9;allownullfilename&#x9;&#x9;SMALLINT,&#x9;&#x9;-- 0 or 1 are valid
&#x9;IN&#x9;constantslocation&#x9;&#x9;VARCHAR(4000),
&#x9;IN&#x9;metadatalayerpath&#x9;&#x9;VARCHAR(4000),
&#x9;IN&#x9;formattinglayerpath&#x9;&#x9;VARCHAR(4000),
&#x9;IN&#x9;businesslayerpath&#x9;&#x9;VARCHAR(4000),
&#x9;IN&#x9;appliationlayerpath&#x9;&#x9;VARCHAR(4000),
&#x9;IN&#x9;publishedschemapath&#x9;&#x9;VARCHAR(4000),
&#x9;IN&#x9;publisheddatabase&#x9;&#x9;VARCHAR,
&#x9;IN &#x9;retentionpolicydays&#x9;&#x9;SMALLINT,
&#x9;OUT&#x9;proxyfilename&#x9;&#x9;&#x9;VARCHAR,
&#x9;OUT status&#x9;&#x9;&#x9;&#x9;&#x9;VARCHAR
)
BEGIN
&#x9;DECLARE moduleName&#x9;&#x9;&#x9;&#x9;VARCHAR DEFAULT &apos;dynamicFileQueueInsert&apos;;
&#x9;DECLARE&#x9;globalConstantsPath&#x9;&#x9;VARCHAR(4000) DEFAULT /shared/ASAssets/BestPractices_v81/DynamicFileFramework/constants.globalConstantsPath;
&#x9;DECLARE ex&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXCEPTION;
&#x9;DECLARE sequenceNum &#x9;&#x9;&#x9;BIGINT;
&#x9;DECLARE envName&#x9;&#x9;&#x9;&#x9;&#x9;VARCHAR;
&#x9;DECLARE nodehost&#x9;&#x9;&#x9;&#x9;VARCHAR;
&#x9;DECLARE nodeport&#x9;&#x9;&#x9;&#x9;INTEGER;
&#x9;DECLARE port_num&#x9;&#x9;&#x9;&#x9;VARCHAR;
&#x9;DECLARE resExists&#x9;&#x9;&#x9;&#x9;BOOLEAN;
&#x9;DECLARE fileExtension&#x9;&#x9;&#x9;VARCHAR;
&#x9;DECLARE fileDeleted&#x9;&#x9;&#x9;&#x9;INTEGER;
&#x9;DECLARE filenamePendingActions&#x9;BOOLEAN;
&#x9;DECLARE validFileExtension&#x9;&#x9;BOOLEAN;
&#x9;DECLARE validFileName&#x9;&#x9;&#x9;BOOLEAN;
&#x9;DECLARE validFileUserAssociation BOOLEAN;
&#x9;DECLARE sendEmailException&#x9;&#x9;BOOLEAN DEFAULT false;
&#x9;DECLARE message&#x9;&#x9;&#x9;&#x9;&#x9;LONGVARCHAR;
&#x9;DECLARE proxyusername&#x9;&#x9;&#x9;VARCHAR;
&#x9;DECLARE&#x9;proxyuseremail&#x9;&#x9;&#x9;LONGVARCHAR;
&#x9;DECLARE proxyfileusername&#x9;&#x9;VARCHAR;
&#x9;DECLARE email_default&#x9;&#x9;&#x9;LONGVARCHAR;
&#x9;DECLARE email_subjectline&#x9;&#x9;VARCHAR(1000);
&#x9;DECLARE email_message&#x9;&#x9;&#x9;VARCHAR(4000);
&#x9;DECLARE email_exception&#x9;&#x9;&#x9;VARCHAR(4000);
&#x9;DECLARE datasourcepath&#x9;&#x9;&#x9;VARCHAR(4000) DEFAULT null;
&#x9;DECLARE supportedCSVFileExt&#x9;&#x9;VARCHAR;
&#x9;DECLARE supportedExcelFileExt&#x9;VARCHAR;
&#x9;DECLARE retentionpolicy&#x9;&#x9;&#x9;INTEGER;
&#x9;DECLARE retentionpolicydefault&#x9;VARCHAR;
&#x9;DECLARE endTimestampValue&#x9;&#x9;VARCHAR;
&#x9;DECLARE insertstatus&#x9;&#x9;&#x9;VARCHAR(100);
&#x9;DECLARE sqlStatement&#x9;&#x9;&#x9;LONGVARCHAR;
&#x9;DECLARE seqStatement&#x9;&#x9;&#x9;LONGVARCHAR;
&#x9;DECLARE queueDataSourceType&#x9;&#x9;VARCHAR;
&#x9;DECLARE queueDatasourcePath&#x9;&#x9;LONGVARCHAR;
&#x9;DECLARE queueCatalogName&#x9;&#x9;VARCHAR;
&#x9;DECLARE queueSchemaName&#x9;&#x9;&#x9;VARCHAR;
&#x9;DECLARE queueTableName&#x9;&#x9;&#x9;VARCHAR;
&#x9;DECLARE queueSeqName&#x9;&#x9;&#x9;VARCHAR;
&#x9;DECLARE fullTablePath&#x9;&#x9;&#x9;LONGVARCHAR;
&#x9;DECLARE fullSeqPath&#x9;&#x9;&#x9;&#x9;LONGVARCHAR;
&#x9;DECLARE messageAppend&#x9;&#x9;&#x9;VARCHAR;
&#x9;DECLARE success&#x9;&#x9;&#x9;&#x9;&#x9;INTEGER;
&#x9;DECLARE faultResponse&#x9;&#x9;&#x9;XML;
&#x9;DECLARE pos&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;INTEGER;
&#x9;DECLARE queueResult &#x9;&#x9;&#x9;CURSOR /shared/ASAssets/BestPractices_v81/DynamicFileFramework/constants.queueResultType;

&#x9;IF (debug = &apos;Y&apos;) THEN
&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;INPUT: organization=[&apos;||NVL(organization,&apos;null&apos;)||&apos;]&apos;);
&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;INPUT: projectname=[&apos;||NVL(projectname,&apos;null&apos;)||&apos;]&apos;);
&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;INPUT: subprojectname=[&apos;||NVL(subprojectname,&apos;null&apos;)||&apos;]&apos;);
&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;INPUT: actiontype=[&apos;||NVL(actiontype,&apos;null&apos;)||&apos;]&apos;);
&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;INPUT: requestusername=[&apos;||NVL(requestusername,&apos;null&apos;)||&apos;]&apos;);
&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;INPUT: requestdomain=[&apos;||NVL(requestdomain,&apos;null&apos;)||&apos;]&apos;);
&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;INPUT: requestfilename=[&apos;||NVL(requestfilename,&apos;null&apos;)||&apos;]&apos;);
&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;INPUT: allownullfilename=[&apos;||NVL(CAST(allownullfilename AS VARCHAR),&apos;null&apos;)||&apos;]&apos;);
&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;INPUT: constantslocation=[&apos;||NVL(constantslocation,&apos;null&apos;)||&apos;]&apos;);
&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;INPUT: metadatalayerpath=[&apos;||NVL(metadatalayerpath,&apos;null&apos;)||&apos;]&apos;);
&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;INPUT: formattinglayerpath=[&apos;||NVL(formattinglayerpath,&apos;null&apos;)||&apos;]&apos;);
&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;INPUT: businesslayerpath=[&apos;||NVL(businesslayerpath,&apos;null&apos;)||&apos;]&apos;);
&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;INPUT: appliationlayerpath=[&apos;||NVL(appliationlayerpath,&apos;null&apos;)||&apos;]&apos;);
&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;INPUT: publishedschemapath=[&apos;||NVL(publishedschemapath,&apos;null&apos;)||&apos;]&apos;);
&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;INPUT: publisheddatabase=[&apos;||NVL(publisheddatabase,&apos;null&apos;)||&apos;]&apos;);
&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;INPUT: retentionpolicydays=[&apos;||NVL(CAST(retentionpolicydays AS VARCHAR),&apos;null&apos;)||&apos;]&apos;);
&#x9;END IF;

&#x9;-- Validate input parameters
&#x9;IF (allownullfilename IS NULL OR (allownullfilename IS NOT NULL AND allownullfilename &lt;&gt; 0 AND allownullfilename &lt;&gt; 1)) THEN
&#x9;&#x9;RAISE ex VALUE moduleName||&apos;: The constant parameter &quot;ALLOW_NULL_FILE_NAME&quot; must be either 0 or 1.&apos;;
&#x9;END IF;
&#x9;IF (organization IS NULL OR LENGTH(TRIM(organization)) = 0) THEN
&#x9;&#x9;RAISE ex VALUE moduleName||&apos;: The constant parameter &quot;ORGANIZATION&quot; cannot be null or empty.&apos;;
&#x9;END IF;
&#x9;IF (projectname IS NULL OR LENGTH(TRIM(projectname)) = 0) THEN
&#x9;&#x9;RAISE ex VALUE moduleName||&apos;: The constant parameter &quot;PROJECT_NAME&quot; cannot be null or empty.&apos;;
&#x9;END IF;
&#x9;IF (actiontype IS NULL OR LENGTH(TRIM(actiontype)) = 0) THEN
&#x9;&#x9;RAISE ex VALUE moduleName||&apos;: The input parameter &quot;actiontype&quot; cannot be null or empty.&apos;;
&#x9;END IF;
&#x9;IF (actiontype NOT IN (&apos;A&apos;,&apos;R&apos;,&apos;C&apos;)) THEN
&#x9;&#x9;RAISE ex VALUE moduleName||&apos;: The input parameter &quot;actiontype&quot; may only be (&apos;&apos;A&apos;&apos;, &apos;&apos;R&apos;&apos;, &apos;&apos;C&apos;&apos;).&apos;;
&#x9;END IF;
&#x9;IF (actiontype = &apos;C&apos; AND (retentionpolicydays IS NULL OR retentionpolicydays &lt;= 0)) THEN
&#x9;&#x9;RAISE ex VALUE moduleName||&apos;: The constant parameter &quot;RETENTION_POLICY_DAYS&quot; must have a valid integer &gt; 0 for &quot;actiontype&quot;=&apos;&apos;C&apos;&apos;.&apos;;
&#x9;END IF;
&#x9;IF (actiontype = &apos;A&apos; AND requestfilename IS NULL AND allownullfilename = 0) THEN
&#x9;&#x9;RAISE ex VALUE moduleName||&apos;: The input parameter &quot;requestfilename&quot; may not be null when allownullfilename=0.&apos;;
&#x9;END IF;
&#x9;IF (actiontype = &apos;R&apos; AND (requestfilename IS NULL OR LENGTH(TRIM(requestfilename)) = 0)) THEN
&#x9;&#x9;RAISE ex VALUE moduleName||&apos;: The input parameter &quot;requestfilename&quot; may not be null or empty when actiontype=&apos;&apos;R&apos;&apos;.&apos;;
&#x9;END IF;
&#x9;IF (constantslocation IS NULL OR LENGTH(TRIM(constantslocation)) = 0) THEN
&#x9;&#x9;RAISE ex VALUE moduleName||&apos;: The input parameter &quot;constantslocation&quot; cannot be null or empty.&apos;;
&#x9;END IF;
&#x9;CALL /lib/resource/ResourceExists(constantslocation, &apos;PROCEDURE&apos;, null, resExists);
&#x9;IF (NOT resExists) THEN
&#x9;&#x9;RAISE ex VALUE moduleName||&apos;: The input parameter &quot;constantslocation&quot; value=[&apos;||constantslocation||&apos;] does not exist.&apos;;
&#x9;END IF;
&#x9;IF (metadatalayerpath IS NOT NULL AND LENGTH(TRIM(metadatalayerpath)) &gt; 0) THEN
&#x9;&#x9;CALL /lib/resource/ResourceExists(metadatalayerpath, &apos;CONTAINER&apos;, null, resExists);
&#x9;&#x9;IF (NOT resExists) THEN
&#x9;&#x9;&#x9;BEGIN INDEPENDENT TRANSACTION
&#x9;&#x9;&#x9;&#x9;CALL /shared/ASAssets/Utilities/repository/createAllFoldersPrivileges(metadatalayerpath, 1, 1, success, faultResponse);
&#x9;&#x9;&#x9;END;
&#x9;&#x9;END IF;
&#x9;END IF;
&#x9;IF (formattinglayerpath IS NOT NULL AND LENGTH(TRIM(formattinglayerpath)) &gt; 0) THEN
&#x9;&#x9;CALL /lib/resource/ResourceExists(formattinglayerpath, &apos;CONTAINER&apos;, null, resExists);
&#x9;&#x9;IF (NOT resExists) THEN
&#x9;&#x9;&#x9;BEGIN INDEPENDENT TRANSACTION
&#x9;&#x9;&#x9;&#x9;CALL /shared/ASAssets/Utilities/repository/createAllFoldersPrivileges(formattinglayerpath, 1, 1, success, faultResponse);
&#x9;&#x9;&#x9;END;
&#x9;&#x9;END IF;
&#x9;END IF;
&#x9;IF (businesslayerpath IS NOT NULL AND LENGTH(TRIM(businesslayerpath)) &gt; 0) THEN
&#x9;&#x9;CALL /lib/resource/ResourceExists(businesslayerpath, &apos;CONTAINER&apos;, null, resExists);
&#x9;&#x9;IF (NOT resExists) THEN
&#x9;&#x9;&#x9;BEGIN INDEPENDENT TRANSACTION
&#x9;&#x9;&#x9;&#x9;CALL /shared/ASAssets/Utilities/repository/createAllFoldersPrivileges(businesslayerpath, 1, 1, success, faultResponse);
&#x9;&#x9;&#x9;END;
&#x9;&#x9;END IF;
&#x9;END IF;
&#x9;IF (appliationlayerpath IS NOT NULL AND LENGTH(TRIM(appliationlayerpath)) &gt; 0) THEN
&#x9;&#x9;CALL /lib/resource/ResourceExists(appliationlayerpath, &apos;CONTAINER&apos;, null, resExists);
&#x9;&#x9;IF (NOT resExists) THEN
&#x9;&#x9;&#x9;BEGIN INDEPENDENT TRANSACTION
&#x9;&#x9;&#x9;&#x9;CALL /shared/ASAssets/Utilities/repository/createAllFoldersPrivileges(appliationlayerpath, 1, 1, success, faultResponse);
&#x9;&#x9;&#x9;END;
&#x9;&#x9;END IF;
&#x9;END IF;
&#x9;IF (publishedschemapath IS NOT NULL AND LENGTH(TRIM(publishedschemapath)) &gt; 0) THEN
&#x9;&#x9;CALL /lib/resource/ResourceExists(publishedschemapath, &apos;CONTAINER&apos;, null, resExists);
&#x9;&#x9;IF (NOT resExists) THEN
&#x9;&#x9;&#x9;BEGIN INDEPENDENT TRANSACTION
&#x9;&#x9;&#x9;&#x9;CALL /shared/ASAssets/Utilities/repository/createAllFoldersPrivileges(publishedschemapath, 1, 1, success, faultResponse);
&#x9;&#x9;&#x9;END;
&#x9;&#x9;END IF;
&#x9;END IF;


&#x9;SET proxyfilename = requestfilename;
&#x9;-- Get the CIS Environment Indicator
&#x9;CALL /shared/ASAssets/Utilities/environment/getEnvName(envName);
&#x9;-- Get the hostname and port
&#x9;SELECT A.result INTO nodehost FROM /lib/util/GetProperty(&apos;SERVER_HOSTNAME&apos;) A;
&#x9;SELECT A.result INTO port_num FROM /lib/util/GetProperty(&apos;SERVER_JDBC_PORT&apos;) A;
&#x9;SET nodeport = CAST(port_num as INTEGER) - 1;

&#x9;-- Get the datasource path, catalog and schema name to construct the path dynamically
&#x9;CALL /shared/ASAssets/Utilities/string/getConstantV2(globalConstantsPath, &apos;DATASOURCE_PATH&apos;, 1, queueDatasourcePath);
&#x9;CALL /shared/ASAssets/Utilities/string/getConstantV2(globalConstantsPath, &apos;CATALOG_NAME&apos;, 1, queueCatalogName);
&#x9;CALL /shared/ASAssets/Utilities/string/getConstantV2(globalConstantsPath, &apos;SCHEMA_NAME&apos;, 1, queueSchemaName);
&#x9;CALL /shared/ASAssets/Utilities/string/getConstantV2(globalConstantsPath, &apos;DYNAMIC_FILE_SEQ&apos;, 1, queueSeqName);
&#x9;CALL /shared/ASAssets/Utilities/string/getConstantV2(globalConstantsPath, &apos;DYNAMIC_FILE_QUEUE&apos;, 1, queueTableName);
&#x9;IF (queueDatasourcePath IS NULL OR LENGTH(TRIM(queueDatasourcePath)) = 0) THEN
&#x9;&#x9;RAISE ex VALUE &apos;The datasource path may not be null or empty:  &apos;||globalConstantsPath||&apos;.DATASOURCE_PATH&apos;;
&#x9;END IF;
&#x9;IF (queueSchemaName IS NULL OR LENGTH(TRIM(queueSchemaName)) = 0) THEN
&#x9;&#x9;RAISE ex VALUE &apos;The schema name may not be null or empty:  &apos;||globalConstantsPath||&apos;.SCHEMA_NAME&apos;;
&#x9;END IF;
&#x9;IF (queueCatalogName IS NULL OR LENGTH(TRIM(queueCatalogName)) = 0) THEN
&#x9;&#x9;SET queueCatalogName = &apos;&apos;;
&#x9;ELSE
&#x9;&#x9;SET queueCatalogName = &apos;/&apos;||queueCatalogName;
&#x9;END IF;
&#x9;IF (queueTableName IS NULL OR LENGTH(TRIM(queueTableName)) = 0) THEN
&#x9;&#x9;RAISE ex VALUE &apos;The table name may not be null or empty:  &apos;||globalConstantsPath||&apos;.DYNAMIC_FILE_EMAIL&apos;;
&#x9;END IF;
&#x9;IF (queueSeqName IS NULL OR LENGTH(TRIM(queueSeqName)) = 0) THEN
&#x9;&#x9;RAISE ex VALUE &apos;The sequence name may not be null or empty:  &apos;||globalConstantsPath||&apos;.DYNAMIC_FILE_SEQ&apos;;
&#x9;END IF;
&#x9;IF (queueTableName IS NULL OR LENGTH(TRIM(queueTableName)) = 0) THEN
&#x9;&#x9;RAISE ex VALUE &apos;The table name may not be null or empty:  &apos;||globalConstantsPath||&apos;.DYNAMIC_FILE_QUEUE&apos;;
&#x9;END IF;
&#x9;SET fullTablePath = queueDatasourcePath || queueCatalogName || &apos;/&apos;||queueSchemaName || &apos;/&apos;||queueTableName;
&#x9;CALL /shared/ASAssets/Utilities/repository/RepoUtils/applyReservedListToPath(fullTablePath, null, fullTablePath);

&#x9;-- Get the data source type in order to determine the syntax for the sequence
&#x9;FOR r AS SELECT dataSourceType FROM /shared/ASAssets/Utilities/repository/getBasicResourceCursor(queueDatasourcePath, &apos;DATA_SOURCE&apos;) DO
&#x9;&#x9;SET queueDataSourceType = r.dataSourceType;
&#x9;END FOR;
&#x9;SET fullSeqPath =  &apos;&quot;&apos;||queueSchemaName||&apos;&quot;.&quot;&apos;||queueSeqName||&apos;&quot;&apos;;
&#x9;-- queueDataSourceType=Oracle 11g (Thin Driver)
&#x9;IF (INSTR(LOWER(REPLACE(queueDataSourceType,&apos; &apos;,&apos;&apos;)), &apos;oracle&apos;) &gt; 0) THEN
&#x9;&#x9;SET seqStatement = &apos;SELECT &apos;||fullSeqPath||&apos;.NEXTVAL SEQUID FROM DUAL&apos;;
&#x9;END IF;
&#x9;-- queueDataSourceType=Microsoft SQL Server 2012
&#x9;IF (INSTR(LOWER(REPLACE(queueDataSourceType,&apos; &apos;,&apos;&apos;)), &apos;sqlserver&apos;) &gt; 0) THEN
&#x9;&#x9;SET seqStatement = &apos;SELECT NEXT VALUE FOR &apos;||fullSeqPath;
&#x9;END IF;
&#x9;-- queueDataSourceType=PostgreSQL 9.1
&#x9;IF (INSTR(LOWER(REPLACE(queueDataSourceType,&apos; &apos;,&apos;&apos;)), &apos;postgre&apos;) &gt; 0) THEN
&#x9;&#x9;SET seqStatement = &apos;SELECT NEXTVAL (&apos;&apos;&apos;||fullSeqPath||&apos;&apos;&apos;)&apos;;
&#x9;END IF;
&#x9;IF (seqStatement IS NULL OR LENGTH(TRIM(seqStatement)) = 0) THEN
&#x9;&#x9;RAISE ex VALUE &apos;The sequence statement may not be null or empty.  The dataSourceType=[&apos;||NVL(queueDataSourceType,&apos;null&apos;)||&apos; is not supported.&apos;;
&#x9;END IF;

&#x9;-- Get the email default and other default values
&#x9;CALL /shared/ASAssets/Utilities/string/getConstantV2(globalConstantsPath, &apos;DEFAULT_EMAIL&apos;, 1, email_default);
&#x9;CALL /shared/ASAssets/Utilities/string/getConstantV2(globalConstantsPath, &apos;DEFAULT_RETENTION_POLICY_DAYS&apos;, 1, retentionpolicydefault);
&#x9;CALL /shared/ASAssets/Utilities/string/getConstantV2(globalConstantsPath, &apos;CSV_SUPPORTED_FILE_EXTENSIONS&apos;, 1, supportedCSVFileExt);
&#x9;CALL /shared/ASAssets/Utilities/string/getConstantV2(globalConstantsPath, &apos;EXCEL_SUPPORTED_FILE_EXTENSIONS&apos;, 1, supportedExcelFileExt);

&#x9;IF (debug = &apos;Y&apos;) THEN
&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;GLOBAL DATASOURCE_PATH: queueDatasourcePath=[&apos;||NVL(queueDatasourcePath,&apos;null&apos;)||&apos;]&apos;);
&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;GLOBAL DATASOURCE_PATH: queueDataSourceType=[&apos;||NVL(queueDataSourceType,&apos;null&apos;)||&apos;]&apos;);
&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;GLOBAL CATALOG_NAME: queueCatalogName=[&apos;||NVL(queueCatalogName,&apos;null&apos;)||&apos;]&apos;);
&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;GLOBAL SCHEMA_NAME: queueSchemaName=[&apos;||NVL(queueSchemaName,&apos;null&apos;)||&apos;]&apos;);
&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;GLOBAL DEFAULT_EMAIL: email_default=[&apos;||NVL(email_default,&apos;null&apos;)||&apos;]&apos;);
&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;GLOBAL DEFAULT_RETENTION_POLICY_DAYS: retentionpolicydefault=[&apos;||NVL(retentionpolicydefault,&apos;null&apos;)||&apos;]&apos;);
&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;GLOBAL ENVIRONMENT_NAME: envName=[&apos;||NVL(envName,&apos;null&apos;)||&apos;]  nodehost=[&apos;||NVL(nodehost,&apos;null&apos;)||&apos;]  nodeport=[&apos;||NVL(CAST(nodeport as VARCHAR),&apos;null&apos;)||&apos;]&apos;);
&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;GLOBAL CSV_SUPPORTED_FILE_EXTENSIONS: supportedCSVFileExt=[&apos;||NVL(supportedCSVFileExt,&apos;null&apos;)||&apos;]&apos;);
&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;GLOBAL EXCEL_SUPPORTED_FILE_EXTENSIONS: supportedExcelFileExt=[&apos;||NVL(supportedExcelFileExt,&apos;null&apos;)||&apos;]&apos;);
&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;SEQUENCE STATEMENT: seqStatement=[&apos;||NVL(seqStatement,&apos;null&apos;)||&apos;]&apos;);
&#x9;END IF;

&#x9;-- Establish the default status message
&#x9;IF (actiontype = &apos;A&apos;) THEN
&#x9;&#x9;SET status = &apos;FILE ADD QUEUED&apos;;
&#x9;ELSEIF (actiontype = &apos;R&apos;) THEN
&#x9;&#x9;SET status = &apos;FILE REMOVE QUEUED&apos;;
&#x9;ELSEIF (actiontype = &apos;C&apos;) THEN
&#x9;&#x9;SET status = &apos;FILE CLEAN-UP QUEUED&apos;;
&#x9;END IF;

&#x9;-- If the proxy username is not null then use the proxy username instead of the actual username.
&#x9;-- The proxy username is controlled by the upload application and is passed in when the upload application invokes the dynamicFileCreate procedure.
&#x9;-- This is the only mechanism by which to distinguish between the procedure being called by the user and by the upload application.
&#x9;-- The upload application will insert the text USERNAME[username]username-filename.ext as part of the filename.
&#x9;-- Extract the username proxy from the filename.  Format: USERNAME[username]username-filename.ext
&#x9;SET proxyusername = requestusername;
&#x9;IF (INSTR(proxyfilename, &apos;USERNAME[&apos;) &gt; 0) THEN
&#x9;&#x9;CALL /shared/ASAssets/Utilities/string/extractBiDelimitedText(proxyfilename,&apos;USERNAME&apos;,&apos;[&apos;,&apos;]&apos;,1,1,1,proxyusername);
&#x9;&#x9;IF (proxyusername IS NOT NULL) THEN
&#x9;&#x9;&#x9;SET proxyfilename = REPLACE(proxyfilename, &apos;USERNAME[&apos;||proxyusername||&apos;]&apos;, &apos;&apos;);
&#x9;&#x9;&#x9;SET proxyusername = LOWER(proxyusername);
&#x9;&#x9;END IF;
&#x9;END IF;
&#x9;-- Get the file username and validate the file format
&#x9;SET validFileUserAssociation = true;
&#x9;SET validFileName = true;
&#x9;SET pos = INSTR(proxyfilename, &apos;-&apos;);
&#x9;IF (pos &gt; 0) THEN
&#x9;&#x9;SET proxyfileusername = SUBSTRING(proxyfilename, 1, pos-1);
&#x9;&#x9;IF (proxyusername &lt;&gt; proxyfileusername) THEN
&#x9;&#x9;&#x9;SET validFileUserAssociation = false;
&#x9;&#x9;END IF;
&#x9;ELSE
&#x9;&#x9;SET proxyfileusername = null;
&#x9;&#x9;IF (actiontype &lt;&gt; &apos;C&apos;) THEN
&#x9;&#x9;&#x9;SET validFileName = false;
&#x9;&#x9;END IF;
&#x9;END IF;

&#x9;-- Get the file extension and validate the file format extension
&#x9;IF (INSTR(proxyfilename, &apos;.&apos;) &gt; 0) THEN
&#x9;&#x9;SET pos = INSTR(proxyfilename, &apos;.&apos;, -1, 1);
&#x9;&#x9;IF (pos &gt; 0) THEN
&#x9;&#x9;&#x9;SET fileExtension = SUBSTRING(proxyfilename, pos+1);
&#x9;&#x9;END IF;
&#x9;END IF;
&#x9;SET validFileExtension = false;
&#x9;-- The file extension [.csv, .txt] was found.
&#x9;IF (INSTR(supportedCSVFileExt, lower(fileExtension)) &gt; 0) THEN
&#x9;&#x9;SET datasourcepath = metadatalayerpath||&apos;/DynamicTempFiles_CSV&apos;;
&#x9;&#x9;SET validFileExtension = true;
&#x9;END IF;
&#x9;-- The file extension [.xls, .xlsx] was found.
&#x9;IF (INSTR(supportedExcelFileExt, lower(fileExtension)) &gt; 0) THEN
&#x9;&#x9;SET datasourcepath = metadatalayerpath||&apos;/DynamicTempFiles_Excel&apos;;
&#x9;&#x9;SET validFileExtension = true;
&#x9;END IF;

&#x9;-- Get the user email
&#x9;CALL /shared/ASAssets/BestPractices_v81/DynamicFileFramework/Helper/emailGetUser(debug, lower(proxyusername), proxyuseremail);

&#x9;-- Evaluate the retention policy
&#x9;IF (retentionpolicydays IS NOT NULL) THEN
&#x9;&#x9;SET retentionpolicy = retentionpolicydays;
&#x9;ELSE
&#x9;&#x9;IF (retentionpolicydefault IS NULL) THEN
&#x9;&#x9;&#x9;SET retentionpolicy = 0;
&#x9;&#x9;ELSE
&#x9;&#x9;&#x9;SET retentionpolicy = CAST(retentionpolicydefault AS INTEGER);
&#x9;&#x9;END IF;
&#x9;END IF;

&#x9;IF (debug = &apos;Y&apos;) THEN
&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;INTERNAL: validFileExtension=[&apos;||NVL(CAST(validFileExtension AS VARCHAR),&apos;null&apos;)||&apos;]&apos;);
&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;INTERNAL: validFileName=[&apos;||NVL(CAST(validFileName AS VARCHAR),&apos;null&apos;)||&apos;]&apos;);
&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;INTERNAL: validFileUserAssociation=[&apos;||NVL(CAST(validFileUserAssociation AS VARCHAR),&apos;null&apos;)||&apos;]&apos;);
&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;INTERNAL: proxyusername=[&apos;||NVL(proxyusername,&apos;null&apos;)||&apos;]&apos;);
&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;INTERNAL: proxyuseremail=[&apos;||NVL(proxyuseremail,&apos;null&apos;)||&apos;]&apos;);
&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;INTERNAL: proxyfilename=[&apos;||NVL(proxyfilename,&apos;null&apos;)||&apos;]&apos;);
&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;INTERNAL: proxyfileusername=[&apos;||NVL(proxyfileusername,&apos;null&apos;)||&apos;]&apos;);
&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;INTERNAL: datasourcepath=[&apos;||NVL(datasourcepath,&apos;null&apos;)||&apos;]&apos;);
&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;INTERNAL: fileExtension=[&apos;||NVL(fileExtension,&apos;null&apos;)||&apos;]&apos;);
&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;INTERNAL: supportedCSVFileExt=[&apos;||NVL(supportedCSVFileExt,&apos;null&apos;)||&apos;]&apos;);
&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;INTERNAL: supportedExcelFileExt=[&apos;||NVL(supportedExcelFileExt,&apos;null&apos;)||&apos;]&apos;);
&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;INTERNAL: retentionpolicy=[&apos;||NVL(CAST(retentionpolicy AS VARCHAR),&apos;null&apos;)||&apos;]&apos;);
&#x9;END IF;

&#x9;-- Determine if the file request has already been initiated but not completed
&#x9;SET filenamePendingActions = false;
&#x9;FOR r AS 
&#x9;&#x9;SELECT * FROM /shared/ASAssets/BestPractices_v81/DynamicFileFramework/&quot;02_display_DYNAMIC_FILE_QUEUE&quot;(
&#x9;&#x9;&#x9;debug,&#x9;&#x9;&#x9;&#x9;-- Y=debug on, N=debug off
&#x9;&#x9;&#x9;&apos;DESC&apos;,&#x9;&#x9;&#x9;&#x9;-- Valid Values for sorting by REQUEST_DATE_START:   ASC|ASCENDING|DESC|DESCENDING
&#x9;&#x9;&#x9;null, null,
&#x9;&#x9;&#x9;&apos;IS NULL&apos;,&#x9;&#x9;&#x9;-- REQUEST_DATE_END IS NULL:  This represents a request that has been initiated but not completed
&#x9;&#x9;&#x9;organization,&#x9;&#x9;-- Filter applied on ORGANIZATION if not null.
&#x9;&#x9;&#x9;projectname,&#x9;&#x9;-- Filter applied on PROJECT_NAME if not null.
&#x9;&#x9;&#x9;subprojectname,&#x9;&#x9;-- Filter applied on SUBPROJECT_NAME if not null.
&#x9;&#x9;&#x9;null,
&#x9;&#x9;&#x9;actiontype,&#x9;&#x9;&#x9;-- Filter applied on ACTION_TYPE if not null.
&#x9;&#x9;&#x9;null, null, null, null, null, null,
&#x9;&#x9;&#x9;proxyfilename,&#x9;&#x9;-- Filter applied on FILE_NAME if not null.
&#x9;&#x9;&#x9;null, null, null,
&#x9;&#x9;&#x9;datasourcepath,&#x9;&#x9;-- Filter applied on DATA_SOURCE_PATH if not null.
&#x9;&#x9;&#x9;null, null, null, null, null, null, null
&#x9;&#x9;&#x9;) 
&#x9;DO
&#x9;&#x9;SET filenamePendingActions = true;
&#x9;END FOR;
&#x9;
&#x9;-- Use the default email if the proxy email is not known.
&#x9;-- This may be an indication that the administrator needs to add a user/email.
&#x9;IF (proxyuseremail IS NULL OR LENGTH(TRIM(proxyuseremail)) = 0) THEN
&#x9;&#x9;SET proxyuseremail = email_default;
&#x9;END IF;

&#x9;SET endTimestampValue = &apos;null&apos;;
&#x9;SET insertstatus = &apos;IN PROGRESS&apos;;
&#x9;SET message = &apos;null&apos;;
&#x9;SET email_exception = &apos;null&apos;;
&#x9;IF (actiontype = &apos;A&apos; or actiontype = &apos;R&apos;) THEN
&#x9;&#x9;-- If the data source path is null it means the file extension of the file is invalid indicating that the proper data data source path could not be determined.
&#x9;&#x9;IF (NOT validFileExtension) THEN
&#x9;&#x9;&#x9;-- Invalid file based on an invalid file extension.
&#x9;&#x9;&#x9;SET datasourcepath = metadatalayerpath||&apos;/DynamicTempFiles_Excel&apos;;
&#x9;&#x9;&#x9;SET endTimestampValue = &apos;CAST(&apos;&apos;&apos;||CURRENT_TIMESTAMP||&apos;&apos;&apos; AS TIMESTAMP)&apos;;
&#x9;&#x9;&#x9;SET message = &apos;&apos;&apos;The file extension [&apos;||lower(fileExtension)||&apos;] is not supported for filename=&apos;||proxyfilename||&apos;&apos;&apos;&apos;;
&#x9;&#x9;&#x9;SET insertstatus = &apos;INVALID FILE EXTENSION.  VIEWS NOT PUBLISHED&apos;;
&#x9;&#x9;&#x9;SET sendEmailException = true;

&#x9;&#x9;-- Determine if this is a valid filename
&#x9;&#x9;ELSEIF (NOT validFileName) THEN
&#x9;&#x9;&#x9;SET endTimestampValue = &apos;CAST(&apos;&apos;&apos;||CURRENT_TIMESTAMP||&apos;&apos;&apos; AS TIMESTAMP)&apos;;
&#x9;&#x9;&#x9;SET message = &apos;&apos;&apos;Missing username in the format: &quot;username-filename.ext&quot; for filename=&apos;||proxyfilename||&apos;&apos;&apos;&apos;;
&#x9;&#x9;&#x9;SET insertstatus = &apos;INVALID FILENAME.  VIEWS NOT PUBLISHED&apos;;
&#x9;&#x9;&#x9;SET sendEmailException = true;

&#x9;&#x9;-- Determine if this is a valid username and file username association
&#x9;&#x9;ELSEIF (NOT validFileUserAssociation) THEN
&#x9;&#x9;&#x9;SET endTimestampValue = &apos;CAST(&apos;&apos;&apos;||CURRENT_TIMESTAMP||&apos;&apos;&apos; AS TIMESTAMP)&apos;;
&#x9;&#x9;&#x9;SET message = &apos;&apos;&apos;The specified USERNAME[&apos;||proxyusername||&apos;] does not match the file username=[&apos;||proxyfileusername||&apos;] for filename=&apos;||proxyfilename||&apos;&apos;&apos;&apos;;
&#x9;&#x9;&#x9;SET insertstatus = &apos;FILE NOT ASSOCIATED WITH USERNAME=&apos;||NVL(proxyusername,&apos;null&apos;);
&#x9;&#x9;&#x9;SET sendEmailException = true;
&#x9;&#x9;END IF;

&#x9;&#x9;IF (sendEmailException) THEN
&#x9;&#x9;&#x9;-- Delete the invalid file
&#x9;&#x9;&#x9;CALL /shared/ASAssets/BestPractices_v81/DynamicFileFramework/Helper/deleteFile(debug, proxyfilename, datasourcepath, insertstatus, fileDeleted, status);
&#x9;&#x9;&#x9;IF (status IS NOT NULL) THEN
&#x9;&#x9;&#x9;&#x9;SET insertstatus = status;
&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;IF (debug = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;INTERNAL: status=[&apos;||insertstatus||&apos;]  message=[&apos;||message||&apos;]&apos;);
&#x9;&#x9;&#x9;END IF;

&#x9;&#x9;&#x9;-- Email an error that the file extension is not valid to the file upload user.
&#x9;&#x9;&#x9;IF (proxyuseremail IS NOT NULL AND LENGTH(TRIM(proxyuseremail)) &gt; 0) THEN
&#x9;&#x9;&#x9;&#x9;SET email_message = 
&apos;&lt;H1&gt;Dynamic File: Queue Insert Report&lt;/H1&gt;
&lt;H2&gt;&lt;span style=&quot;font-size:20px&quot;&gt;Environment: &lt;/span&gt;&lt;span style=&quot;font-size:20px;color:blue&quot;&gt;&apos; || NVL(envName,&apos;null&apos;) || &apos;&lt;/span&gt;&lt;/H2&gt;
&lt;H2&gt;&lt;span style=&quot;font-size: 20px&quot;&gt;Hostname: &lt;/span&gt;&lt;span style=&quot;font-size:20px;color:blue&quot;&gt;&apos; || NVL(nodehost,&apos;null&apos;) || &apos;&lt;/span&gt;&apos;||
&apos;&lt;span style=&quot;font-size:20px&quot;&gt;    Port: &lt;/span&gt;&lt;span style=&quot;font-size:20px;color:blue&quot;&gt;&apos; || NVL(CAST(nodeport AS VARCHAR),&apos;null&apos;) || &apos;&lt;/span&gt;
&lt;/H2&gt;
&lt;H2&gt;&lt;span style=&quot;font-size: 20px&quot;&gt;Organization: &lt;/span&gt;&lt;span style=&quot;font-size:20px;color:blue&quot;&gt;&apos;|| NVL(organization,&apos;N/A&apos;) || &apos;&lt;/span&gt;&apos;||
&apos;&lt;span style=&quot;font-size:20px&quot;&gt;    Project: &lt;/span&gt;&lt;span style=&quot;font-size:20px;color:blue&quot;&gt;&apos; || NVL(projectname,&apos;N/A&apos;) || &apos;&lt;/span&gt;&apos;||
&apos;&lt;span style=&quot;font-size:20px&quot;&gt;    SubProject: &lt;/span&gt;&lt;span style=&quot;font-size:20px;color:blue&quot;&gt;&apos; || NVL(subprojectname,&apos;N/A&apos;) || &apos;&lt;/span&gt;
&lt;/H2&gt;
&lt;H2 style=&quot;font-size: 15px&quot;&gt;Exception: &apos;||insertstatus||&apos; : &apos;||message||&apos;&lt;/H2&gt;&apos;;

&#x9;&#x9;&#x9;&#x9;SET email_subjectline = &apos;Dynamic File: [&apos;||NVL(envName,&apos;no env&apos;)||&apos;/&apos;||NVL(projectname,&apos;no project&apos;)||&apos;/&apos;||NVL(subprojectname,&apos;no subproject&apos;)||&apos;]&apos;||
&#x9;&#x9;&#x9;&#x9;&#x9;&apos; Dynamic File Queue Insert Error Report - &apos;||NVL(proxyfilename,&apos;no proxy filename available.&apos;);
&#x9;&#x9;&#x9;&#x9;IF (debug = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;EXCEPTION: Sending Email Subject [exception]:&apos;||CHR(10)||NVL(email_subjectline,&apos;null email subject line&apos;));
&#x9;&#x9;&#x9;&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;EXCEPTION: Sending Email Body [exception]:&apos;||CHR(10)||NVL(email_message,&apos;null email message&apos;));
&#x9;&#x9;&#x9;&#x9;END IF;

&#x9;&#x9;&#x9;&#x9;BEGIN INDEPENDENT TRANSACTION 
&#x9;&#x9;&#x9;&#x9;&#x9;-- Send the email
&#x9;&#x9;&#x9;&#x9;&#x9;CALL /lib/util/SendEMail (
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;null, 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;null,
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;proxyuseremail,
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;null, 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;null,
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;email_subjectline,
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;TEXT_HTML&apos;,
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;email_message
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;);
&#x9;&#x9;&#x9;&#x9;EXCEPTION
&#x9;&#x9;&#x9;&#x9;&#x9;ELSE
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET email_exception = &apos;&apos;&apos;&apos;||SUBSTRING(CAST(CURRENT_EXCEPTION.MESSAGE AS LONGVARCHAR),1,3998)||&apos;&apos;&apos;&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CALL LOG(moduleName||&apos; : SEND EMAIL EXCEPTION: &apos;||CAST(CURRENT_EXCEPTION.MESSAGE AS LONGVARCHAR));
&#x9;&#x9;&#x9;&#x9;END;
&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;END IF;
&#x9;END IF;

&#x9;-- Determine if this requests already exists
&#x9;IF (filenamePendingActions) THEN
&#x9;&#x9;SET status = &apos;DUPLICATE REQUEST IGNORED&apos;;
&#x9;ELSE -- insert the request
&#x9;&#x9;-- Get the next sequence number 
&#x9;&#x9;FOR r AS SELECT outputValue sequenceNum FROM /shared/ASAssets/BestPractices_v81/DynamicFileFramework/&quot;00_ExecuteDDL&quot;(seqStatement) DO
&#x9;&#x9;&#x9;SET sequenceNum = r.sequenceNum;
&#x9;&#x9;END FOR;
&#x9;&#x9;IF (sequenceNum IS NULL OR sequenceNum &lt;= 0) THEN
&#x9;&#x9;&#x9;RAISE ex VALUE &apos;The sequence number was not properly generated.&apos;;
&#x9;&#x9;END IF;
&#x9;&#x9;IF (debug = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;INTERNAL: sequenceNum=[&apos;||NVL(CAST(sequenceNum AS VARCHAR),&apos;null&apos;)||&apos;]&apos;);
&#x9;&#x9;END IF;

&#x9;&#x9;-- Insert the record into the database
&#x9;&#x9;SET sqlStatement = &apos;INSERT INTO &apos;||fullTablePath||&apos; VALUES (&apos;||
&#x9;&#x9;&#x9;CAST(sequenceNum AS VARCHAR)||&apos;,&apos;||
&#x9;&#x9;&#x9;&apos;CAST(&apos;&apos;&apos;||CURRENT_TIMESTAMP||&apos;&apos;&apos; AS TIMESTAMP)&apos;||&apos;,&apos;||
&#x9;&#x9;&#x9;endTimestampValue||&apos;,&apos;||
&#x9;&#x9;&#x9;NVL(&apos;&apos;&apos;&apos;||organization||&apos;&apos;&apos;&apos;,&apos;null&apos;)||&apos;,&apos;|| 
&#x9;&#x9;&#x9;NVL(&apos;&apos;&apos;&apos;||projectname||&apos;&apos;&apos;&apos;,&apos;null&apos;)||&apos;,&apos;|| 
&#x9;&#x9;&#x9;NVL(&apos;&apos;&apos;&apos;||subprojectname||&apos;&apos;&apos;&apos;,&apos;null&apos;)||&apos;,&apos;|| 
&#x9;&#x9;&#x9;NVL(&apos;&apos;&apos;&apos;||actionOriginator||&apos;&apos;&apos;&apos;,&apos;null&apos;)||&apos;,&apos;||
&#x9;&#x9;&#x9;&apos;&apos;&apos;&apos;||actiontype||&apos;&apos;&apos;&apos;||&apos;,&apos;|| 
&#x9;&#x9;&#x9;&apos;&apos;&apos;&apos;||insertstatus||&apos;&apos;&apos;&apos;||&apos;,&apos;|| 
&#x9;&#x9;&#x9;message||&apos;,&apos;||
&#x9;&#x9;&#x9;email_exception||&apos;,&apos;||
&#x9;&#x9;&#x9;NVL(&apos;&apos;&apos;&apos;||REPLACE(requestfilename,&apos;&apos;&apos;&apos;,&apos;&apos;&apos;&apos;&apos;&apos;)||&apos;&apos;&apos;&apos;,&apos;null&apos;)||&apos;,&apos;|| 
&#x9;&#x9;&#x9;NVL(&apos;&apos;&apos;&apos;||requestusername||&apos;&apos;&apos;&apos;,&apos;null&apos;)||&apos;,&apos;|| 
&#x9;&#x9;&#x9;NVL(&apos;&apos;&apos;&apos;||requestdomain||&apos;&apos;&apos;&apos;,&apos;null&apos;)||&apos;,&apos;|| 
&#x9;&#x9;&#x9;NVL(&apos;&apos;&apos;&apos;||REPLACE(proxyfilename,&apos;&apos;&apos;&apos;,&apos;&apos;&apos;&apos;&apos;&apos;)||&apos;&apos;&apos;&apos;,&apos;null&apos;)||&apos;,&apos;|| 
&#x9;&#x9;&#x9;NVL(&apos;&apos;&apos;&apos;||proxyusername||&apos;&apos;&apos;&apos;,&apos;null&apos;)||&apos;,&apos;|| 
&#x9;&#x9;&#x9;NVL(&apos;&apos;&apos;&apos;||proxyuseremail||&apos;&apos;&apos;&apos;,&apos;null&apos;)||&apos;,&apos;|| 
&#x9;&#x9;&#x9;NVL(CAST(allownullfilename AS VARCHAR),&apos;0&apos;)||&apos;,&apos;|| 
&#x9;&#x9;&#x9;NVL(&apos;&apos;&apos;&apos;||datasourcepath||&apos;&apos;&apos;&apos;,&apos;null&apos;)||&apos;,&apos;|| 
&#x9;&#x9;&#x9;NVL(&apos;&apos;&apos;&apos;||formattinglayerpath||&apos;&apos;&apos;&apos;,&apos;null&apos;)||&apos;,&apos;|| 
&#x9;&#x9;&#x9;NVL(&apos;&apos;&apos;&apos;||businesslayerpath||&apos;&apos;&apos;&apos;,&apos;null&apos;)||&apos;,&apos;|| 
&#x9;&#x9;&#x9;NVL(&apos;&apos;&apos;&apos;||appliationlayerpath||&apos;&apos;&apos;&apos;,&apos;null&apos;)||&apos;,&apos;||
&#x9;&#x9;&#x9;NVL(&apos;&apos;&apos;&apos;||publishedschemapath||&apos;&apos;&apos;&apos;,&apos;null&apos;)||&apos;,&apos;|| 
&#x9;&#x9;&#x9;NVL(&apos;&apos;&apos;&apos;||publisheddatabase||&apos;&apos;&apos;&apos;,&apos;null&apos;)||&apos;,&apos;|| 
&#x9;&#x9;&#x9;NVL(&apos;&apos;&apos;&apos;||constantslocation||&apos;&apos;&apos;&apos;,&apos;null&apos;)||&apos;,&apos;||
&#x9;&#x9;&#x9;NVL(CAST(retentionpolicy AS VARCHAR),&apos;0&apos;) ||
&#x9;&#x9;&#x9;&apos;)&apos;;

&#x9;&#x9;IF (debug = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;INTERNAL: sqlStatement=[&apos;||sqlStatement||&apos;]&apos;);
&#x9;&#x9;END IF;
&#x9;&#x9;-- Insert the row
&#x9;&#x9;EXECUTE IMMEDIATE sqlStatement;
&#x9;END IF;

&#x9;IF (debug = &apos;Y&apos;) THEN
&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;Successfully completed.&apos;);
&#x9;END IF;
EXCEPTION
&#x9;ELSE
&#x9;&#x9;&#x9;IF (email_default IS NOT NULL AND LENGTH(TRIM(email_default)) &gt; 0) THEN
&#x9;&#x9;        SET email_message = 
&apos;&lt;H1&gt;Dynamic File: Queue Insert Report&lt;/H1&gt;
&lt;H2&gt;&lt;span style=&quot;font-size:20px&quot;&gt;Environment: &lt;/span&gt;&lt;span style=&quot;font-size:20px;color:blue&quot;&gt;&apos; || NVL(envName,&apos;null&apos;) || &apos;&lt;/span&gt;&lt;/H2&gt;
&lt;H2&gt;&lt;span style=&quot;font-size: 20px&quot;&gt;Hostname: &lt;/span&gt;&lt;span style=&quot;font-size:20px;color:blue&quot;&gt;&apos; || NVL(nodehost,&apos;null&apos;) || &apos;&lt;/span&gt;&apos;||
   &apos;&lt;span style=&quot;font-size:20px&quot;&gt;    Port: &lt;/span&gt;&lt;span style=&quot;font-size:20px;color:blue&quot;&gt;&apos; || NVL(CAST(nodeport AS VARCHAR),&apos;null&apos;) || &apos;&lt;/span&gt;
&lt;/H2&gt;
&lt;H2&gt;&lt;span style=&quot;font-size: 20px&quot;&gt;Organization: &lt;/span&gt;&lt;span style=&quot;font-size:20px;color:blue&quot;&gt;&apos;|| NVL(organization,&apos;N/A&apos;) || &apos;&lt;/span&gt;&apos;||
   &apos;&lt;span style=&quot;font-size:20px&quot;&gt;    Project: &lt;/span&gt;&lt;span style=&quot;font-size:20px;color:blue&quot;&gt;&apos; || NVL(projectname,&apos;N/A&apos;) || &apos;&lt;/span&gt;&apos;||
   &apos;&lt;span style=&quot;font-size:20px&quot;&gt;    SubProject: &lt;/span&gt;&lt;span style=&quot;font-size:20px;color:blue&quot;&gt;&apos; || NVL(subprojectname,&apos;N/A&apos;) || &apos;&lt;/span&gt;
&lt;/H2&gt;
&lt;H2 style=&quot;font-size: 15px&quot;&gt;Exception: &apos; || SUBSTRING(NVL(CAST(CURRENT_EXCEPTION.TRACE AS LONGVARCHAR),&apos;  &apos;),1,2000) ||&apos;&lt;/H2&gt;&apos;;

&#x9;&#x9;&#x9;&#x9;SET email_subjectline = &apos;Dynamic File: [&apos;||NVL(envName,&apos;no env&apos;)||&apos;/&apos;||NVL(projectname,&apos;no project&apos;)||&apos;/&apos;||NVL(subprojectname,&apos;no subproject&apos;)||&apos;]&apos;||
&#x9;&#x9;&#x9;&#x9;&#x9;&apos; Dynamic File Queue Insert Error Report - &apos;||NVL(requestfilename,&apos;no request filename available.&apos;);
&#x9;&#x9;&#x9;&#x9;IF (debug = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;EXCEPTION: Sending Email Subject [exception]:&apos;||CHR(10)||NVL(email_subjectline,&apos;null email subject line&apos;));
&#x9;&#x9;&#x9;&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;EXCEPTION: Sending Email Body [exception]:&apos;||CHR(10)||NVL(email_message,&apos;null email message&apos;));
&#x9;&#x9;&#x9;&#x9;END IF;

&#x9;&#x9;&#x9;&#x9;-- Send the email
&#x9;&#x9;&#x9;&#x9;CALL /lib/util/SendEMail (
&#x9;&#x9;&#x9;&#x9;&#x9;null, 
&#x9;&#x9;&#x9;&#x9;&#x9;null,
&#x9;&#x9;&#x9;&#x9;&#x9;email_default,
&#x9;&#x9;&#x9;&#x9;&#x9;null, 
&#x9;&#x9;&#x9;&#x9;&#x9;null,
&#x9;&#x9;&#x9;&#x9;&#x9;email_subjectline,
&#x9;&#x9;&#x9;&#x9;&#x9;&apos;TEXT_HTML&apos;,
&#x9;&#x9;&#x9;&#x9;&#x9;email_message
&#x9;&#x9;&#x9;&#x9;);
&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;RAISE;
END</attribute>
  <attribute name="creationDate" type="LONG">1502824293970</attribute>
  <attribute name="creatorUserDomain" type="STRING">composite</attribute>
  <attribute name="creatorUserId" type="INTEGER">-1973</attribute>
  <attribute name="creatorUserName" type="STRING">admin</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1564410960320</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserId" type="INTEGER">-1973</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="MAP">
    <item>
      <key type="STRING">12/505</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Log</item>
      </value>
    </item>
  </attribute>
  <attribute name="resourceModifiedDateOnSourceCISSite" type="LONG">1502824293970</attribute>
</metadata>