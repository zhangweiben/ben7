<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:9a66723c-3693-47f1-a1f0-d7811996f9d5 -->
<metadata name="deleteFile" path="/shared/ASAssets/BestPractices_v81/DynamicFileFramework/Helper/deleteFile" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation>&lt;![CDATA[deleteFile:

&#x9;A script that manages removing files from the file system.

 &#x9;Input:
&#x9;&#x9;debug:&#x9;&#x9;&#x9;&#x9;&#x9;Y=debug on, N=debug off
&#x9;&#x9;fileName:&#x9;&#x9;&#x9;&#x9;The name of the file to be deleted.
   &#x9; &#x9;datasourcePath: &#x9;&#x9;Fully Qualified path to a Dynamic data source
&#x9;&#x9;messageAppend:&#x9;&#x9;&#x9;Message to append to the message generated here.
&#x9;Output:
&#x9;&#x9;fileDeleted&#x9;&#x9;&#x9;&#x9;0=not deleted, 1=deleted
&#x9;&#x9;message &#x9;&#x9;&#x9;&#x9;Poosible messages include:
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;FILE REMOVED.  &apos; + 1 of the following:
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;PUBLISHED VIEWS REMOVED&apos;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;VIEWS NOT PUBLISHED&apos;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;NO COLUMNS DETECTED.  VIEWS NOT PUBLISHED&apos;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;UNABLE TO REMOVE FILE.  &apos;  + 1 of the following:
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;PUBLISHED VIEWS REMOVED&apos;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;VIEWS NOT PUBLISHED&apos;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;NO COLUMNS DETECTED.  VIEWS NOT PUBLISHED&apos;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;FILE DOES NOT EXIST.  &apos; + 1 of the following:
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;PUBLISHED VIEWS REMOVED&apos;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;VIEWS NOT PUBLISHED&apos;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;NO COLUMNS DETECTED.  VIEWS NOT PUBLISHED&apos;


&#x9;Modified Date:&#x9;Modified By:&#x9;&#x9;CSW Version:&#x9;Reason:
&#x9;02/10/2016&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.2&#x9;&#x9;&#x9;Created new for the purpose of removing files.
&#x9;02/20/2018&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.5&#x9;&#x9;&#x9;Adapted for Assets Data Abstraction Best Practices

&#x9;(c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCO® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.]]&gt;</annotation>
  <parameters>
    <parameter name="debug" direction="IN" nullable="true">
      <datatype name="CHAR" type="STRING" minLength="1" maxLength="1"/>
    </parameter>
    <parameter name="fileName" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="datasourcePath" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="4000"/>
    </parameter>
    <parameter name="messageAppend" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="fileDeleted" direction="OUT" nullable="true">
      <datatype name="SMALLINT" type="INTEGER" minValue="-32768" maxValue="32767"/>
    </parameter>
    <parameter name="message" direction="OUT" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="4000"/>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
    <privilege group="all" domain="composite" privileges="READ"/>
  </security>
  <dependency target="/shared/ASAssets/Utilities/file/FileProcessingCJP/existsFile" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="filePath" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="success" direction="OUT">
        <datatype type="BOOLEAN"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/file/FileProcessingCJP/remove" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="objectPath" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="success" direction="OUT">
        <datatype type="BOOLEAN"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/file/getFileSeparator" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="result" direction="OUT">
        <datatype type="STRING" minLength="1" maxLength="1"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/log/logDebugMessage" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="moduleName" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="moduleNameType" type="STRING" maxLength="4096"/>
      </element>
      <element name="debug" direction="IN">
        <datatype type="STRING" maxLength="1"/>
      </element>
      <element name="messageText" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/getDataSourceRootPath" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="dsPath" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
      </element>
      <element name="debug" direction="IN">
        <datatype type="STRING" minLength="1" maxLength="1"/>
      </element>
      <element name="fileRootPath" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <attribute name="Script" type="STRING">/* deleteFile:

&#x9;A script that manages removing files from the file system.

 &#x9;Input:
&#x9;&#x9;debug:&#x9;&#x9;&#x9;&#x9;&#x9;Y=debug on, N=debug off
&#x9;&#x9;fileName:&#x9;&#x9;&#x9;&#x9;The name of the file to be deleted.
   &#x9; &#x9;datasourcePath: &#x9;&#x9;Fully Qualified path to a Dynamic data source
&#x9;&#x9;messageAppend:&#x9;&#x9;&#x9;Message to append to the message generated here.
&#x9;Output:
&#x9;&#x9;fileDeleted&#x9;&#x9;&#x9;&#x9;0=not deleted, 1=deleted
&#x9;&#x9;message &#x9;&#x9;&#x9;&#x9;Poosible messages include:
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;FILE REMOVED.  &apos; + 1 of the following:
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;PUBLISHED VIEWS REMOVED&apos;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;VIEWS NOT PUBLISHED&apos;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;NO COLUMNS DETECTED.  VIEWS NOT PUBLISHED&apos;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;UNABLE TO REMOVE FILE.  &apos;  + 1 of the following:
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;PUBLISHED VIEWS REMOVED&apos;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;VIEWS NOT PUBLISHED&apos;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;NO COLUMNS DETECTED.  VIEWS NOT PUBLISHED&apos;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;FILE DOES NOT EXIST.  &apos; + 1 of the following:
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;PUBLISHED VIEWS REMOVED&apos;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;VIEWS NOT PUBLISHED&apos;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;NO COLUMNS DETECTED.  VIEWS NOT PUBLISHED&apos;


&#x9;Modified Date:&#x9;Modified By:&#x9;&#x9;CSW Version:&#x9;Reason:
&#x9;02/10/2016&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.2&#x9;&#x9;&#x9;Created new for the purpose of removing files.
&#x9;02/20/2018&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.5&#x9;&#x9;&#x9;Adapted for Assets Data Abstraction Best Practices

&#x9;(c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCO® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.
*/
PROCEDURE deleteFile(
&#x9;IN&#x9;debug&#x9;&#x9;&#x9;&#x9;CHAR(1),&#x9;-- N=no debug, Y=debug
&#x9;IN&#x9;fileName&#x9;&#x9;&#x9;VARCHAR,
&#x9;IN&#x9;datasourcePath&#x9;&#x9;VARCHAR(4000),
&#x9;IN  messageAppend&#x9;&#x9;VARCHAR,&#x9;-- Message to append to the message generated here.
&#x9;OUT&#x9;fileDeleted&#x9;&#x9;&#x9;SMALLINT,&#x9;-- 0=not deleted, 1=deleted
&#x9;OUT&#x9;message&#x9;&#x9;&#x9;&#x9;VARCHAR(4000)
)
BEGIN
&#x9;DECLARE moduleName&#x9;&#x9;&#x9;VARCHAR DEFAULT &apos;deleteFile&apos;;
&#x9;DECLARE separator&#x9;&#x9;&#x9;VARCHAR;
&#x9;DECLARE fileExists&#x9;&#x9;&#x9;BOOLEAN;
&#x9;DECLARE fileRootPath&#x9;&#x9;LONGVARCHAR;
&#x9;DECLARE filePath&#x9;&#x9;&#x9;LONGVARCHAR;

&#x9;-- Get the file separator
&#x9;CALL /shared/ASAssets/Utilities/file/getFileSeparator(separator);
&#x9;IF (separator IS NULL OR length(separator) = 0) THEN
&#x9;&#x9;SET separator = &apos;/&apos;;
&#x9;END IF;
&#x9;SET fileDeleted = 0;
&#x9;SET message = null;

&#x9;-- Get the actual file system path by determining if the root path is the actual path or a file system security token name
&#x9;CALL /shared/ASAssets/Utilities/repository/getDataSourceRootPath(datasourcePath, debug, fileRootPath);

&#x9;-- File root path is resolved so proceed with removal
&#x9;IF (fileRootPath is not null) THEN
&#x9;&#x9;SET filePath = fileRootPath||separator||fileName;
&#x9;&#x9;CALL /shared/ASAssets/Utilities/file/FileProcessingCJP/existsFile(filePath, fileExists);
&#x9;&#x9;IF (fileExists) THEN
&#x9;&#x9;&#x9;IF (debug = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;FILE FOUND.  fileName=[&apos;||NVL(fileName,&apos;null&apos;)||&apos;]&apos;);
&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;-- Destroy the file system file
&#x9;&#x9;&#x9;CALL /shared/ASAssets/Utilities/file/FileProcessingCJP/remove(filePath, fileExists);
&#x9;&#x9;&#x9;CALL /shared/ASAssets/Utilities/file/FileProcessingCJP/existsFile(filePath, fileExists);
&#x9;&#x9;&#x9;IF (NOT fileExists) THEN
&#x9;&#x9;&#x9;&#x9;SET fileDeleted = 1;
&#x9;&#x9;&#x9;&#x9;&#x9;SET message = &apos;FILE REMOVED.  &apos;||TRIM(NVL(messageAppend,&apos;  &apos;));
-- messageAppend:
-- PUBLISHED VIEWS REMOVED
-- VIEWS NOT PUBLISHED
-- NO COLUMNS DETECTED.  VIEWS NOT PUBLISHED
/*
&#x9;&#x9;&#x9;&#x9;IF (published &gt; 0) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;SET message = &apos;FILE REMOVED.  PUBLISHED VIEWS REMOVED&apos;||TRIM(NVL(messageAppend,&apos;  &apos;));
&#x9;&#x9;&#x9;&#x9;ELSE
&#x9;&#x9;&#x9;&#x9;&#x9;SET message = &apos;FILE REMOVED.  FILE NOT PUBLISHED&apos;||TRIM(NVL(messageAppend,&apos;  &apos;));
&#x9;&#x9;&#x9;&#x9;END IF;
*/
&#x9;&#x9;&#x9;&#x9;IF (debug = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, message||&apos;.  fileName=[&apos;||NVL(fileName,&apos;null&apos;)||&apos;]  filePath=[&apos;||NVL(filePath,&apos;null&apos;)||&apos;]&apos;);
&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;ELSE
&#x9;&#x9;&#x9;&#x9;SET message = &apos;UNABLE TO REMOVE FILE.  &apos;||TRIM(NVL(messageAppend,&apos;  &apos;)); 
-- messageAppend:
-- PUBLISHED VIEWS REMOVED
-- VIEWS NOT PUBLISHED
-- NO COLUMNS DETECTED.  VIEWS NOT PUBLISHED
/*
&#x9;&#x9;&#x9;&#x9;IF (published &gt; 0) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;SET message = &apos;UNABLE TO REMOVE FILE.  PUBLISHED VIEWS REMOVED&apos;||TRIM(NVL(messageAppend,&apos;  &apos;)); 
&#x9;&#x9;&#x9;&#x9;ELSE
&#x9;&#x9;&#x9;&#x9;&#x9;SET message = &apos;UNABLE TO REMOVE FILE.  FILE NOT PUBLISHED&apos;||TRIM(NVL(messageAppend,&apos;  &apos;));
&#x9;&#x9;&#x9;&#x9;END IF;
*/
&#x9;&#x9;&#x9;&#x9;IF (debug = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, message||&apos;.  fileName=[&apos;||NVL(fileName,&apos;null&apos;)||&apos;]  filePath=[&apos;||NVL(filePath,&apos;null&apos;)||&apos;]&apos;);
&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;ELSE
&#x9;&#x9;&#x9;SET message = &apos;FILE DOES NOT EXIST.  &apos;||TRIM(NVL(messageAppend,&apos;  &apos;));
-- messageAppend:
-- PUBLISHED VIEWS REMOVED
-- VIEWS NOT PUBLISHED
-- NO COLUMNS DETECTED.  VIEWS NOT PUBLISHED
/*
&#x9;&#x9;&#x9;IF (published &gt; 0) THEN
&#x9;&#x9;&#x9;&#x9;SET message = &apos;FILE DOES NOT EXIST.  PUBLISHED VIEWS REMOVED&apos;||TRIM(NVL(messageAppend,&apos;  &apos;));
&#x9;&#x9;&#x9;ELSE
&#x9;&#x9;&#x9;&#x9;SET message = &apos;FILE DOES NOT EXIST&apos;;
&#x9;&#x9;&#x9;END IF;
*/
&#x9;&#x9;&#x9;IF (debug = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, message||&apos;.  fileName=[&apos;||NVL(fileName,&apos;null&apos;)||&apos;]&apos;);
&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;END IF;
&#x9;END IF;
END</attribute>
  <attribute name="creationDate" type="LONG">1503581348064</attribute>
  <attribute name="creatorUserDomain" type="STRING">composite</attribute>
  <attribute name="creatorUserId" type="INTEGER">1500</attribute>
  <attribute name="creatorUserName" type="STRING">dynview</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1518823796769</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserId" type="INTEGER">1500</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="NULL"/>
  <attribute name="resourceModifiedDateOnSourceCISSite" type="LONG">1503581348064</attribute>
</metadata>