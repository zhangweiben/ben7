<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:9a66723c-3693-47f1-a1f0-d7811996f9d5 -->
<metadata name="03_display_DYNAMIC_FILE_EMAIL" path="/shared/ASAssets/BestPractices_v81/DynamicFileFramework/03_display_DYNAMIC_FILE_EMAIL" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation>&lt;![CDATA[03_display_DYNAMIC_FILE_EMAIL:

&#x9;Provides a mechanism to output the contents of the DYNAMIC_FILE_EMAIL table.

&#x9;Input
&#x9;&#x9;debug&#x9;&#x9;&#x9;&#x9;&#x9;CHAR(1),&#x9;&#x9;-- Y=debug on, N=debug off
&#x9;&#x9;sortOrder&#x9;&#x9;&#x9;&#x9;VARCHAR,&#x9;&#x9;-- Valid Values for sorting by USER_NAME:   ASC|ASCENDING|DESC|DESCENDING
&#x9;&#x9;userName&#x9;&#x9;&#x9;&#x9;VARCHAR,&#x9;&#x9;-- Filter applied on USER_NAME if not null.  If % is present perform a LIKE otherwise perform = in WHERE clause.
&#x9;&#x9;userEmail&#x9;&#x9;&#x9;&#x9;VARCHAR(4000)&#x9;-- Filter applied on USER_EMAIL if not null.  If % is present perform a LIKE otherwise perform = in WHERE clause.
&#x9;Output:
&#x9;&#x9;result&#x9;&#x9;&#x9;&#x9;&#x9;CURSOR &#x9;&#x9;-- Output of the DYNAMIC_FILE_EMAIL table

&#x9;Modified Date:&#x9;Modified By:&#x9;&#x9;CSW Version:&#x9;Reason:
&#x9;02/20/2018&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.5&#x9;&#x9;&#x9;Adapted for Assets Data Abstraction Best Practices

&#x9;(c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCO® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.]]&gt;</annotation>
  <parameters>
    <parameter name="debug" direction="IN" nullable="true">
      <datatype name="CHAR" type="STRING" minLength="1" maxLength="1"/>
    </parameter>
    <parameter name="sortOrder" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="userName" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="userEmail" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="4000"/>
    </parameter>
    <parameter name="result" direction="OUT" nullable="true">
      <datatype name="result" type="TABLE" refId="256">
        <element name="USER_NAME">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="USER_EMAIL">
          <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
        </element>
      </datatype>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
    <privilege group="all" domain="composite" privileges="READ"/>
  </security>
  <dependency target="/lib/debug/Print" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="textToPrint" direction="IN">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="Text" type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/BestPractices_v81/DynamicFileFramework/constants" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="EXECUTE_DDL_PACKAGE_PATH" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="DATASOURCE_PATH" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="CATALOG_NAME" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="SCHEMA_NAME" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="DYNAMIC_FILE_SEQ" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="DYNAMIC_FILE_EMAIL" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="DYNAMIC_FILE_QUEUE" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="TABLESPACE_FILEGROUP" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="PROCESS_WAIT_TIME_SECONDS" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="DEFAULT_EMAIL" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="DEFAULT_RETENTION_POLICY_DAYS" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="CSV_SUPPORTED_FILE_EXTENSIONS" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="EXCEL_SUPPORTED_FILE_EXTENSIONS" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/RepoUtils/applyReservedListToPath" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="inPath" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="debug" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="result" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/string/getConstantV2" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="constantsPath" direction="IN">
        <datatype type="STRING" maxLength="4000"/>
      </element>
      <element name="constantsName" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="optionReturn" direction="IN">
        <datatype type="INTEGER" minValue="-32768" maxValue="32767"/>
      </element>
      <element name="outValue" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <attribute name="Script" type="STRING">/* 03_display_DYNAMIC_FILE_EMAIL:

&#x9;Provides a mechanism to output the contents of the DYNAMIC_FILE_EMAIL table.

&#x9;Input
&#x9;&#x9;debug&#x9;&#x9;&#x9;&#x9;&#x9;CHAR(1),&#x9;&#x9;-- Y=debug on, N=debug off
&#x9;&#x9;sortOrder&#x9;&#x9;&#x9;&#x9;VARCHAR,&#x9;&#x9;-- Valid Values for sorting by USER_NAME:   ASC|ASCENDING|DESC|DESCENDING
&#x9;&#x9;userName&#x9;&#x9;&#x9;&#x9;VARCHAR,&#x9;&#x9;-- Filter applied on USER_NAME if not null.  If % is present perform a LIKE otherwise perform = in WHERE clause.
&#x9;&#x9;userEmail&#x9;&#x9;&#x9;&#x9;VARCHAR(4000)&#x9;-- Filter applied on USER_EMAIL if not null.  If % is present perform a LIKE otherwise perform = in WHERE clause.
&#x9;Output:
&#x9;&#x9;result&#x9;&#x9;&#x9;&#x9;&#x9;CURSOR &#x9;&#x9;-- Output of the DYNAMIC_FILE_EMAIL table

&#x9;Modified Date:&#x9;Modified By:&#x9;&#x9;CSW Version:&#x9;Reason:
&#x9;02/20/2018&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.5&#x9;&#x9;&#x9;Adapted for Assets Data Abstraction Best Practices

&#x9;(c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCO® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.
*/
PROCEDURE &quot;03_display_DYNAMIC_FILE_EMAIL&quot;(
&#x9;IN  debug&#x9;&#x9;&#x9;CHAR(1),&#x9;&#x9;-- Y=debug on, N=debug off
&#x9;IN &#x9;sortOrder&#x9;&#x9;VARCHAR,&#x9;&#x9;-- Valid Values for sorting by REQUEST_DATE_START:   ASC|ASCENDING|DESC|DESCENDING
&#x9;IN  userName&#x9;&#x9;VARCHAR,&#x9;&#x9;-- Filter applied on USER_NAME if not null.   If % is present perform a LIKE otherwise perform = in WHERE clause.
&#x9;IN&#x9;userEmail&#x9;&#x9;VARCHAR(4000),&#x9;-- Filter applied on USER_EMAIL if not null.  If % is present perform a LIKE otherwise perform = in WHERE clause.
    OUT result &#x9;&#x9;&#x9;CURSOR  /shared/ASAssets/BestPractices_v81/DynamicFileFramework/constants.emailResultType
)
BEGIN
&#x9;DECLARE moduleName&#x9;&#x9;&#x9;&#x9;VARCHAR DEFAULT &apos;03_display_DYNAMIC_FILE_EMAIL&apos;;
&#x9;DECLARE&#x9;globalConstantsPath&#x9;&#x9;VARCHAR(4000) DEFAULT /shared/ASAssets/BestPractices_v81/DynamicFileFramework/constants.globalConstantsPath;
&#x9;DECLARE sortOrderVal&#x9;&#x9;&#x9;VARCHAR DEFAULT sortOrder;
&#x9;DECLARE sqlStatement&#x9;&#x9;&#x9;LONGVARCHAR;
&#x9;DECLARE queueDatasourcePath&#x9;&#x9;LONGVARCHAR;
&#x9;DECLARE queueCatalogName&#x9;&#x9;VARCHAR;
&#x9;DECLARE queueSchemaName&#x9;&#x9;&#x9;VARCHAR;
&#x9;DECLARE queueTableName&#x9;&#x9;&#x9;VARCHAR;
&#x9;DECLARE fullTablePath&#x9;&#x9;&#x9;LONGVARCHAR;
&#x9;DECLARE validSortOrder&#x9;&#x9;&#x9;VARCHAR DEFAULT &apos;|ASC|ASCENDING|DESC|DESCENDING|&apos;;
&#x9;DECLARE val&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;LONGVARCHAR;
&#x9;DECLARE col&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;VARCHAR;
&#x9;DECLARE whereClauseFilter&#x9;&#x9;LONGVARCHAR;
&#x9;DECLARE ex&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXCEPTION;

&#x9;IF (sortOrderVal IS NULL OR LENGTH(TRIM(sortOrderVal)) = 0) THEN
&#x9;&#x9;SET sortOrderVal = &apos;&apos;;
&#x9;ELSE
&#x9;&#x9;IF (INSTR(validSortOrder, &apos;|&apos;||UPPER(sortOrderVal)||&apos;|&apos;) = 0) THEN
&#x9;&#x9;&#x9;RAISE ex VALUE &apos;Invalid &quot;sortOrder&quot; value provided.  Valid=[&apos;||validSortOrder||&apos;]&apos;;
&#x9;&#x9;END IF;
&#x9;END IF;
&#x9;IF (globalConstantsPath IS NULL OR LENGTH(TRIM(globalConstantsPath)) = 0) THEN
&#x9;&#x9;RAISE ex VALUE &apos;The global constants path may not be null or emtpy.&apos;;
&#x9;END IF;

&#x9;-- This procedure is used to provide a queue for processing &quot;Dynamic View Framework&quot; requests.
&#x9;-- Get the datasource path, catalog and schema name to construct the path dynamically
&#x9;CALL /shared/ASAssets/Utilities/string/getConstantV2(globalConstantsPath, &apos;DATASOURCE_PATH&apos;, 1, queueDatasourcePath);
&#x9;CALL /shared/ASAssets/Utilities/string/getConstantV2(globalConstantsPath, &apos;CATALOG_NAME&apos;, 1, queueCatalogName);
&#x9;CALL /shared/ASAssets/Utilities/string/getConstantV2(globalConstantsPath, &apos;SCHEMA_NAME&apos;, 1, queueSchemaName);
&#x9;CALL /shared/ASAssets/Utilities/string/getConstantV2(globalConstantsPath, &apos;DYNAMIC_FILE_EMAIL&apos;, 1, queueTableName);
&#x9;IF (queueDatasourcePath IS NULL OR LENGTH(TRIM(queueDatasourcePath)) = 0) THEN
&#x9;&#x9;RAISE ex VALUE &apos;The datasource path may not be null or empty:  &apos;||globalConstantsPath||&apos;.DATASOURCE_PATH&apos;;
&#x9;END IF;
&#x9;IF (queueSchemaName IS NULL OR LENGTH(TRIM(queueSchemaName)) = 0) THEN
&#x9;&#x9;RAISE ex VALUE &apos;The schema name may not be null or empty:  &apos;||globalConstantsPath||&apos;.SCHEMA_NAME&apos;;
&#x9;END IF;
&#x9;IF (queueCatalogName IS NULL OR LENGTH(TRIM(queueCatalogName)) = 0) THEN
&#x9;&#x9;SET queueCatalogName = &apos;&apos;;
&#x9;ELSE
&#x9;&#x9;SET queueCatalogName = &apos;/&apos;||queueCatalogName;
&#x9;END IF;
&#x9;IF (queueTableName IS NULL OR LENGTH(TRIM(queueTableName)) = 0) THEN
&#x9;&#x9;RAISE ex VALUE &apos;The table name may not be null or empty:  &apos;||globalConstantsPath||&apos;.DYNAMIC_FILE_QUEUE&apos;;
&#x9;END IF;
&#x9;SET fullTablePath = queueDatasourcePath || queueCatalogName || &apos;/&apos;||queueSchemaName || &apos;/&apos;||queueTableName;
&#x9;CALL /shared/ASAssets/Utilities/repository/RepoUtils/applyReservedListToPath(fullTablePath, null, fullTablePath);

&#x9;-- Determine the where clause
&#x9;SET whereClauseFilter = &apos;&apos;;

&#x9;-- Apply where clause for USER_NAME
&#x9;SET col = &apos;USER_NAME&apos;;
&#x9;SET val = TRIM(REPLACE(userName,CHR(9),&apos; &apos;));
&#x9;IF (val IS NOT NULL AND LENGTH(TRIM(val)) &gt; 0) THEN
&#x9;&#x9;IF (length(whereClauseFilter) &gt; 0) THEN
&#x9;&#x9;&#x9;SET whereClauseFilter = whereClauseFilter ||CHR(10)||&apos;      &apos;||&apos;AND&apos;;
&#x9;&#x9;END IF;
&#x9;&#x9;-- Reduce the number of double spaces to a single space
&#x9;&#x9;while (INSTR(val, &apos;  &apos;) &gt; 0) do
&#x9;&#x9;&#x9;set val = REPLACE(val, &apos;  &apos;, &apos; &apos;);
&#x9;&#x9;end while;
&#x9;&#x9;-- Check for keywords: IS NULL or IS NOT NULL
&#x9;&#x9;IF (UPPER(val) = &apos;IS NULL&apos; OR UPPER(val) = &apos;IS NOT NULL&apos;) THEN
&#x9;&#x9;&#x9;-- Create the where clause
&#x9;&#x9;&#x9;SET whereClauseFilter = whereClauseFilter || &apos; &apos;||col||&apos; &apos;||UPPER(val);
&#x9;&#x9;ELSE
&#x9;&#x9;&#x9;IF (INSTR(val, &apos;%&apos;) &gt; 0) THEN
&#x9;&#x9;&#x9;&#x9;SET whereClauseFilter = whereClauseFilter || &apos; &apos;||col||&apos; LIKE &apos;&apos;&apos;||val||&apos;&apos;&apos;&apos;;
&#x9;&#x9;&#x9;ELSE
&#x9;&#x9;&#x9;&#x9;SET whereClauseFilter = whereClauseFilter || &apos; &apos;||col||&apos; = &apos;&apos;&apos;||val||&apos;&apos;&apos;&apos;;
&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;END IF;
&#x9;END IF;

&#x9;-- Apply where clause for USER_EMAIL
&#x9;SET col = &apos;USER_EMAIL&apos;;
&#x9;SET val = TRIM(REPLACE(userEmail,CHR(9),&apos; &apos;));
&#x9;IF (val IS NOT NULL AND LENGTH(TRIM(val)) &gt; 0) THEN
&#x9;&#x9;IF (length(whereClauseFilter) &gt; 0) THEN
&#x9;&#x9;&#x9;SET whereClauseFilter = whereClauseFilter ||CHR(10)||&apos;      &apos;||&apos;AND&apos;;
&#x9;&#x9;END IF;
&#x9;&#x9;-- Reduce the number of double spaces to a single space
&#x9;&#x9;while (INSTR(val, &apos;  &apos;) &gt; 0) do
&#x9;&#x9;&#x9;set val = REPLACE(val, &apos;  &apos;, &apos; &apos;);
&#x9;&#x9;end while;
&#x9;&#x9;-- Check for keywords: IS NULL or IS NOT NULL
&#x9;&#x9;IF (UPPER(val) = &apos;IS NULL&apos; OR UPPER(val) = &apos;IS NOT NULL&apos;) THEN
&#x9;&#x9;&#x9;-- Create the where clause
&#x9;&#x9;&#x9;SET whereClauseFilter = whereClauseFilter || &apos; &apos;||col||&apos; &apos;||UPPER(val);
&#x9;&#x9;ELSE
&#x9;&#x9;&#x9;IF (INSTR(val, &apos;%&apos;) &gt; 0) THEN
&#x9;&#x9;&#x9;&#x9;SET whereClauseFilter = whereClauseFilter || &apos; &apos;||col||&apos; LIKE &apos;&apos;&apos;||val||&apos;&apos;&apos;&apos;;
&#x9;&#x9;&#x9;ELSE
&#x9;&#x9;&#x9;&#x9;SET whereClauseFilter = whereClauseFilter || &apos; &apos;||col||&apos; = &apos;&apos;&apos;||val||&apos;&apos;&apos;&apos;;
&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;END IF;
&#x9;END IF;

&#x9;-- Add the WHERE clause predicate if a where clause exists
&#x9;IF (length(whereClauseFilter) &gt; 0) THEN
&#x9;&#x9;SET whereClauseFilter = CHR(10)||&apos;    &apos;||&apos;WHERE&apos; || whereClauseFilter;
&#x9;END IF;

&#x9;-- Add the where clause and order by clause
&#x9;SET sqlStatement = CHR(10)||&apos;    &apos;||&apos;SELECT * FROM &apos;||fullTablePath||whereClauseFilter||CHR(10)||&apos;    &apos;||&apos;ORDER BY USER_NAME &apos;||UPPER(sortOrderVal);

&#x9;-- Debug if applicable
&#x9;IF (upper(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;CALL print(moduleName||&apos; : sqlStatement=&apos;||NVL(sqlStatement,&apos;null&apos;));
&#x9;END IF;

&#x9;-- Execute the SQL Statement
&#x9;OPEN result FOR sqlStatement;
END</attribute>
  <attribute name="creationDate" type="LONG">1410976495807</attribute>
  <attribute name="creatorUserDomain" type="STRING">ldap</attribute>
  <attribute name="creatorUserName" type="STRING">zkxl6un</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1564410225346</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="MAP">
    <item>
      <key type="STRING">8/150</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
  </attribute>
</metadata>