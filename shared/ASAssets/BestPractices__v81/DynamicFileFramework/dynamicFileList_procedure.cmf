<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:9a66723c-3693-47f1-a1f0-d7811996f9d5 -->
<metadata name="dynamicFileList" path="/shared/ASAssets/BestPractices_v81/DynamicFileFramework/dynamicFileList" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation>&lt;![CDATA[dynamicFileList:

    A custom script to list the dynamic files and associated published tables.
&#x9;Assumption: Publish area (Virtual database, Catalog and Schema) and Datasources are already created.

 &#x9;Input:
&#x9;&#x9;debug:&#x9;&#x9;&#x9;&#x9;&#x9;- N=do not debug, Y=debug
&#x9;&#x9;datasourcePath:&#x9;&#x9;&#x9;- The full datasource path
&#x9;Output:
&#x9;&#x9;Cursor with columns: 
            status              - status messages:
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;PUBLISHED&apos;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;NOT PUBLISHED&apos;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;FILE NOT SUPPORTED&apos;
            fileName &#x9;&#x9;&#x9;- file name from the file system
&#x9;&#x9;&#x9;userEmail&#x9;&#x9;&#x9;- user email associated with this file
            fileTimestamp &#x9;&#x9;- timestamp when file was created
            fileSize &#x9;&#x9;&#x9;- size of the file in bytes
            publishedTableName &#x9;- name of the published file associated with the file 
            publishedTablePath &#x9;- SQL URL of the published table
&#x9;    &#x9;publishedDatabase&#x9;- published database name
            metadataTableName&#x9;- the CIS metadata datasource table name
            metadataTablePath&#x9;- the CIS metadata datasource table path

&#x9;Modified Date:&#x9;Modified By:&#x9;&#x9;CSW Version:&#x9;Reason:
&#x9;02/12/2016&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.2&#x9;&#x9;&#x9;Created new
&#x9;02/20/2018&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.5&#x9;&#x9;&#x9;Adapted for Assets Data Abstraction Best Practices

&#x9;(c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.]]&gt;</annotation>
  <parameters>
    <parameter name="debug" direction="IN" nullable="true">
      <datatype name="CHAR" type="STRING" minLength="1" maxLength="1"/>
    </parameter>
    <parameter name="datasourcePath" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="4000"/>
    </parameter>
    <parameter name="result" direction="OUT" nullable="true">
      <datatype name="result" type="TABLE" refId="256">
        <element name="status">
          <datatype name="VARCHAR" type="STRING" maxLength="4000"/>
        </element>
        <element name="fileName">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="userEmail">
          <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
        </element>
        <element name="fileTimestamp">
          <datatype name="TIMESTAMP" type="DATETIME"/>
        </element>
        <element name="fileSize">
          <datatype name="BIGINT" type="INTEGER"/>
        </element>
        <element name="publishedTableName">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="publishedTablePath">
          <datatype name="VARCHAR" type="STRING" maxLength="4000"/>
        </element>
        <element name="publishedDatabase">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="metadataTableName">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="metadataTablePath">
          <datatype name="VARCHAR" type="STRING" maxLength="4000"/>
        </element>
      </datatype>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
    <privilege group="all" domain="composite" privileges="READ"/>
  </security>
  <dependency target="/lib/debug/Print" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="textToPrint" direction="IN">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="Text" type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/lib/resource/ResourceDefs" type="DEFINITION_SET">
    <datatype name="Tree" type="TREE" refId="257"></datatype>
  </dependency>
  <dependency target="/lib/resource/ResourceExists" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="path" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
      </element>
      <element name="type" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceType" type="STRING" maxLength="40"/>
      </element>
      <element name="version" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceVersion" type="STRING" maxLength="255"/>
      </element>
      <element name="exists" direction="OUT">
        <datatype type="BOOLEAN"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/BestPractices_v81/DynamicFileFramework/Helper/emailGetUser" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="debug" direction="IN">
        <datatype type="STRING" minLength="1" maxLength="1"/>
      </element>
      <element name="userName" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="userEmail" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/BestPractices_v81/DynamicFileFramework/constants" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="EXECUTE_DDL_PACKAGE_PATH" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="DATASOURCE_PATH" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="CATALOG_NAME" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="SCHEMA_NAME" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="DYNAMIC_FILE_SEQ" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="DYNAMIC_FILE_EMAIL" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="DYNAMIC_FILE_QUEUE" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="TABLESPACE_FILEGROUP" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="PROCESS_WAIT_TIME_SECONDS" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="DEFAULT_EMAIL" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="DEFAULT_RETENTION_POLICY_DAYS" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="CSV_SUPPORTED_FILE_EXTENSIONS" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="EXCEL_SUPPORTED_FILE_EXTENSIONS" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/file/FileProcessingCJP/getFileInfo" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="directoryPath" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="includeDirs" direction="IN">
        <datatype type="STRING" minLength="255" maxLength="255"/>
      </element>
      <element name="FileInfo" direction="OUT">
        <datatype type="TABLE" refId="256">
          <element name="filePath">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
          <element name="fileName">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
          <element name="fileTimestamp">
            <datatype type="DATETIME"/>
          </element>
          <element name="fileSize">
            <datatype type="INTEGER"/>
          </element>
          <element name="isFile">
            <datatype type="INTEGER" minValue="-32768" maxValue="32767"/>
          </element>
          <element name="isDir">
            <datatype type="INTEGER" minValue="-32768" maxValue="32767"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/log/logDebugMessage" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="moduleName" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="moduleNameType" type="STRING" maxLength="4096"/>
      </element>
      <element name="debug" direction="IN">
        <datatype type="STRING" maxLength="1"/>
      </element>
      <element name="messageText" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/RepoUtils/applyReservedListToPath" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="inPath" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="debug" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="result" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/getBasicResourceCursor" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="fullResourcePath" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="4000"/>
      </element>
      <element name="resourceType" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="resourceCursor" direction="OUT">
        <datatype type="TABLE" refId="256">
          <element name="name">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="path">
            <datatype type="STRING" maxLength="32768"/>
          </element>
          <element name="type">
            <datatype type="STRING" maxLength="32768"/>
          </element>
          <element name="subtype">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="enabled">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="id">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="changeid">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="version">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="introspectState">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="ownerDomain">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="ownerName">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="impactLevel">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="impactMessage">
            <datatype type="STRING" maxLength="32768"/>
          </element>
          <element name="annotation">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
          <element name="explicitlyDesigned">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="tableType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="sqlText">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
          <element name="scriptText">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
          <element name="childCount">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="dataSourceType">
            <datatype type="STRING" maxLength="255"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/getDataSourceRootPath" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="dsPath" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
      </element>
      <element name="debug" direction="IN">
        <datatype type="STRING" minLength="1" maxLength="1"/>
      </element>
      <element name="fileRootPath" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/getDependentResourcesDirectRecurseCursor" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="fullResourcePath" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
      </element>
      <element name="resourceType" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceType" type="STRING" maxLength="40"/>
      </element>
      <element name="includeInitialPath" direction="IN">
        <datatype type="INTEGER" minValue="-32768" maxValue="32767"/>
      </element>
      <element name="inLineageResourceIdList" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="result" direction="OUT">
        <datatype type="TABLE" refId="256">
          <element name="resourceName">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="resourcePath">
            <datatype type="STRING" maxLength="4096"/>
          </element>
          <element name="resourceType">
            <datatype type="STRING" maxLength="40"/>
          </element>
          <element name="subtype">
            <datatype type="STRING" maxLength="40"/>
          </element>
          <element name="id">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="ownerDomain">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="ownerName">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="impactLevel">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="impactMessage">
            <datatype type="STRING" maxLength="32768"/>
          </element>
          <element name="enabled">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/getResourceListRecursive" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="resourcePath" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
      </element>
      <element name="resourceType" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceType" type="STRING" maxLength="40"/>
      </element>
      <element name="resourceTreeList" direction="OUT">
        <datatype type="TABLE" refId="256">
          <element name="name">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="resPath">
            <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="4000"/>
          </element>
          <element name="resType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="subType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="creationDate">
            <datatype type="DATETIME"/>
          </element>
          <element name="creationDateBigint">
            <datatype type="INTEGER"/>
          </element>
          <element name="creatorUserDomain">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="creatorUserName">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="lastModifiedDate">
            <datatype type="DATETIME"/>
          </element>
          <element name="lastModifiedDateBigint">
            <datatype type="INTEGER"/>
          </element>
          <element name="lastModifiedUserDomain">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="lastModifiedUserName">
            <datatype type="STRING" maxLength="255"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/string/getConstantV2" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="constantsPath" direction="IN">
        <datatype type="STRING" maxLength="4000"/>
      </element>
      <element name="constantsName" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="optionReturn" direction="IN">
        <datatype type="INTEGER" minValue="-32768" maxValue="32767"/>
      </element>
      <element name="outValue" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <attribute name="Script" type="STRING">/* dynamicFileList:

    A custom script to list the dynamic files and associated published tables.
&#x9;Assumption: Publish area (Virtual database, Catalog and Schema) and Datasources are already created.

 &#x9;Input:
&#x9;&#x9;debug:&#x9;&#x9;&#x9;&#x9;&#x9;- N=do not debug, Y=debug
&#x9;&#x9;datasourcePath:&#x9;&#x9;&#x9;- The full datasource path
&#x9;Output:
&#x9;&#x9;Cursor with columns: 
            status              - status messages:
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;PUBLISHED&apos;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;NOT PUBLISHED&apos;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;FILE NOT SUPPORTED&apos;
            fileName &#x9;&#x9;&#x9;- file name from the file system
&#x9;&#x9;&#x9;userEmail&#x9;&#x9;&#x9;- user email associated with this file
            fileTimestamp &#x9;&#x9;- timestamp when file was created
            fileSize &#x9;&#x9;&#x9;- size of the file in bytes
            publishedTableName &#x9;- name of the published file associated with the file 
            publishedTablePath &#x9;- SQL URL of the published table
&#x9;    &#x9;publishedDatabase&#x9;- published database name
            metadataTableName&#x9;- the CIS metadata datasource table name
            metadataTablePath&#x9;- the CIS metadata datasource table path

&#x9;Modified Date:&#x9;Modified By:&#x9;&#x9;CSW Version:&#x9;Reason:
&#x9;02/12/2016&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.2&#x9;&#x9;&#x9;Created new
&#x9;02/20/2018&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.5&#x9;&#x9;&#x9;Adapted for Assets Data Abstraction Best Practices

&#x9;(c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.
*/
PROCEDURE dynamicFileList(
&#x9;IN  debug&#x9;&#x9;&#x9;&#x9;&#x9;CHAR(1),&#x9;&#x9;-- N=do not debug, Y=debug
&#x9;IN&#x9;datasourcePath&#x9;&#x9;&#x9;VARCHAR(4000),&#x9;-- e.g. /shared/Project/BusinessArea/SubjectArea/Physical/Metadata/Dynamic/DynamicTempFiles_Excel
    OUT result PIPE (
&#x9;&#x9;status&#x9;&#x9;&#x9;&#x9;VARCHAR(4000),
        fileName &#x9;&#x9;&#x9;VARCHAR(255),
&#x9;&#x9;userEmail&#x9;&#x9;&#x9;LONGVARCHAR,
        fileTimestamp &#x9;&#x9;TIMESTAMP, 
        fileSize &#x9;&#x9;&#x9;BIGINT,
        publishedTableName &#x9;VARCHAR(255), 
        publishedTablePath &#x9;VARCHAR(4000),
&#x9;&#x9;publishedDatabase&#x9;VARCHAR(255),
&#x9;&#x9;metadataTableName&#x9;VARCHAR(255),
&#x9;&#x9;metadataTablePath&#x9;VARCHAR(4000)
        )
)
BEGIN
&#x9;DECLARE moduleName&#x9;&#x9;&#x9;&#x9;VARCHAR DEFAULT &apos;dynamicFileList&apos;;
&#x9;DECLARE&#x9;globalConstantsPath&#x9;&#x9;VARCHAR(4000) DEFAULT /shared/ASAssets/BestPractices_v81/DynamicFileFramework/constants.globalConstantsPath;
&#x9;DECLARE dataSourceType &#x9;&#x9;&#x9;VARCHAR(255);
&#x9;DECLARE supportedFileExt&#x9;&#x9;VARCHAR;
&#x9;DECLARE supportedFileExtCSV&#x9;&#x9;VARCHAR;
&#x9;DECLARE supportedFileExtXLS&#x9;&#x9;VARCHAR;
&#x9;DECLARE fileRootPath&#x9;&#x9;&#x9;/lib/resource/ResourceDefs.ResourcePath;
&#x9;DECLARE resExists&#x9;&#x9;&#x9;&#x9;BOOLEAN;
&#x9;DECLARE fileExtension&#x9;&#x9;&#x9;VARCHAR;
&#x9;DECLARE fileUsername&#x9;&#x9;&#x9;VARCHAR;
&#x9;DECLARE userEmail&#x9;&#x9;&#x9;&#x9;LONGVARCHAR;
&#x9;DECLARE listUsernameEmail&#x9;&#x9;LONGVARCHAR DEFAULT &apos;  &apos;;
&#x9;DECLARE metadataResPath&#x9;&#x9;&#x9;LONGVARCHAR;
&#x9;DECLARE metadataResName&#x9;&#x9;&#x9;VARCHAR;
&#x9;DECLARE publishedResPath&#x9;&#x9;LONGVARCHAR;
&#x9;DECLARE publishedTableName&#x9;&#x9;VARCHAR;
&#x9;DECLARE publishedTablePath&#x9;&#x9;LONGVARCHAR;
&#x9;DECLARE publishedDatabase&#x9;&#x9;VARCHAR;
&#x9;DECLARE i&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;INTEGER;
&#x9;DECLARE numFiles&#x9;&#x9;&#x9;&#x9;INTEGER;
&#x9;DECLARE resourceList&#x9;&#x9;&#x9;LONGVARCHAR DEFAULT &apos;&apos;;
&#x9;DECLARE pos1, pos2, pos3, pos4&#x9;INTEGER;

&#x9;IF (debug = &apos;Y&apos;) THEN 
&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;METADATA DATASOURCE PATH=[&apos;||NVL(datasourcePath,&apos;null&apos;)||&apos;]&apos;);
&#x9;END IF;
&#x9;-- The procedure is usable for File-Delimited and Microsoft Excel (non-ODBC) datasources only
&#x9;-- Check if the datasource is supported
&#x9;SELECT dataSourceType INTO dataSourceType FROM /shared/ASAssets/Utilities/repository/getBasicResourceCursor(datasourcePath, &apos;DATA_SOURCE&apos;);
&#x9;IF (dataSourceType = &apos;File-Delimited&apos;) OR (dataSourceType = &apos;Microsoft Excel (non-ODBC)&apos;) THEN
&#x9;&#x9;CALL /shared/ASAssets/Utilities/string/getConstantV2(globalConstantsPath, &apos;CSV_SUPPORTED_FILE_EXTENSIONS&apos;, 1, supportedFileExtCSV);
&#x9;&#x9;CALL /shared/ASAssets/Utilities/string/getConstantV2(globalConstantsPath, &apos;EXCEL_SUPPORTED_FILE_EXTENSIONS&apos;, 1, supportedFileExtXLS);

&#x9;&#x9;IF (dataSourceType = &apos;File-Delimited&apos;) THEN
&#x9;&#x9;&#x9;SET supportedFileExt = supportedFileExtCSV;
&#x9;&#x9;&#x9;IF (debug = &apos;Y&apos;) THEN 
&#x9;&#x9;&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;dataSourceType=[&apos;||NVL(dataSourceType,&apos;null&apos;)||&apos;]&apos;);
&#x9;&#x9;&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;supportedFileExt=[&apos;||NVL(supportedFileExt,&apos;null&apos;)||&apos;]&apos;);
&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;ELSE
&#x9;&#x9;&#x9;SET supportedFileExt = supportedFileExtXLS;
&#x9;&#x9;&#x9;IF (debug = &apos;Y&apos;) THEN 
&#x9;&#x9;&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;dataSourceType=[&apos;||NVL(dataSourceType,&apos;null&apos;)||&apos;]&apos;);
&#x9;&#x9;&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;supportedFileExt=[&apos;||NVL(supportedFileExt,&apos;null&apos;)||&apos;]&apos;);
&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;END IF;

&#x9;&#x9;IF (debug = &apos;Y&apos;) THEN 
&#x9;&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;SUPPORT FILE EXTENSIONS=[&apos;||NVL(supportedFileExt,&apos;null&apos;)||&apos;]&apos;);
&#x9;&#x9;END IF;

&#x9;&#x9;CALL /lib/resource/ResourceExists(datasourcePath, &apos;DATA_SOURCE&apos;, null, resExists);
&#x9;&#x9;IF (resExists) THEN
&#x9;&#x9;&#x9;-- Get the actual file system path by determining if the root path is the actual path or a file system security token name
&#x9;&#x9;&#x9;CALL /shared/ASAssets/Utilities/repository/getDataSourceRootPath(datasourcePath, debug, fileRootPath);&#x9;&#x9;

&#x9;&#x9;&#x9;-- File root path is resolved so proceed with removal
&#x9;&#x9;&#x9;IF (fileRootPath IS NOT NULL) THEN
&#x9;&#x9;&#x9;&#x9;SET numFiles = 0;
&#x9;&#x9;&#x9;&#x9;FOR f AS 
&#x9;&#x9;&#x9;&#x9;&#x9;SELECT * FROM /shared/ASAssets/Utilities/file/FileProcessingCJP/getFileInfo(fileRootPath, &apos;Y&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9;WHERE isFile = 1
&#x9;&#x9;&#x9;&#x9;DO
&#x9;&#x9;&#x9;&#x9;&#x9;SET numFiles = numFiles + 1;
&#x9;&#x9;&#x9;&#x9;&#x9;-- The first time through the loop only, construct a lookup variable containing the metadata table path and dependent published link path pairing.
&#x9;&#x9;&#x9;&#x9;&#x9;-- &#x9;&#x9;The &quot;resourceList&quot; is a LONGVARCHAR = VARCHAR(2,147,483,647) or 2 billion characters
&#x9;&#x9;&#x9;&#x9;&#x9;IF (numFiles = 1) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IF (debug = &apos;Y&apos;) THEN 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;RESOURCE LIST:  CONSTRUCT ONE TIME FOR METADATA PATH=[&apos;||NVL(datasourcePath,&apos;null&apos;)||&apos;]&apos;);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-- Get a list of datasource children
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET i = 0;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FOR p AS 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT * FROM /shared/ASAssets/Utilities/repository/getResourceListRecursive(datasourcePath, &apos;DATA_SOURCE&apos;) 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE resType = &apos;TABLE&apos;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;DO
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET i = i + 1;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET publishedResPath = &apos;&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FOR dep AS 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT * FROM /shared/ASAssets/Utilities/repository/getDependentResourcesDirectRecurseCursor(p.resPath, p.resType, 0, null) 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE resourceType = &apos;LINK&apos;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;DO
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET publishedResPath = dep.resourcePath;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END FOR;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-- Add the CIS metadata table path and published link path to the list
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET resourceList = resourceList || &apos;[&apos;||p.resPath||&apos;||&apos;||publishedResPath||&apos;]&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END FOR;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IF (debug = &apos;Y&apos;) THEN 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;RESOURCE LIST:  NUM RESOURCES=[&apos;||i||&apos;]  resourceList string size=[&apos;||cast(LENGTH(resourceList) as varchar)||&apos;]&apos;);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;RESOURCE LIST:  resourceList=&apos;||SUBSTRING(resourceList,1,30000));
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;&#x9;&#x9;END IF;

&#x9;&#x9;&#x9;&#x9;&#x9;-- Get the file extension
&#x9;&#x9;&#x9;&#x9;&#x9;IF (INSTR(f.fileName, &apos;.&apos;) &gt; 0) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET pos1 = INSTR(f.fileName, &apos;.&apos;, -1, 1);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IF (pos1 &gt; 0) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET fileExtension = SUBSTRING(f.fileName, pos1+1);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;&#x9;&#x9;SET fileExtension = &apos;.&apos;||lower(fileExtension);
&#x9;&#x9;&#x9;&#x9;&#x9;-- Determine if the file is supported
&#x9;&#x9;&#x9;&#x9;&#x9;IF (INSTR(supportedFileExt, fileExtension) &gt; 0) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IF (debug = &apos;Y&apos;) THEN 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;FILE SYSTEM FILES.  f.fileName=[&apos;||NVL(f.fileName,&apos;null&apos;)||&apos;]&apos;);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END IF;

&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-- Get the file username
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET fileUsername = null;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET pos1 = INSTR(f.fileName, &apos;-&apos;);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IF (pos1 &gt; 0) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET fileUsername = SUBSTRING(f.fileName, 1, pos1-1);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-- Check for an existing username/user email in the list
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET pos1 = INSTR(listUsernameEmail, &apos;[&apos;||fileUsername||&apos;|&apos;);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IF (fileUsername IS NOT NULL AND pos1 IS NOT NULL AND pos1 &gt; 0) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET pos2 = INSTR(listUsernameEmail, &apos;|&apos;, pos1);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET pos3 = INSTR(listUsernameEmail, &apos;]&apos;, pos2);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET userEmail = SUBSTRING(listUsernameEmail, pos2+1, pos3-pos2-1);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-- Get the user email
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CALL /shared/ASAssets/BestPractices_v81/DynamicFileFramework/Helper/emailGetUser(debug, fileUsername, userEmail);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-- Add the username/email to the list
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IF (userEmail IS NOT NULL) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IF (INSTR(listUsernameEmail, &apos;[&apos;||fileUsername||&apos;|&apos;) = 0) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET listUsernameEmail = listUsernameEmail || &apos;[&apos;||fileUsername||&apos;|&apos;||userEmail||&apos;]&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END IF;

&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-- if the parent path is found in the datasource name + filename then this is a match.  Find the name of the published view which is of type &apos;LINK&apos;.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-- resourceList format:  [metadata_table_path||published_link_path][metadata_table_path||published_link_path]...repeat n times
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IF (supportedFileExt = supportedFileExtCSV) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-- Get path position if CSV or TXT file
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET pos1 = INSTR(resourceList, &apos;[&apos;||datasourcePath||&apos;/&apos;||f.fileName);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-- Get path position if Excel file
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET pos1 = INSTR(resourceList, &apos;[&apos;||datasourcePath||&apos;/&apos;||f.fileName||&apos;/&apos;);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IF (pos1 &gt; 0) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHILE (pos1 &gt; 0) DO
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET pos2 = INSTR(resourceList, &apos;||&apos;, pos1);&#x9;-- separator between metadata table path and published link path
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET pos3 = INSTR(resourceList, &apos;]&apos;, pos1); -- end of this resource list pair
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET metadataResPath = SUBSTRING(resourceList,pos1+1,pos2-pos1-1);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET pos4 = INSTR(metadataResPath, &apos;/&apos;, -1, 1);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET metadataResName = SUBSTRING(metadataResPath, pos4+1);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IF (debug = &apos;Y&apos;) THEN 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;    FOUND IN &quot;resourceList&quot; CIS METADATA PATH=[&apos;||datasourcePath||&apos;/&apos;||f.fileName);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;    metadataResPath=&apos;||NVL(metadataResPath,&apos;null&apos;));
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;    metadataResName=&apos;||NVL(metadataResName,&apos;null&apos;));
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;    pos1=&apos;||pos1||&apos;  pos2=&apos;||pos2||&apos;  pos3=&apos;||pos3);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET publishedResPath = null;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET publishedDatabase = null;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET publishedTableName = null;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET publishedTablePath = null;

&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-- Continue if there is a published link resources associated with this metadata table path
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IF (pos3-2 &gt; pos2) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET publishedResPath = SUBSTRING(resourceList,pos2+2,pos3-pos2-2);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IF (LENGTH(TRIM(publishedResPath)) &gt; 0) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET pos4 = INSTR(publishedResPath, &apos;/&apos;, -1, 1);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET publishedTableName = SUBSTRING(publishedResPath, pos4+1);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET publishedTablePath = REPLACE(publishedResPath, &apos;/services/databases/&apos;, &apos;&apos;);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET pos4 = INSTR(publishedTablePath, &apos;/&apos;, 1, 1);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET publishedDatabase = SUBSTRING(publishedTablePath, 1, pos4-1);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET publishedTablePath = REPLACE(publishedTablePath, publishedDatabase||&apos;/&apos;, &apos;&apos;);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CALL /shared/ASAssets/Utilities/repository/RepoUtils/applyReservedListToPath(publishedTableName,null,publishedTableName);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CALL /shared/ASAssets/Utilities/repository/RepoUtils/applyReservedListToPath(publishedTablePath,null,publishedTablePath);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET publishedTablePath = REPLACE(publishedTablePath, &apos;/&apos;, &apos;.&apos;);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;INSERT INTO result VALUES(&apos;PUBLISHED&apos;, f.fileName, userEmail, f.fileTimestamp, f.fileSize, publishedTableName, publishedTablePath, publishedDatabase, metadataResName, metadataResPath);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;INSERT INTO result VALUES(&apos;NOT PUBLISHED&apos;, f.fileName, userEmail, f.fileTimestamp, f.fileSize, publishedTableName, publishedTablePath, publishedDatabase, metadataResName, metadataResPath);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IF (supportedFileExt = supportedFileExtCSV) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-- Get the next path position if CSV or TXT file
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET pos1 = INSTR(resourceList, &apos;[&apos;||datasourcePath||&apos;/&apos;||f.fileName, pos1+1);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-- Get the next path position if Excel file
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET pos1 = INSTR(resourceList, &apos;[&apos;||datasourcePath||&apos;/&apos;||f.fileName||&apos;/&apos;, pos1+1);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END WHILE;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IF (debug = &apos;Y&apos;) THEN 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;    publishedResPath=&apos;||NVL(publishedResPath,&apos;null&apos;));
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;    publishedDatabase=&apos;||NVL(publishedDatabase,&apos;null&apos;));
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;    publishedTablePath=&apos;||NVL(publishedTablePath,&apos;null&apos;));
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;    publishedTableName=&apos;||NVL(publishedTableName,&apos;null&apos;));
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;INSERT INTO result VALUES(&apos;NOT PUBLISHED&apos;, f.fileName, userEmail, f.fileTimestamp, f.fileSize, null, null, null, null, null);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;&#x9;&#x9;ELSE
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IF (INSTR(supportedFileExtCSV, fileExtension) = 0 AND INSTR(supportedFileExtXLS, fileExtension) = 0) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;INSERT INTO result VALUES(&apos;FILE NOT SUPPORTED&apos;, f.fileName, userEmail, f.fileTimestamp, f.fileSize, null, null, null, null, null);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;&#x9;END FOR;
&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;ELSE
&#x9;&#x9;&#x9;IF (debug = &apos;Y&apos;) THEN 
&#x9;&#x9;&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;DATASOURCE PATH DOES NOT EXIST.  datasourcePath=[&apos;||NVL(datasourcePath,&apos;null&apos;)||&apos;]&apos;);
&#x9;&#x9;&#x9;END IF;&#x9;&#x9;
&#x9;&#x9;END IF;
&#x9;ELSE
&#x9;&#x9;INSERT INTO result(status) VALUES (&apos;ERROR: Data source type not supported: &apos; || dataSourceType);
&#x9;&#x9;IF (debug = &apos;Y&apos;) THEN 
&#x9;&#x9;&#x9;CALL print(moduleName||&apos;ERROR: Data source type not supported: &apos; || dataSourceType);
&#x9;&#x9;END IF;
&#x9;END IF;
END</attribute>
  <attribute name="creationDate" type="LONG">1455278310259</attribute>
  <attribute name="creatorUserDomain" type="STRING">ldap_im</attribute>
  <attribute name="creatorUserId" type="INTEGER">1505</attribute>
  <attribute name="creatorUserName" type="STRING">zkxl6un</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1564410931006</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserId" type="INTEGER">1505</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="MAP">
    <item>
      <key type="STRING">9/269</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
  </attribute>
  <attribute name="resourceModifiedDateOnSourceCISSite" type="LONG">1455278310259</attribute>
</metadata>