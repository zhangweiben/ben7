<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:9a66723c-3693-47f1-a1f0-d7811996f9d5 -->
<metadata name="dynamicFileCreate" path="/shared/ASAssets/BestPractices_v81/DynamicFileFramework/Example/ex_project/Application/Services/Dynamic/dynamicFileCreate" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation>&lt;![CDATA[Script autogenerated]]&gt;</annotation>
  <parameters>
    <parameter name="requestfilename" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="4000"/>
    </parameter>
    <parameter name="result" direction="OUT" nullable="true">
      <datatype name="result" type="TABLE" refId="256">
        <element name="status">
          <datatype name="VARCHAR" type="STRING" maxLength="4000"/>
        </element>
        <element name="fileName">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="publishedTableName">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="publishedTablePath">
          <datatype name="VARCHAR" type="STRING" maxLength="4000"/>
        </element>
        <element name="publishedDatabase">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
      </datatype>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
    <privilege group="all" domain="composite" privileges="READ"/>
  </security>
  <dependency target="/lib/util/GetProperty" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="property" direction="IN">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="PropertyName" type="STRING" maxLength="255"/>
      </element>
      <element name="result" direction="OUT">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="PropertyValue" type="STRING" maxLength="4096"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/BestPractices_v81/DynamicFileFramework/DYNAMIC_FILE_LOCAL_LOOPBACK/BestPractices_v81/DynamicFileFramework/dynamicFileQueueInsert" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="debug" direction="IN">
        <datatype type="STRING" minLength="1" maxLength="1"/>
      </element>
      <element name="organization" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="projectname" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="subprojectname" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="actionOriginator" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="actiontype" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="requestusername" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="requestdomain" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="requestfilename" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="allownullfilename" direction="IN">
        <datatype type="INTEGER" minValue="-32768" maxValue="32767"/>
      </element>
      <element name="constantslocation" direction="IN">
        <datatype type="STRING" maxLength="4000"/>
      </element>
      <element name="metadatalayerpath" direction="IN">
        <datatype type="STRING" maxLength="4000"/>
      </element>
      <element name="formatlayerpath" direction="IN">
        <datatype type="STRING" maxLength="4000"/>
      </element>
      <element name="businesslayerpath" direction="IN">
        <datatype type="STRING" maxLength="4000"/>
      </element>
      <element name="appliationlayerpath" direction="IN">
        <datatype type="STRING" maxLength="4000"/>
      </element>
      <element name="publishedschemapath" direction="IN">
        <datatype type="STRING" maxLength="4000"/>
      </element>
      <element name="publisheddatabase" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="retentionpolicydays" direction="IN">
        <datatype type="INTEGER" minValue="-32768" maxValue="32767"/>
      </element>
      <element name="proxyfilename" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="status" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/BestPractices_v81/DynamicFileFramework/Example/ex_project/Application/Services/Dynamic/constants" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="ORGANIZATION" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="PROJECT_NAME" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="SUBPROJECT_NAME" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="PUBLISHED_DATABASE" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="PUBLISHED_SCHEMA_PATH" direction="OUT">
        <datatype type="STRING" maxLength="4000"/>
      </element>
      <element name="APPLICATION_LAYER" direction="OUT">
        <datatype type="STRING" maxLength="4000"/>
      </element>
      <element name="BUSINESS_LAYER" direction="OUT">
        <datatype type="STRING" maxLength="4000"/>
      </element>
      <element name="FORMATTING_LAYER" direction="OUT">
        <datatype type="STRING" maxLength="4000"/>
      </element>
      <element name="PHYSICAL_METADATA_LAYER" direction="OUT">
        <datatype type="STRING" maxLength="4000"/>
      </element>
      <element name="RETENTION_POLICY_DAYS" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="ALLOW_NULL_FILE_NAME" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/string/getConstantV2" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="constantsPath" direction="IN">
        <datatype type="STRING" maxLength="4000"/>
      </element>
      <element name="constantsName" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="optionReturn" direction="IN">
        <datatype type="INTEGER" minValue="-32768" maxValue="32767"/>
      </element>
      <element name="outValue" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <attribute name="Script" type="STRING">/* dynamicFileCreate:

    A custom script that manages views for Excel (non-ODBC) and File-Delimited data sources dynamically.
    Assumption: Publish area (Virtual database, Catalog and Schema) and Datasources are already created.

    Invoked externally by a user: select * from CATALOG.DYNAMIC.dynamicFileCreate(&apos;file_name.ext&apos;)
    Rules: If the filename does not contain the username prepended with a dash, then this procedure will add it.
           If the filename already contains the username prepended, then no username is added.
           If the filename is blank, and this procedure internally allows null or blank file names (allowNullFileName=1)
             then all files in the file system that have not been introspected are introspected for that user and
             prepended with the invoking user&apos;s username if required.

     Input:
        requestfilename - The name of the file system file to be removed. Case insensitive.
    Output:
        Cursor with columns:
            status               - status messages:
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Queuing Messages:
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;FILE ADD QUEUED&apos;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;INVALID FILENAME&apos;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;DUPLICATE REQUEST IGNORED&apos;

&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Email Messages:
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;UNKNOWN&apos;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;FILE ADDED.  NO VIEWS PUBLISHED&apos;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;FILE ADDED.  VIEWS PUBLISHED&apos;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;FILE ADDED.  VIEWS ALREADY EXISTS&apos;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;FILE ADDED.  VIEWS OVERWRITTEN&apos;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;FILE ADDED.  NO COLUMNS DETECTED. NO VIEWS PUBLISHED&apos;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;FILE DOES NOT EXIST&apos;

&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;- Occurs when the file being added contains no Excel sheets and/or no columns and no data
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;FILE REMOVED.  NO COLUMNS DETECTED.  VIEWS NOT PUBLISHED&apos;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;UNABLE TO REMOVE FILE.  NO COLUMNS DETECTED.  VIEWS NOT PUBLISHED&apos;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;FILE DOES NOT EXIST.  NO COLUMNS DETECTED.  VIEWS NOT PUBLISHED&apos;

&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;ERROR: Data source type not supported: &apos;+&lt;dataSourceType&gt;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;ERROR: File Name is required.&apos;  - occurs when (allowNullFileName = 0 and (fileName IS NULL OR LENGTH(fileName) = 0))

            fileName             - file name from the file system
            publishedTableName   - name of the published file associated with the file 
            publishedTablePath   - SQL URL of the published table
            publishedDatabase    - published database name

&#x9;Modified Date:&#x9;Modified By:&#x9;&#x9;CSW Version:&#x9;Reason:
&#x9;02/20/2018&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.5&#x9;&#x9;&#x9;Adapted for Assets Data Abstraction Best Practices

&#x9;(c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCO® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.

    This procedure was generated by &quot;initCreateResources&quot; on 2018-02-25
*/
PROCEDURE dynamicFileCreate(
&#x9;IN requestfilename&#x9;&#x9;VARCHAR(4000),
    OUT result PIPE (
        status &#x9;&#x9;&#x9;&#x9;VARCHAR(4000),
&#x9;&#x9;fileName&#x9;&#x9;&#x9;VARCHAR(255),
        publishedTableName &#x9;VARCHAR(255), 
        publishedTablePath &#x9;VARCHAR(4000),
&#x9;&#x9;publishedDatabase&#x9;VARCHAR(255)
        )
)
BEGIN
&#x9;DECLARE moduleName&#x9;&#x9;&#x9;VARCHAR DEFAULT &apos;dynamicFileCreate&apos;;
&#x9;DECLARE constantsLocation&#x9;VARCHAR(4000) DEFAULT /shared/ASAssets/BestPractices_v81/DynamicFileFramework/Example/ex_project/Application/Services/Dynamic/constants.constantsLocation; 
&#x9;DECLARE organization&#x9;&#x9;VARCHAR;
&#x9;DECLARE projectName&#x9;&#x9;&#x9;VARCHAR;
&#x9;DECLARE subprojectName&#x9;&#x9;VARCHAR;
&#x9;DECLARE publishedDatabase&#x9;VARCHAR;
&#x9;-- Published Schema Path: e.g. /services/databases/published_data_source/catalog/Dynamic : Dynamic is recommended for the schema name
&#x9;DECLARE publishedSchemaPath VARCHAR(4000);
&#x9;-- Physical Metadata Path                           /shared/base_project_path/Physical/Metadata/Dynamic
&#x9;DECLARE metadataLayerPath&#x9;VARCHAR(4000);
&#x9;-- Middle layer paths [optional]
&#x9;DECLARE formattingLayerPath&#x9;VARCHAR(4000);&#x9;&#x9;&#x9;--/shared/base_project_path/Physical/Formatting/Dynamic
&#x9;DECLARE businessLayerPath&#x9;VARCHAR(4000);&#x9;&#x9;&#x9;--/shared/base_project_path/Business/Logical/Dynamic
&#x9;DECLARE applicationLayerPath VARCHAR(4000);&#x9;&#x9;&#x9;--/shared/base_project_path/Application/Views/Dynamic

&#x9;-- Allows this invoking interface procedure to control the behavior of the implementation procedure.
&#x9;DECLARE allowNullFileName&#x9;VARCHAR;&#x9;&#x9;&#x9;&#x9;--&#x9;0=Do not allow user to pass in null/empty for the file name.  Throw an exception.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;1=Allow the user to pass in null/empty for the file name which results in picking up all unclaimed (not introspected) files in the file system for the invoking user.
&#x9;DECLARE requestusername&#x9;&#x9;VARCHAR;
&#x9;DECLARE requestdomain&#x9;&#x9;VARCHAR;
&#x9;DECLARE retentionpolicydays VARCHAR;&#x9;&#x9;&#x9;&#x9;-- Delete files and DV resources older than x days.  This is a numeric value that will be converted from text to integer.
&#x9;DECLARE proxyfilename&#x9;&#x9;VARCHAR;
&#x9;DECLARE status&#x9;&#x9;&#x9;&#x9;VARCHAR;

&#x9;-- Get the current username in order to prefix to the file name
&#x9;CALL /lib/util/GetProperty(&apos;CURRENT_USER_NAME&apos;,requestusername);
&#x9;CALL /lib/util/GetProperty(&apos;CURRENT_USER_DOMAIN&apos;,requestdomain);

&#x9;-- Get application constants
&#x9;CALL /shared/ASAssets/Utilities/string/getConstantV2(constantsLocation, &apos;ORGANIZATION&apos;, 1, organization);
&#x9;CALL /shared/ASAssets/Utilities/string/getConstantV2(constantsLocation, &apos;PROJECT_NAME&apos;, 1, projectName);
&#x9;CALL /shared/ASAssets/Utilities/string/getConstantV2(constantsLocation, &apos;SUBPROJECT_NAME&apos;, 1, subprojectName);
&#x9;CALL /shared/ASAssets/Utilities/string/getConstantV2(constantsLocation, &apos;PUBLISHED_DATABASE&apos;, 1, publishedDatabase);
&#x9;CALL /shared/ASAssets/Utilities/string/getConstantV2(constantsLocation, &apos;PUBLISHED_SCHEMA_PATH&apos;, 1, publishedSchemaPath);
&#x9;CALL /shared/ASAssets/Utilities/string/getConstantV2(constantsLocation, &apos;APPLICATION_LAYER&apos;, 1, applicationLayerPath);
&#x9;CALL /shared/ASAssets/Utilities/string/getConstantV2(constantsLocation, &apos;BUSINESS_LAYER&apos;, 1, businessLayerPath);
&#x9;CALL /shared/ASAssets/Utilities/string/getConstantV2(constantsLocation, &apos;FORMATTING_LAYER&apos;, 1, formattingLayerPath);
&#x9;CALL /shared/ASAssets/Utilities/string/getConstantV2(constantsLocation, &apos;PHYSICAL_METADATA_LAYER&apos;, 1, metadataLayerPath);
&#x9;CALL /shared/ASAssets/Utilities/string/getConstantV2(constantsLocation, &apos;ALLOW_NULL_FILE_NAME&apos;, 1, allowNullFileName);
&#x9;CALL /shared/ASAssets/Utilities/string/getConstantV2(constantsLocation, &apos;RETENTION_POLICY_DAYS&apos;, 1, retentionpolicydays);

&#x9;-- Insert a request into the database table queue
&#x9;CALL /shared/ASAssets/BestPractices_v81/DynamicFileFramework/DYNAMIC_FILE_LOCAL_LOOPBACK/BestPractices_v81/DynamicFileFramework/dynamicFileQueueInsert(
&#x9;&#x9;&apos;N&apos;,
&#x9;&#x9;organization,
&#x9;&#x9;projectName,
&#x9;&#x9;subprojectName,
&#x9;&#x9;moduleName,
&#x9;&#x9;&apos;A&apos;,&#x9;-- ADD File
&#x9;&#x9;requestusername,
&#x9;&#x9;requestdomain,
&#x9;&#x9;requestfilename,
&#x9;&#x9;CAST(allowNullFileName AS SMALLINT),
&#x9;&#x9;constantsLocation,
&#x9;&#x9;metadataLayerPath,
&#x9;&#x9;formattingLayerPath,
&#x9;&#x9;businessLayerPath,
&#x9;&#x9;applicationLayerPath,
&#x9;&#x9;publishedSchemaPath,
&#x9;&#x9;publishedDatabase,
&#x9;&#x9;CAST(retentionpolicydays AS SMALLINT),
&#x9;&#x9;proxyfilename,
&#x9;&#x9;status
&#x9;);
&#x9;INSERT INTO result(status, fileName, publishedTableName, publishedTablePath, publishedDatabase) 
&#x9;&#x9;&#x9;VALUES (status, proxyfilename, &apos;TBD&apos;, &apos;TBD&apos;, publishedDatabase);
END</attribute>
  <attribute name="creationDate" type="LONG">1519581503606</attribute>
  <attribute name="creatorUserDomain" type="STRING">composite</attribute>
  <attribute name="creatorUserId" type="INTEGER">-1973</attribute>
  <attribute name="creatorUserName" type="STRING">admin</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1564410535129</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserId" type="INTEGER">-1973</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="NULL"/>
  <attribute name="resourceModifiedDateOnSourceCISSite" type="LONG">1519581503606</attribute>
</metadata>