<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:e931daa6-7fda-456a-badf-4cdb1c228a1a -->
<metadata name="dynamicFileRemove" path="/shared/ASAssets/BestPractices_v81/DynamicFileFramework/dynamicFileRemove" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation>&lt;![CDATA[dynamicFileRemove:

&#x9;A script that manages removing files from the file system and published views associated with those files. 
&#x9;Files are only permitted to be removed by the user who created them.

 &#x9;Input:
&#x9;&#x9;debug:&#x9;&#x9;&#x9;&#x9;&#x9;Y=debug on, N=debug off
&#x9;&#x9;inUserName:&#x9;&#x9;&#x9;&#x9;The name of the user who is authorized to remove the file.&#x9;
&#x9;&#x9;inFileName:&#x9;&#x9;&#x9;&#x9;The name of the file to be deleted.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Undocumented feature only to be used for the Web Upload Application Service Account.  DO NOT GIVE THIS INFORMATION TO USERS
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Format: USERNAME[nbkid]nbkid-filename.ext
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;When the file name contains USERNAME[nbkid], it informs this procedure that the proxy user within the square brackets
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;is the actual owner of the file and overrides the environment username which is set when the service account invokes
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;this procedure.  This is required because this procedure verifies the actual user with the nbkid prefixed in front of
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;the filename.  If they are different it does not perform any action.   With a service account there has to be a way
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;in which the service account can inform this procedure who the actual user is.  Therefore the nbkid must match within
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;the square brackets and prefixed to the filename in order for an action to be taken.  The service account acquires the
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;actual username from its context before invoking this procedure.
   &#x9; &#x9;datasourcePath: &#x9;&#x9;Fully Qualified path to a Dynamic data source
&#x9;&#x9;publishedDatabase:&#x9;&#x9;The name of the published databases

&#x9;Output:
&#x9;&#x9;Cursor with columns:
            status&#x9;&#x9;&#x9;&#x9;- removal status message
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;FILE REMOVED.  &apos; + 1 of the following:
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;PUBLISHED VIEWS REMOVED&apos;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;VIEWS NOT PUBLISHED&apos;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;UNABLE TO REMOVE FILE.  &apos;  + 1 of the following:
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;PUBLISHED VIEWS REMOVED&apos;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;VIEWS NOT PUBLISHED&apos;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;FILE DOES NOT EXIST.  &apos; + 1 of the following:
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;PUBLISHED VIEWS REMOVED&apos;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;VIEWS NOT PUBLISHED&apos;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;FILE NOT ASSOCIATED WITH USERNAME=&lt;username&gt;&apos;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;FILE DOES NOT EXIST.  FILE NOT ASSOCIATED WITH USERNAME=&lt;username&gt;&apos;

            fileName &#x9;&#x9;&#x9;- file name from the file system
            publishedTableName &#x9;- name of the published file associated with the file 
            publishedTablePath &#x9;- SQL URL of the published table
&#x9;    &#x9;publishedDatabase&#x9;- published database name
            metadataTableName&#x9;- the CIS metadata datasource table name
            metadataTablePath&#x9;- the CIS metadata datasource table path

&#x9;Modified Date:&#x9;Modified By:&#x9;&#x9;CSW Version:&#x9;Reason:
&#x9;02/10/2016&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.2&#x9;&#x9;&#x9;Created new for the purpose of removing files.
&#x9;02/20/2018&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.5&#x9;&#x9;&#x9;Adapted for Assets Data Abstraction Best Practices

&#x9;(c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.]]&gt;</annotation>
  <parameters>
    <parameter name="debug" direction="IN" nullable="true">
      <datatype name="CHAR" type="STRING" minLength="1" maxLength="1"/>
    </parameter>
    <parameter name="inUsername" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="inFileName" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="4000"/>
    </parameter>
    <parameter name="datasourcePath" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="4000"/>
    </parameter>
    <parameter name="publishedDatabase" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="result" direction="OUT" nullable="true">
      <datatype name="result" type="TABLE" refId="256">
        <element name="status">
          <datatype name="VARCHAR" type="STRING" maxLength="4000"/>
        </element>
        <element name="fileName">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="publishedTableName">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="publishedTablePath">
          <datatype name="VARCHAR" type="STRING" maxLength="4000"/>
        </element>
        <element name="publishedDatabase">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="metadataTableName">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="metadataTablePath">
          <datatype name="VARCHAR" type="STRING" maxLength="4000"/>
        </element>
      </datatype>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
    <privilege group="all" domain="composite" privileges="READ"/>
  </security>
  <dependency target="/lib/resource/ResourceExists" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="path" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
      </element>
      <element name="type" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceType" type="STRING" maxLength="40"/>
      </element>
      <element name="version" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceVersion" type="STRING" maxLength="255"/>
      </element>
      <element name="exists" direction="OUT">
        <datatype type="BOOLEAN"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/BestPractices_v81/DynamicFileFramework/Helper/deleteFile" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="debug" direction="IN">
        <datatype type="STRING" minLength="1" maxLength="1"/>
      </element>
      <element name="fileName" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="datasourcePath" direction="IN">
        <datatype type="STRING" maxLength="4000"/>
      </element>
      <element name="messageAppend" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="fileDeleted" direction="OUT">
        <datatype type="INTEGER" minValue="-32768" maxValue="32767"/>
      </element>
      <element name="message" direction="OUT">
        <datatype type="STRING" maxLength="4000"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/BestPractices_v81/DynamicFileFramework/constants" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="EXECUTE_DDL_PACKAGE_PATH" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="DATASOURCE_PATH" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="CATALOG_NAME" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="SCHEMA_NAME" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="DYNAMIC_FILE_SEQ" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="DYNAMIC_FILE_EMAIL" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="DYNAMIC_FILE_QUEUE" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="TABLESPACE_FILEGROUP" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="PROCESS_WAIT_TIME_SECONDS" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="DEFAULT_EMAIL" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="DEFAULT_RETENTION_POLICY_DAYS" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="CSV_SUPPORTED_FILE_EXTENSIONS" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="EXCEL_SUPPORTED_FILE_EXTENSIONS" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/file/FileProcessingCJP/existsFile" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="filePath" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="success" direction="OUT">
        <datatype type="BOOLEAN"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/file/getFileSeparator" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="result" direction="OUT">
        <datatype type="STRING" minLength="1" maxLength="1"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/generate/destroyDependentLineage" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="destroyInitialResource" direction="IN">
        <datatype type="INTEGER" minValue="-32768" maxValue="32767"/>
      </element>
      <element name="destroyEmptyParentFolder" direction="IN">
        <datatype type="INTEGER" minValue="-32768" maxValue="32767"/>
      </element>
      <element name="fullResourcePath" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="inDebug" direction="IN">
        <datatype type="STRING" minLength="1" maxLength="1"/>
      </element>
      <element name="result" direction="OUT">
        <datatype type="TABLE" refId="256">
          <element name="actionType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="id">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="enabled">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="resourceName">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="resourcePath">
            <datatype type="STRING" maxLength="4096"/>
          </element>
          <element name="resourceType">
            <datatype type="STRING" maxLength="40"/>
          </element>
          <element name="subtype">
            <datatype type="STRING" maxLength="40"/>
          </element>
          <element name="ownerDomain">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="ownerName">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="impactLevel">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="impactMessage">
            <datatype type="STRING" maxLength="32768"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/log/logDebugMessage" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="moduleName" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="moduleNameType" type="STRING" maxLength="4096"/>
      </element>
      <element name="debug" direction="IN">
        <datatype type="STRING" maxLength="1"/>
      </element>
      <element name="messageText" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/RepoUtils/applyReservedListToPath" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="inPath" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="debug" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="result" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/getBasicResourceCursor" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="fullResourcePath" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="4000"/>
      </element>
      <element name="resourceType" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="resourceCursor" direction="OUT">
        <datatype type="TABLE" refId="256">
          <element name="name">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="path">
            <datatype type="STRING" maxLength="32768"/>
          </element>
          <element name="type">
            <datatype type="STRING" maxLength="32768"/>
          </element>
          <element name="subtype">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="enabled">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="id">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="changeid">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="version">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="introspectState">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="ownerDomain">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="ownerName">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="impactLevel">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="impactMessage">
            <datatype type="STRING" maxLength="32768"/>
          </element>
          <element name="annotation">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
          <element name="explicitlyDesigned">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="tableType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="sqlText">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
          <element name="scriptText">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
          <element name="childCount">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="dataSourceType">
            <datatype type="STRING" maxLength="255"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/getDataSourceRootPath" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="dsPath" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
      </element>
      <element name="debug" direction="IN">
        <datatype type="STRING" minLength="1" maxLength="1"/>
      </element>
      <element name="fileRootPath" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/string/extractBiDelimitedText" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="inText" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="searchTerm" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="openingDelim" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="closingDelim" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="inOccurrence" direction="IN">
        <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      </element>
      <element name="inTrimText" direction="IN">
        <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      </element>
      <element name="inCaseSensitive" direction="IN">
        <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      </element>
      <element name="result" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/string/getConstantV2" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="constantsPath" direction="IN">
        <datatype type="STRING" maxLength="4000"/>
      </element>
      <element name="constantsName" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="optionReturn" direction="IN">
        <datatype type="INTEGER" minValue="-32768" maxValue="32767"/>
      </element>
      <element name="outValue" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <attribute name="Script" type="STRING">/* dynamicFileRemove:

&#x9;A script that manages removing files from the file system and published views associated with those files. 
&#x9;Files are only permitted to be removed by the user who created them.

 &#x9;Input:
&#x9;&#x9;debug:&#x9;&#x9;&#x9;&#x9;&#x9;Y=debug on, N=debug off
&#x9;&#x9;inUserName:&#x9;&#x9;&#x9;&#x9;The name of the user who is authorized to remove the file.&#x9;
&#x9;&#x9;inFileName:&#x9;&#x9;&#x9;&#x9;The name of the file to be deleted.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Undocumented feature only to be used for the Web Upload Application Service Account.  DO NOT GIVE THIS INFORMATION TO USERS
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Format: USERNAME[nbkid]nbkid-filename.ext
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;When the file name contains USERNAME[nbkid], it informs this procedure that the proxy user within the square brackets
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;is the actual owner of the file and overrides the environment username which is set when the service account invokes
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;this procedure.  This is required because this procedure verifies the actual user with the nbkid prefixed in front of
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;the filename.  If they are different it does not perform any action.   With a service account there has to be a way
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;in which the service account can inform this procedure who the actual user is.  Therefore the nbkid must match within
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;the square brackets and prefixed to the filename in order for an action to be taken.  The service account acquires the
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;actual username from its context before invoking this procedure.
   &#x9; &#x9;datasourcePath: &#x9;&#x9;Fully Qualified path to a Dynamic data source
&#x9;&#x9;publishedDatabase:&#x9;&#x9;The name of the published databases

&#x9;Output:
&#x9;&#x9;Cursor with columns:
            status&#x9;&#x9;&#x9;&#x9;- removal status message
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;FILE REMOVED.  &apos; + 1 of the following:
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;PUBLISHED VIEWS REMOVED&apos;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;VIEWS NOT PUBLISHED&apos;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;UNABLE TO REMOVE FILE.  &apos;  + 1 of the following:
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;PUBLISHED VIEWS REMOVED&apos;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;VIEWS NOT PUBLISHED&apos;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;FILE DOES NOT EXIST.  &apos; + 1 of the following:
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;PUBLISHED VIEWS REMOVED&apos;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;VIEWS NOT PUBLISHED&apos;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;FILE NOT ASSOCIATED WITH USERNAME=&lt;username&gt;&apos;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;FILE DOES NOT EXIST.  FILE NOT ASSOCIATED WITH USERNAME=&lt;username&gt;&apos;

            fileName &#x9;&#x9;&#x9;- file name from the file system
            publishedTableName &#x9;- name of the published file associated with the file 
            publishedTablePath &#x9;- SQL URL of the published table
&#x9;    &#x9;publishedDatabase&#x9;- published database name
            metadataTableName&#x9;- the CIS metadata datasource table name
            metadataTablePath&#x9;- the CIS metadata datasource table path

&#x9;Modified Date:&#x9;Modified By:&#x9;&#x9;CSW Version:&#x9;Reason:
&#x9;02/10/2016&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.2&#x9;&#x9;&#x9;Created new for the purpose of removing files.
&#x9;02/20/2018&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.5&#x9;&#x9;&#x9;Adapted for Assets Data Abstraction Best Practices

&#x9;(c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.
*/
PROCEDURE dynamicFileRemove(
&#x9;IN  debug&#x9;&#x9;&#x9;&#x9;&#x9;CHAR(1),
&#x9;IN  inUsername&#x9;&#x9;&#x9;&#x9;VARCHAR,
&#x9;IN  inFileName&#x9;&#x9;&#x9;&#x9;VARCHAR(4000),
&#x9;IN&#x9;datasourcePath&#x9;&#x9;&#x9;VARCHAR(4000),
&#x9;IN&#x9;publishedDatabase&#x9;&#x9;VARCHAR,
    OUT result PIPE (
        status &#x9;&#x9;&#x9;&#x9;VARCHAR(4000),
&#x9;&#x9;fileName&#x9;&#x9;&#x9;VARCHAR(255),
        publishedTableName &#x9;VARCHAR(255), 
        publishedTablePath &#x9;VARCHAR(4000),
&#x9;&#x9;publishedDatabase&#x9;VARCHAR(255),
&#x9;&#x9;metadataTableName&#x9;VARCHAR(255),
&#x9;&#x9;metadataTablePath&#x9;VARCHAR(4000)
        )
)
BEGIN
&#x9;DECLARE moduleName&#x9;&#x9;&#x9;VARCHAR DEFAULT &apos;dynamicFileRemove&apos;;
&#x9;DECLARE username&#x9;&#x9;&#x9;VARCHAR DEFAULT LOWER(inUsername);
&#x9;DECLARE fileName&#x9;&#x9;&#x9;VARCHAR(4000) DEFAULT TRIM(inFileName);
&#x9;DECLARE&#x9;globalConstantsPath&#x9;VARCHAR(4000) DEFAULT /shared/ASAssets/BestPractices_v81/DynamicFileFramework/constants.globalConstantsPath;
&#x9;DECLARE dstype &#x9;&#x9;&#x9;&#x9;VARCHAR(255);
&#x9;DECLARE fileType&#x9;&#x9;&#x9;VARCHAR(255);
&#x9;DECLARE fileDeleted&#x9;&#x9;&#x9;TINYINT;
&#x9;DECLARE fileUsername&#x9;&#x9;VARCHAR(255);
&#x9;DECLARE fileUsernameExists&#x9;BOOLEAN;&#x9;&#x9;-- true=the username is prefixed to the file name.  false=No username prefixed to file.
&#x9;DECLARE separator&#x9;&#x9;&#x9;VARCHAR;
&#x9;DECLARE fileExists&#x9;&#x9;&#x9;BOOLEAN;
&#x9;DECLARE fileRootPath&#x9;&#x9;LONGVARCHAR;
&#x9;DECLARE filePath&#x9;&#x9;&#x9;LONGVARCHAR;
&#x9;DECLARE proxyUsername&#x9;&#x9;VARCHAR(255);
&#x9;DECLARE supportedFileExt&#x9;VARCHAR;
&#x9;DECLARE fileExtension&#x9;&#x9;VARCHAR;
&#x9;DECLARE resourceType&#x9;&#x9;VARCHAR;
&#x9;DECLARE resExists&#x9;&#x9;&#x9;BOOLEAN;
&#x9;DECLARE publishedTableName&#x9;VARCHAR;
&#x9;DECLARE publishedTablePath&#x9;VARCHAR(4000);
&#x9;DECLARE i&#x9;&#x9;&#x9;&#x9;&#x9;INTEGER;
&#x9;DECLARE pos&#x9;&#x9;&#x9;&#x9;&#x9;INTEGER;
&#x9;DECLARE msg&#x9;&#x9;&#x9;&#x9;&#x9;VARCHAR(4000);
&#x9;DECLARE messageAppend&#x9;&#x9;VARCHAR;
&#x9;DECLARE publishedViewsRemoved SMALLINT;
    DECLARE TYPE resultType&#x9;&#x9;ROW (
        status &#x9;&#x9;&#x9;&#x9;VARCHAR(4000),
&#x9;&#x9;fileName&#x9;&#x9;&#x9;VARCHAR(255),
        publishedTableName &#x9;VARCHAR(255), 
        publishedTablePath &#x9;VARCHAR(4000),
&#x9;&#x9;publishedDatabase&#x9;VARCHAR(255),
&#x9;&#x9;metadataTableName&#x9;VARCHAR(255),
&#x9;&#x9;metadataTablePath&#x9;VARCHAR(4000)
        );
&#x9;DECLARE resultRec&#x9;&#x9;resultType;
&#x9;DECLARE resultVect&#x9;&#x9;VECTOR(resultType) DEFAULT VECTOR[];


&#x9;IF (debug = &apos;Y&apos;) THEN
&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;Entered &apos;||moduleName);
&#x9;END IF;

&#x9;-- The procedure is usable for File-Delimited and Microsoft Excel (non-ODBC) datasources only
&#x9;-- Check if the datasource is supported
&#x9;SELECT dataSourceType INTO dstype FROM /shared/ASAssets/Utilities/repository/getBasicResourceCursor(datasourcePath&#x9;, &apos;DATA_SOURCE&apos;);
&#x9;IF (dstype = &apos;File-Delimited&apos;) OR (dstype = &apos;Microsoft Excel (non-ODBC)&apos;) THEN
&#x9;&#x9;IF (dstype = &apos;File-Delimited&apos;) THEN
&#x9;&#x9;&#x9;SET fileType = &apos;CSV&apos;;
&#x9;&#x9;&#x9;CALL /shared/ASAssets/Utilities/string/getConstantV2(globalConstantsPath, &apos;CSV_SUPPORTED_FILE_EXTENSIONS&apos;, 1, supportedFileExt);
&#x9;&#x9;&#x9;SET supportedFileExt = LOWER(supportedFileExt);
&#x9;&#x9;&#x9;SET resourceType = &apos;TABLE&apos;;
&#x9;&#x9;ELSE
&#x9;&#x9;&#x9;SET fileType = &apos;EXCEL&apos;;
&#x9;&#x9;&#x9;CALL /shared/ASAssets/Utilities/string/getConstantV2(globalConstantsPath, &apos;EXCEL_SUPPORTED_FILE_EXTENSIONS&apos;, 1, supportedFileExt);
&#x9;&#x9;&#x9;SET supportedFileExt = LOWER(supportedFileExt);
&#x9;&#x9;&#x9;SET resourceType = &apos;CONTAINER&apos;;
&#x9;&#x9;END IF;
&#x9;&#x9;-- Get the file extension
&#x9;&#x9;IF (INSTR(fileName, &apos;.&apos;) &gt; 0) THEN
&#x9;&#x9;&#x9;SET pos = INSTR(fileName, &apos;.&apos;, -1, 1);
&#x9;&#x9;&#x9;IF (pos &gt; 0) THEN
&#x9;&#x9;&#x9;&#x9;SET fileExtension = SUBSTRING(fileName, pos+1);
&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;END IF;
&#x9;&#x9;SET fileExtension = &apos;.&apos;||LOWER(fileExtension);

&#x9;&#x9;IF (debug = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;INPUT: FILE_NAME=&apos;||fileName);
&#x9;&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;INPUT: CURRENT_USER_NAME=[&apos;||NVL(username,&apos;null&apos;)||&apos;]&apos;);
&#x9;&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;INPUT: METADATA DS PATH=[&apos;||NVL(datasourcePath&#x9;,&apos;null&apos;)||&apos;]&apos;);
&#x9;&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;INPUT: publishedDatabase=[&apos;||NVL(publishedDatabase,&apos;null&apos;)||&apos;]&apos;);
&#x9;&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;EXTRACTED: SUPPORT FILE EXTENSIONS=[&apos;||NVL(supportedFileExt,&apos;null&apos;)||&apos;]&apos;);
&#x9;&#x9;END IF;

&#x9;&#x9;-- If the proxy username is not null then use the proxy username instead of the actual username.
&#x9;&#x9;-- The proxy username is controlled by the upload application and is passed in when the upload application invokes the dynamicFileCreate procedure.
&#x9;&#x9;-- This is the only mechanism by which to distinguish between the procedure being called by the user and by the upload application.
&#x9;&#x9;-- The upload application will insert the text USERNAME[username]username-filename.ext as part of the filename.
&#x9;&#x9;-- Extract the username proxy from the filename.  Format: USERNAME[username]username-filename.ext
&#x9;&#x9;CALL /shared/ASAssets/Utilities/string/extractBiDelimitedText(fileName,&apos;USERNAME&apos;,&apos;[&apos;,&apos;]&apos;,1,1,1,proxyUsername);
&#x9;&#x9;IF (proxyUsername IS NOT NULL) THEN
&#x9;&#x9;&#x9;SET fileName = REPLACE(fileName, &apos;USERNAME[&apos;||proxyUsername||&apos;]&apos;, &apos;&apos;);
&#x9;&#x9;&#x9;SET username = LOWER(proxyUsername);
&#x9;&#x9;END IF;
&#x9;&#x9;-- Get the file username
&#x9;&#x9;SET pos = INSTR(fileName, &apos;-&apos;);
&#x9;&#x9;IF (pos &gt; 0) THEN
&#x9;&#x9;&#x9;SET fileUsername = SUBSTRING(fileName, 1, pos-1);
&#x9;&#x9;&#x9;SET fileUsernameExists = true;
&#x9;&#x9;ELSE
&#x9;&#x9;&#x9;SET fileUsername = &apos;admin&apos;;
&#x9;&#x9;&#x9;SET fileUsernameExists = false;
&#x9;&#x9;END IF;

&#x9;&#x9;IF (debug = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;EXTRACTED: FILE_USER_NAME=[&apos;||NVL(fileUsername,&apos;null&apos;)||&apos;]&apos;);
&#x9;&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;MODIFIED: FILE_NAME=&apos;||NVL(fileName,&apos;null&apos;));
&#x9;&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;MODIFIED: USER_NAME=&apos;||NVL(username,&apos;null&apos;));
&#x9;&#x9;END IF;

&#x9;&#x9;IF (fileName IS NOT NULL OR LENGTH(fileName) &gt; 0) THEN
&#x9;&#x9;&#x9;IF (INSTR(supportedFileExt, fileExtension) &gt; 0) THEN
&#x9;&#x9;&#x9;&#x9;IF (username IS NOT NULL AND fileUsername IS NOT NULL) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;IF (username = fileUsername) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET publishedViewsRemoved = 0;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CALL /lib/resource/ResourceExists(datasourcePath&#x9;||&apos;/&apos;||fileName, resourceType, null, resExists);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IF (resExists) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-- Destroy the CIS view lineage from metadata datasource to published view
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET i = 0;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FOR dl AS SELECT * FROM /shared/ASAssets/Utilities/generate/destroyDependentLineage(1, 1, datasourcePath||&apos;/&apos;||fileName, debug) DO
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-- Only work with published rows or metadata rows.  Ignore the other rows.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IF ( (INSTR(dl.resourcePath, &apos;/services/databases/&apos;) = 1 AND dl.resourceType = &apos;LINK&apos;) or 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; (dl.subtype = &apos;EXCEL_NON_ODBC_POI&apos; or dl.subtype = &apos;DELIMITED_FILE_TABLE&apos;) ) THEN

&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-- Capture the published link name and path
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IF (INSTR(dl.resourcePath, &apos;/services/databases/&apos;) = 1 AND dl.resourceType = &apos;LINK&apos;) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET publishedViewsRemoved = publishedViewsRemoved + 1;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET resultRec.publishedTableName = dl.resourceName;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET resultRec.publishedTablePath = dl.resourcePath;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET resultRec.publishedDatabase = publishedDatabase;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END IF;

&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-- Capture the metadata table name and path
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IF (dl.subtype = &apos;EXCEL_NON_ODBC_POI&apos; OR dl.subtype = &apos;DELIMITED_FILE_TABLE&apos;) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET resultRec.fileName = fileName;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET resultRec.metadataTableName = dl.resourceName;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET resultRec.metadataTablePath = dl.resourcePath;

&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-- Assumption: When the metadata record is reached, it is assumed that the resultRec now contains both the published and metadata paths
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;and is ready to be assigned to the vector.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET resultVect = EXTEND(resultVect,1);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET i = i + 1;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET resultVect[i] = resultRec;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET resultRec = null;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END FOR;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END IF;

&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IF (publishedViewsRemoved = 0) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET messageAppend = &apos;VIEWS NOT PUBLISHED&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET messageAppend = &apos;PUBLISHED VIEWS REMOVED&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END IF;

&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-- Delete the file
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CALL /shared/ASAssets/BestPractices_v81/DynamicFileFramework/Helper/deleteFile(debug, fileName, datasourcePath, messageAppend, fileDeleted, msg);

&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-- Return the results
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IF (publishedViewsRemoved &gt; 0) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET i = 1;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHILE (i &lt;= CARDINALITY(resultVect)) DO
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CALL /shared/ASAssets/Utilities/repository/RepoUtils/applyReservedListToPath(resultVect[i].publishedTableName,null,publishedTableName);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET publishedTablePath = REPLACE(REPLACE(resultVect[i].publishedTablePath, &apos;/services/databases/&apos;||publishedDatabase||&apos;/&apos;, &apos;&apos;),  &apos;/&apos;, &apos;.&apos;); 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CALL /shared/ASAssets/Utilities/repository/RepoUtils/applyReservedListToPath(publishedTablePath,null,publishedTablePath);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;INSERT INTO result VALUES (msg, fileName, publishedTableName, publishedTablePath, publishedDatabase, resultVect[i].metadataTableName, resultVect[i].metadataTablePath);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET i = i + 1;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END WHILE;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;INSERT INTO result VALUES (msg, fileName, null, null, publishedDatabase, null, null);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;&#x9;&#x9;ELSE
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET msg = &apos;&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-- Mismatch between username and file username
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CALL /shared/ASAssets/Utilities/repository/RepoUtils/applyReservedListToPath(publishedTableName,null,publishedTableName);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CALL /shared/ASAssets/Utilities/repository/RepoUtils/applyReservedListToPath(publishedTablePath,null,publishedTablePath);

&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;/********************************
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; * Determine if the file exists
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; ********************************/
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-- Get the file separator
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CALL /shared/ASAssets/Utilities/file/getFileSeparator(separator);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-- Get the actual file system path by determining if the root path is the actual path or a file system security token name
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CALL /shared/ASAssets/Utilities/repository/getDataSourceRootPath(datasourcePath, debug, fileRootPath);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-- File root path is resolved so proceed
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IF (fileRootPath IS NOT NULL) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IF (separator IS NULL or LENGTH(separator) = 0) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET separator = &apos;/&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET filePath = fileRootPath||separator||fileName;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CALL /shared/ASAssets/Utilities/file/FileProcessingCJP/existsFile(filePath, fileExists);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IF (debug = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;fileExists=[&apos;||CAST(fileExists AS VARCHAR)||&apos;] filePath=[&apos;||filePath||&apos;]&apos;);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IF (NOT fileExists) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET msg = &apos;FILE DOES NOT EXIST.  &apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END IF;

&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SET msg = msg || &apos;FILE NOT ASSOCIATED WITH USERNAME=&apos;||NVL(username,&apos;null&apos;);

&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;INSERT INTO result VALUES (msg, fileName, publishedTableName, publishedTablePath, publishedDatabase, null, null);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IF (debug = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;FILE=[&apos;||fileName||&apos;] &apos;||msg);
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;ELSE -- Invalid file extension. not supported like .xlb&#x9;&#x9;&#x9;
&#x9;&#x9;&#x9;&#x9;-- Delete the file but not the views
&#x9;&#x9;&#x9;&#x9;SET messageAppend = &apos;VIEWS NOT PUBLISHED&apos;;
&#x9;&#x9;&#x9;&#x9;CALL /shared/ASAssets/BestPractices_v81/DynamicFileFramework/Helper/deleteFile(debug, fileName, datasourcePath, messageAppend, fileDeleted, msg);
&#x9;&#x9;&#x9;&#x9;INSERT INTO result VALUES (msg, fileName, null, null, publishedDatabase, null, null);
&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;END IF;
&#x9;ELSE
&#x9;&#x9;INSERT INTO result(status, fileName) VALUES (&apos;ERROR: Data source type not supported: &apos; || dstype, fileName);
&#x9;&#x9;IF (debug = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;ERROR: Data source type not supported: &apos; || dstype);
&#x9;&#x9;END IF;
&#x9;END IF;

&#x9;IF (debug = &apos;Y&apos;) THEN
&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;: Exiting &apos;||moduleName);
&#x9;END IF;
EXCEPTION
&#x9;ELSE
&#x9;&#x9;SET msg = SUBSTRING(&apos;ERROR: Failed to remove dynamic view: &apos; || CURRENT_EXCEPTION.TRACE, 1, 4000);
&#x9;&#x9;INSERT INTO result(status, fileName, publishedTableName, publishedTablePath, publishedDatabase, metadataTableName, metadataTablePath) 
&#x9;&#x9;&#x9;VALUES (msg, fileName, null, null, publishedDatabase, null, null);
&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;: &apos;||msg);
&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;: Exiting &apos;||moduleName);
END</attribute>
  <attribute name="creationDate" type="LONG">1455107294810</attribute>
  <attribute name="creatorUserDomain" type="STRING">ldap_im</attribute>
  <attribute name="creatorUserId" type="INTEGER">1505</attribute>
  <attribute name="creatorUserName" type="STRING">zkxl6un</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1564410273481</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserId" type="INTEGER">1505</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="NULL"/>
  <attribute name="resourceModifiedDateOnSourceCISSite" type="LONG">1455107294810</attribute>
</metadata>