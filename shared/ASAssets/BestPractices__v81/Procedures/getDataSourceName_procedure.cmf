<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:9a66723c-3693-47f1-a1f0-d7811996f9d5 -->
<metadata name="getDataSourceName" path="/shared/ASAssets/BestPractices_v81/Procedures/getDataSourceName" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation>&lt;![CDATA[
&#x9;(c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCO® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.

]]&gt;</annotation>
  <parameters>
    <parameter name="resourcePath" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="4000"/>
    </parameter>
    <parameter name="resourceType" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="cacheStorageDataSourcePath" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="excludePathsList" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="datasourceAncestor" direction="IN" nullable="true">
      <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
    </parameter>
    <parameter name="inIgnoreResourceDoesNotExist" direction="IN" nullable="true">
      <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
    </parameter>
    <parameter name="debug" direction="IN" nullable="true">
      <datatype name="CHAR" type="STRING" minLength="1" maxLength="1"/>
    </parameter>
    <parameter name="datasourceName" direction="OUT" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="datasourcePath" direction="OUT" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
    <privilege group="all" domain="composite" privileges="READ"/>
  </security>
  <dependency target="/shared/ASAssets/Utilities/log/logDebugMessage" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="moduleName" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="moduleNameType" type="STRING" maxLength="4096"/>
      </element>
      <element name="debug" direction="IN">
        <datatype type="STRING" maxLength="1"/>
      </element>
      <element name="messageText" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/RepoUtils/applyReservedListToPath" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="inPath" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="debug" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="result" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/getResourceLineageDatasources" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="resourcePath" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="4000"/>
      </element>
      <element name="resourceType" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="excludePathsList" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="datasourceAncestor" direction="IN">
        <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      </element>
      <element name="inIgnoreResourceDoesNotExist" direction="IN">
        <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      </element>
      <element name="datasourceResource" direction="OUT">
        <datatype type="TABLE" refId="256">
          <element name="id">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="resourceName">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="resourcePath">
            <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="4000"/>
          </element>
          <element name="resourceType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="subtype">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="enabled">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="childCount">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="dataSourceType">
            <datatype type="STRING" maxLength="255"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <attribute name="Script" type="STRING">/* getDataSourceName:

&#x9;Return the Data Source Name associated with the a given resource path.  
&#x9;1. Start with the resource path and recursively walk its lineage until no more resources are found.   
&#x9;2. For each resource found, determine if that resources has as associated resource of type=DATA_SOURCE.
&#x9;3. Find the distinct list of data sources for this resource
&#x9;4. Output the list of data sources matching the resource type = &apos;DATA_SOURCE&apos;
 
&#x9;Input:
   &#x9;&#x9;resourcePath - CIS source resource path to being assessing the parent data lineage
&#x9;&#x9;&#x9;Values: e.g. /shared/examples/ViewSales [this is a SQL VIEW.]
&#x9;&#x9;resourceType - Type of CIS resource to be created.  It is null on the first invocation.
&#x9;&#x9;&#x9;Values: see &quot;TYPES / SUBTYPES&quot; listing below.  e.g. TABLE
&#x9;&#x9;cacheStorageDataSourcePath - the location of the cache data source storage path for the given resource path.  Null if the resource is not cached.
&#x9;&#x9;excludePathsList&#x9;- comma separated list of resource paths or partials paths to exclude
&#x9;&#x9;&#x9;Values: /shared/ASAssets/Utilities,/lib
&#x9;&#x9;datasourceAncestor&#x9;- flag to get the data source ancestors 
&#x9;&#x9;&#x9;Values: 1=yes, 0=no
&#x9;Output:
&#x9;&#x9;datasourceName&#x9;&#x9;&#x9;&#x9;LONGVARCHAR,&#x9;-- the name of the data source.&#x9;&#x9;null if excluded.
&#x9;&#x9;datasourcePath&#x9;&#x9;&#x9;&#x9;LONGVARCHAR &#x9;-- path to the data source.&#x9;&#x9;&#x9;null if excluded.

&#x9;Exceptions:  none

&#x9;Modified Date:&#x9;Modified By:&#x9;&#x9;CSW Version:&#x9;Reason:
&#x9;03/15/2013&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;5.2.0&#x9;&#x9;&#x9;created new for modifications for Best Practices 7.0
&#x9;10/14/2013&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;6.1.0&#x9;&#x9;&#x9;8.0: modified to add datasourcePath.  Moved to /Procedures folder.
&#x9;10/28/2013&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;6.1.0&#x9;&#x9;&#x9;Added parameter inIgnoreResourceDoesNotExist.
&#x9;11/21/2013&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;6.1.0&#x9;&#x9;&#x9;Don&apos;t return data source paths that are cache data storage paths associated with the incoming resource path.

&#x9;(c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCO® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.

*/
PROCEDURE getDataSourceName(
&#x9;IN resourcePath &#x9;&#x9;&#x9;&#x9;VARCHAR(4000), -- /shared/examples/CompositeView
&#x9;IN resourceType&#x9;&#x9;&#x9;&#x9;&#x9;VARCHAR,&#x9;&#x9;-- TABLE
&#x9;IN cacheStorageDataSourcePath&#x9;LONGVARCHAR,
&#x9;IN excludePathsList&#x9;&#x9;&#x9;&#x9;LONGVARCHAR, &#x9;-- comma separate list of resource paths or partials paths to exclude
&#x9;IN datasourceAncestor &#x9;&#x9;&#x9;INTEGER, &#x9; &#x9;-- flag to get the data source ancestory (1=yes, 0=no)
&#x9;IN inIgnoreResourceDoesNotExist&#x9;INTEGER, &#x9;&#x9;-- Ignore any resources that do not exist
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-- &#x9;1 = Bypass the processing of that resource.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-- &#x9;0 = (default) Do not ignore any resources.  Throw an error that the resource does not exist.
&#x9;IN debug&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CHAR(1),
&#x9;OUT datasourceName&#x9;&#x9;&#x9;&#x9;LONGVARCHAR,&#x9;-- the name of the data source
&#x9;OUT datasourcePath&#x9;&#x9;&#x9;&#x9;LONGVARCHAR &#x9;-- path to the data source
)
BEGIN
&#x9;DECLARE moduleName&#x9;&#x9;&#x9;VARCHAR DEFAULT &apos;getDataSourceName&apos;;
&#x9;DECLARE reservedPath&#x9;&#x9;LONGVARCHAR;

&#x9;set datasourceName = null;
&#x9;set datasourcePath = null;

&#x9;if (debug = &apos;Y&apos;) then
&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug,&apos;   (INPUT):____________________resourcePath=&apos;||NVL(resourcePath,&apos;null&apos;));
&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug,&apos;   (INPUT):____________________resourceType=&apos;||NVL(resourceType,&apos;null&apos;));
&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug,&apos;   (INPUT):______cacheStorageDataSourcePath=&apos;||NVL(cacheStorageDataSourcePath,&apos;null&apos;));
&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug,&apos;   (INPUT):________________excludePathsList=&apos;||NVL(excludePathsList,&apos;null&apos;));
&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug,&apos;   (INPUT):______________datasourceAncestor=&apos;||NVL(cast(datasourceAncestor as varchar),&apos;null&apos;));
&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug,&apos;   (INPUT):____inIgnoreResourceDoesNotExist=&apos;||NVL(cast(inIgnoreResourceDoesNotExist as varchar),&apos;null&apos;));
&#x9;end if;

&#x9;for r as select * from
&#x9;&#x9;/shared/ASAssets/Utilities/repository/getResourceLineageDatasources(resourcePath, resourceType, excludePathsList, datasourceAncestor, inIgnoreResourceDoesNotExist)
&#x9;do
&#x9;&#x9;if (debug = &apos;Y&apos;) then
&#x9;&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug,&apos;   (LOOP):____r.resourceType=&apos;||NVL(r.resourceType,&apos;null&apos;)||&apos;  r.resourcePath=&apos;||NVL(r.resourcePath,&apos;null&apos;));
&#x9;&#x9;end if;
&#x9;&#x9;if (r.resourceType = &apos;DATA_SOURCE&apos;) then
&#x9;&#x9;&#x9;-- Only return the data source path if it is not a cached datasource storage path
&#x9;&#x9;&#x9;if (cacheStorageDataSourcePath is null or r.resourcePath != cacheStorageDataSourcePath) then
&#x9;&#x9;&#x9;&#x9;if (datasourceName is null) then
&#x9;&#x9;&#x9;&#x9;&#x9;set datasourceName = &apos;&apos;;
&#x9;&#x9;&#x9;&#x9;else
&#x9;&#x9;&#x9;&#x9;&#x9;set datasourceName = datasourceName || &apos;, &apos;;
&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;if (datasourcePath is null) then
&#x9;&#x9;&#x9;&#x9;&#x9;set datasourcePath = &apos;&apos;;
&#x9;&#x9;&#x9;&#x9;else
&#x9;&#x9;&#x9;&#x9;&#x9;set datasourcePath = datasourcePath || &apos;, &apos;;
&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;set datasourceName = datasourceName || r.resourceName;
&#x9;&#x9;&#x9;&#x9;call /shared/ASAssets/Utilities/repository/RepoUtils/applyReservedListToPath(r.resourcePath, null, reservedPath);
&#x9;&#x9;&#x9;&#x9;set datasourcePath = datasourcePath || reservedPath;
&#x9;&#x9;&#x9;end if;
&#x9;&#x9;end if;
&#x9;end for;
&#x9;if (debug = &apos;Y&apos;) then
&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug,&apos;   (OUTPUT):_________________datasourceName=&apos;||NVL(datasourceName,&apos;null&apos;));
&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug,&apos;   (OUTPUT):_________________datasourcePath=&apos;||NVL(datasourcePath,&apos;null&apos;));
&#x9;end if;
END</attribute>
  <attribute name="creationDate" type="LONG">0</attribute>
  <attribute name="creatorUserDomain" type="STRING"/>
  <attribute name="creatorUserName" type="STRING"/>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1560603580056</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="NULL"/>
</metadata>