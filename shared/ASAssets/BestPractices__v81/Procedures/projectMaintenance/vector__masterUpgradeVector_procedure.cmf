<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:9a66723c-3693-47f1-a1f0-d7811996f9d5 -->
<metadata name="vector_masterUpgradeVector" path="/shared/ASAssets/BestPractices_v81/Procedures/projectMaintenance/vector_masterUpgradeVector" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation>&lt;![CDATA[
&#x9;(c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.

]]&gt;</annotation>
  <parameters>
    <parameter name="projectPathSrc" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="4096"/>
      <attribute name="Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
    </parameter>
    <parameter name="projectPathDst" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="4096"/>
    </parameter>
    <parameter name="scriptsPathDst" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="4096"/>
      <attribute name="Customized" type="STRING">datatype.changed</attribute>
    </parameter>
    <parameter name="bestPracticesVersionFrom" direction="IN" nullable="true">
      <datatype name="DOUBLE" type="FLOAT" minValue="2.2250738585072014E-308" maxValue="1.7976931348623157E308"/>
      <attribute name="Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
    </parameter>
    <parameter name="bestPracticesVersionTo" direction="IN" nullable="true">
      <datatype name="DOUBLE" type="FLOAT" minValue="2.2250738585072014E-308" maxValue="1.7976931348623157E308"/>
      <attribute name="Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
    </parameter>
    <parameter name="upgradeVector" direction="OUT" nullable="true">
      <datatype name="upgradeVector" type="ARRAY" maxLength="0">
        <itemDatatype>
          <datatype name="upgradeType" type="TREE" refId="257">
            <element name="bestPracticesVersionFrom">
              <datatype name="DOUBLE" type="FLOAT" minValue="2.2250738585072014E-308" maxValue="1.7976931348623157E308"/>
            </element>
            <element name="bestPracticesVersionTo">
              <datatype name="DOUBLE" type="FLOAT" minValue="2.2250738585072014E-308" maxValue="1.7976931348623157E308"/>
            </element>
            <element name="resourceAction">
              <datatype name="VARCHAR" type="STRING" maxLength="255"/>
            </element>
            <element name="resourcePath">
              <datatype name="VARCHAR" type="STRING" maxLength="4000"/>
            </element>
            <element name="resourceType">
              <datatype name="VARCHAR" type="STRING" maxLength="255"/>
            </element>
            <element name="srcResource">
              <datatype name="srcResource" type="ARRAY" maxLength="0">
                <itemDatatype>
                  <datatype name="resourceType" referenceDefinitionSet="/shared/ASAssets/Utilities/repository/definitions/RepositoryDefinitions" referenceType="resourceType" type="TREE" refId="513">
                    <element name="path">
                      <datatype name="VARCHAR" referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="4000"/>
                    </element>
                    <element name="type">
                      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
                    </element>
                  </datatype>
                </itemDatatype>
              </datatype>
            </element>
            <element name="dstResource">
              <datatype name="dstResource" type="ARRAY" maxLength="0">
                <itemDatatype>
                  <datatype name="resourceType" type="TREE" refId="769">
                    <element name="path">
                      <datatype name="VARCHAR" referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="4000"/>
                    </element>
                    <element name="type">
                      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
                    </element>
                  </datatype>
                </itemDatatype>
              </datatype>
            </element>
            <element name="updateStruct">
              <datatype name="updateStruct" type="ARRAY" maxLength="0">
                <itemDatatype>
                  <datatype name="updateType" type="TREE" refId="1025">
                    <element name="updateAction">
                      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
                    </element>
                    <element name="occurrence">
                      <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
                    </element>
                    <element name="numLines">
                      <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
                    </element>
                    <element name="keyTextVerify">
                      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
                    </element>
                    <element name="searchText">
                      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
                    </element>
                    <element name="replaceText">
                      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
                    </element>
                  </datatype>
                </itemDatatype>
              </datatype>
            </element>
          </datatype>
        </itemDatatype>
      </datatype>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
    <privilege group="all" domain="composite" privileges="READ"/>
  </security>
  <dependency target="/lib/debug/Print" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="textToPrint" direction="IN">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="Text" type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/BestPractices_v81/Procedures/TypeDefinitions" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/BestPractices_v81/_ProjectMaintenance/defaultValues" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/RepoUtils/applyReservedListToPath" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="inPath" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="debug" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="result" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/returnFolderNameAndFolderPath" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="fullResourcePath" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="4000"/>
      </element>
      <element name="mode" direction="IN">
        <datatype type="STRING" minLength="1" maxLength="1"/>
      </element>
      <element name="folderName" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="folderPath" direction="OUT">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="4000"/>
      </element>
    </datatype>
  </dependency>
  <attribute name="Script" type="STRING">/*
&#x9;vector_masterUpgradeVector:

&#x9;This procedure provides a vector of upgrade versions.   Upgrading is performed sequentially.  For example, if the current
&#x9;version is 7.0 and you are upgrading to 7.2, first 7.0 is upgraded to 7.1 and then 7.1 is upgraded to 7.2 and so on.
&#x9;The following steps are executed here:
&#x9;&#x9;1. Validate all entries and raise exception if invalid
&#x9;&#x9;2. Return only the section that matches both the bestPracticesVersionFrom and bestPracticesVersionTo
&#x9;&#x9;3. Replace all $PROJECT_PATH_SRC variables with the actual project path that is passed.
&#x9;&#x9;3. Replace all $PROJECT_PATH_DST variables with the actual project path that is passed.

&#x9;Each From/To version combination is marked by a section header (for example):
&#x9;&#x9;/ ********************************************************
&#x9;&#x9; *  Actions to upgrade 7.2 to 7.3:
&#x9;&#x9; ******************************************************** /
&#x9;It is the responsibility of the developer to add additional sections with the appropriate actions when providing a
&#x9;new version of the Best Practices.

&#x9;Input: 
&#x9;&#x9;IN projectPathSrc&#x9;&#x9;&#x9;&#x9;&#x9;VARCHAR(2048),
&#x9;&#x9;&#x9;-- the full path to a project including the project name of the source folder (only used when upgrading 1.0 through 6.6)
&#x9;&#x9;IN projectPathDst&#x9;&#x9;&#x9;&#x9;&#x9;VARCHAR(2048),
&#x9;&#x9;&#x9;-- the full path to a project including the project name of the destination folder (used for all project upgrades)
&#x9;&#x9;IN scriptsPathDst&#x9;&#x9;&#x9;&#x9;&#x9;VARCHAR(2048),
&#x9;&#x9;&#x9;-- the full path to the project scripts path of the destination folder.
&#x9;&#x9;IN bestPracticesVersionFrom &#x9;&#x9;DOUBLE,
&#x9;&#x9;&#x9;-- the version upgrading from
&#x9;&#x9;IN bestPracticesVersionTo &#x9;&#x9;&#x9;DOUBLE,
&#x9;&#x9;&#x9;-- the version upgrading to
&#x9;Output:
&#x9;&#x9;OUT&#x9;upgradeVector &#x9;&#x9;&#x9;&#x9;&#x9;/shared/BestPractices/Procedures/TypeDefinitions.upgradeVector
&#x9;&#x9;&#x9;-- see the structure definition below.

&#x9;Exceptions:  ex

&#x9;-----------------------------------------------------------------------------
&#x9;The following defines the structures that are used for upgrading a project:
&#x9;-----------------------------------------------------------------------------
&#x9;DECLARE PUBLIC TYPE upgradeType ROW(
&#x9;&#x9;bestPracticesVersionFrom DOUBLE,&#x9;&#x9;&#x9;&#x9;-- &quot;From&quot; version of the best practices where the change is coming from
&#x9;&#x9;bestPracticesVersionTo&#x9;DOUBLE,&#x9;&#x9;&#x9;&#x9;&#x9;-- &quot;To&quot; version of the best practices where the change is being applied
&#x9;&#x9;resourceAction&#x9;&#x9;&#x9;VARCHAR&#x9;&#x9;&#x9;&#x9;&#x9;-- action to take on the resource: 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;     copy - copy srcResource to dstResource.  srcResource and dstResource required.  updateStruct is null.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;                if resource type is CONTAINER then copy all resources
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;                if resource type is not CONTAINER then copy specific resource
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--   copyNotExist - copy srcResource to dstResource.  srcResource and dstResource required.  updateStruct is null.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;                if resource type is CONTAINER then copy all resources if they do not exist but do not overwrite existing resources.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;                if resource type is not CONTAINER then copy specific resource if it does not exist.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;copyLeave - copy srcResource to _Copy_#.  srcResource is required.  dstResource and updateStruct are null.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;                Creates a copy of a resource and leaves the original in place. 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;                The copy detects other copies an increments the number as needed in the format of _Copy_#
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;   copyRename - copy srcResource to _Copy_#.  srcResource is required.  dstResource and updateStruct are null.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;                Creates a copy of a resource and renames the original to it.  The original is no longer present.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;                The copy detects other copies an increments the number as needed in the format of _Copy_#
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9; copyChildren - copy the children of srcResource to dstResource.  srcResource and dstResource required.  updateStruct is null.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;                Only copying from CONTAINER to CONTAINER is allowed.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;   update - update dstResource using updateStruct.  srcResource is null. 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--  updateTrigger - update all trigger resources found starting at dstResource using updateStruct.  srcResource is null.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;&#x9;&#x9;&#x9; dstResource can be a single trigger or folder of triggers.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;   updateCrud - update CRUD resources specified by dstResource using updateStruct.  srcResource is null.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;   delete - delete dstResource.  srcResource and updateStruct are null.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;     move - move srcResource to dstResource.  updateStruct is null.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--     moveCustom - move all custom scripts from srcResource folder to the specified dstResource folder. updateStruct is null.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--                  a custom resource is determined by finding a resource in dstResource that is not in the DataAbstraction_GENERIC_Template.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--         rebind - rebind srcResource to dstResource using startingFolder.  updateStruct is null.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--  configFolders - configure the starting folders.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-- restoreDefaultValues - restores the folder layer constants values with the copy of defaultValues made during the upgrade.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-- restoreDocConstants - restores the documentation constants with the copy of constants made during the upgrade.
&#x9;&#x9;resourcePath&#x9;&#x9;&#x9;VARCHAR(4000),&#x9;&#x9;&#x9;-- resource path of the resource or starting folder to be used with rebind action otherwise null.
&#x9;&#x9;resourceType&#x9;&#x9;&#x9;VARCHAR,&#x9;&#x9;&#x9;&#x9;-- resource type of the resource to be used with rebind action otherwise null.
&#x9;&#x9;srcResource&#x9;&#x9;&#x9;&#x9;VECTOR(resourceType), &#x9;-- source reource is always a vector of 1
&#x9;&#x9;dstResource&#x9;&#x9;&#x9;&#x9;VECTOR(resourceType),&#x9;-- destination resource may be an unbounded vector
&#x9;&#x9;updateStruct&#x9;&#x9;&#x9;VECTOR(updateType),&#x9;&#x9;-- this structure is used when the resourceAction=update otherwise null
&#x9;);
&#x9;DECLARE PUBLIC TYPE resourceType &#x9;ROW(
&#x9;&#x9;&quot;path&quot;&#x9;&#x9;TypeDefinitions.pathType,&#x9;-- Path to resource
&#x9;&#x9;&quot;type&quot;&#x9;&#x9;VARCHAR(255)&#x9;&#x9;&#x9;&#x9;-- Resoruce type
&#x9;);
&#x9;DECLARE PUBLIC TYPE updateType ROW(
&#x9;&#x9;updateAction&#x9;&#x9;&#x9;VARCHAR,&#x9;&#x9;&#x9;-- update Action: &#x9;&#x9;&#x9;modifyConstant, replace, replaceBefore, replaceAfter [all actions are performed on a given resource]
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-- updateTrigger Action: &#x9;replacePath, replaceParam, fixParam, restoreParam [All actions are performed on a given trigger resource]
&#x9;&#x9;occurrence&#x9;&#x9;&#x9;&#x9;INTEGER,&#x9;&#x9;&#x9;-- The occurrence of the searchText to act upon.  0=take action on all occurrences
&#x9;&#x9;numLines&#x9;&#x9;&#x9;&#x9;INTEGER,&#x9;&#x9;&#x9;-- If updateAction=replaceBefore or replaceAfter, then then perform that action by searching
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--   for the number of lines CHR(10) either before or after and placing the text at that location.
&#x9;&#x9;keyTextVerify&#x9;&#x9;&#x9;VARCHAR,&#x9;&#x9;&#x9;-- This is short unique text from the replaceText variable that allows the code to verify if the replace has already been done.
&#x9;&#x9;searchText&#x9;&#x9;&#x9;&#x9;LONGVARCHAR,&#x9;&#x9;-- The text to search for.  
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-- If multiple occurrences are found the action may be taken according to the defined occurrence.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-- If the searchText is not found then no action is taken.
&#x9;&#x9;replaceText&#x9;&#x9;&#x9;&#x9;LONGVARCHAR&#x9;&#x9;&#x9;-- The text to replace given the update action.
&#x9;);

&#x9;Modified Date:&#x9;Modified By:&#x9;&#x9;CIS Version:&#x9;Reason:
&#x9;05/14/2013&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;6.0.0&#x9;&#x9;&#x9;Created new for Best Practices 7.1
&#x9;08/01/2013&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;6.0.0&#x9;&#x9;&#x9;Added upgrade path for 1.0, 5.0, 6.0 compatible versions to the latest version.
&#x9;11/11/2013&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;6.1.0&#x9;&#x9;&#x9;B.P. 8.0: Added upgrade for 8.0.  Added updateTrigger capability.
&#x9;04/23/2014&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;6.2.0&#x9;&#x9;&#x9;B.P. 8.1: Added upgrade for 8.1.
&#x9;08/08/2014&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;6.2.5&#x9;&#x9;&#x9;B.P. 8.1.3: Added upgrade from 8.1 to current like 8.13
&#x9;08/25/2014&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;6.2.6&#x9;&#x9;&#x9;B.P. 8.1.4: Added upgrade from 8.13 to 8.14 and resolved issue with replacing $PROJECT_PATH_SRC and $PROJECT_PATH_DST in keyTextVerify.
&#x9;10/28/2014&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;6.2.6&#x9;&#x9;&#x9;B.P. 8.1.5: 1) Added upgrade from 8.14 to 8.15.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;2) Added replace for defaultValues from &apos;8.1;&apos; and &apos;8.13;&apos; and &apos;8.14;&apos; to bestPracticesVersionCurrent
&#x9;05/20/2015&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;6.2.6,7.0.x&#x9;&#x9;B.P. 8.1.6: 1) Added upgrade from 8.15 to 8.16.
&#x9;09/21/2015&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.x&#x9;&#x9;&#x9;B.P. 8.1.7: Added generateViews=2 for a select * projection.  Requires Utilities_2015Q3
&#x9;05/24/2017&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.x&#x9;&#x9;&#x9;B.P. 8.1.8: Added Privilege Scripts.
&#x9;12/22/2017&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.x&#x9;&#x9;&#x9;B.P. 8.1.9: Transitioned to TIBCO Software open source.
&#x9;03/20/2018&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.x&#x9;&#x9;&#x9;B.P. 2018.1: Upgraded to use Utilities 2018Q1.  Added new capability: Dynamic File Framework.  Various other changes.
&#x9;01/24/2019&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;8.0.0&#x9;&#x9;&#x9;B.P. 2019.1: Added the ability to handle columnCaseRule, resourcePrefix, resourceSuffix and newColumnList for generateMode=&apos;G&apos;. 
&#x9;01/29/2019&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;8.0.0&#x9;&#x9;&#x9;B.P. 2019.101: Fix bug so derivedFilterPath could be used with generateToFolder.
&#x9;04/15/2019&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.8&#x9;&#x9;&#x9;B.P. 2019.200: Added scriptsPath for flexibility of the location of the _scripts folder.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   Changed custom functions to explicit paths.
&#x9;06/12/2019&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.8&#x9;&#x9;&#x9;B.P. 2019.200: Derived the new generateDatasourceListXML from generateDatasourceList to eliminate vector usage for ConfigParamsVector and inStartingFolderExtendedVector.
&#x9;07/26/2019&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.8&#x9;&#x9;&#x9;B.P. 2019.300: Added action &quot;restoreDefaultValues&quot;, &quot;restoreDocConstants&quot; and update sub-action &quot;modifyConstant&quot;.

&#x9;Example of &quot;move&quot;
&#x9;&#x9;-- Move: scenario 2 folder to folder
&#x9;&#x9;,(&#x9;7.2, 7.3, &apos;move&apos;, 
&#x9;&#x9;&#x9;null, null,
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Rebind_Copy_1&apos;,&apos;CONTAINER&apos;)],
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Rebind_Copy_2&apos;,&apos;CONTAINER&apos;)],
&#x9;&#x9;&#x9;null
&#x9;&#x9;)
&#x9;&#x9;-- Move: scenario 3 non-folder to non-folder
&#x9;&#x9;,(&#x9;7.2, 7.3, &apos;move&apos;, 
&#x9;&#x9;&#x9;null, null,
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Rebind2/rebindAllResources2&apos;,&apos;PROCEDURE&apos;)],
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Rebind_Copy_2/rebindAllResources2&apos;,&apos;PROCEDURE&apos;)],
&#x9;&#x9;&#x9;null
&#x9;&#x9;)
&#x9;&#x9;-- Move: scenario 4 non-folder to folder
&#x9;&#x9;,(&#x9;7.2, 7.3, &apos;move&apos;, 
&#x9;&#x9;&#x9;null, null,
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Rebind3/rebindAllResources3&apos;,&apos;PROCEDURE&apos;)],
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Rebind_Copy_2&apos;,&apos;CONTAINER&apos;)],
&#x9;&#x9;&#x9;null
&#x9;&#x9;)

&#x9;(c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.

*/
PROCEDURE vector_masterUpgradeVector(
&#x9;IN projectPathSrc&#x9;&#x9;&#x9;&#x9;VARCHAR(4096),
&#x9;IN projectPathDst&#x9;&#x9;&#x9;&#x9;VARCHAR(4096),
&#x9;IN scriptsPathDst&#x9;&#x9;&#x9;&#x9;VARCHAR(4096),
&#x9;IN bestPracticesVersionFrom &#x9;DOUBLE,
&#x9;IN bestPracticesVersionTo &#x9;&#x9;DOUBLE,
&#x9;OUT&#x9;upgradeVector &#x9;&#x9;&#x9;&#x9;/shared/ASAssets/BestPractices_v81/Procedures/TypeDefinitions.upgradeVector
)
BEGIN
&#x9;DECLARE debug&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CHAR(1) DEFAULT &apos;Y&apos;;
&#x9;DECLARE moduleName&#x9;&#x9;&#x9;&#x9;&#x9;VARCHAR DEFAULT &apos;vector_masterUpgradeVector&apos;;
&#x9;DECLARE projectPathDstReserved&#x9;&#x9;VARCHAR(4096);
&#x9;DECLARE scriptsPathDstReserved&#x9;&#x9;VARCHAR(4096);
&#x9;DECLARE scriptsPathDstDerived&#x9;&#x9;VARCHAR(4096);
&#x9;DECLARE projectNameReserved&#x9;&#x9;&#x9;VARCHAR;
&#x9;DECLARE resourcePath&#x9;&#x9;&#x9;&#x9;LONGVARCHAR;
&#x9;DECLARE masterUpgradeVector &#x9;&#x9;/shared/ASAssets/BestPractices_v81/Procedures/TypeDefinitions.upgradeVector;
&#x9;DECLARE i,j,k&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;INTEGER;
&#x9;DECLARE ex&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXCEPTION;
&#x9;DECLARE resourceAction&#x9;&#x9;&#x9;&#x9;VARCHAR;
&#x9;DECLARE updateAction&#x9;&#x9;&#x9;&#x9;VARCHAR;
&#x9;DECLARE eol&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;VARCHAR DEFAULT /shared/ASAssets/BestPractices_v81/&quot;_ProjectMaintenance&quot;/defaultValues.newline; -- new line character &quot;LF&quot;
&#x9;DECLARE utilitiesRootPath&#x9;&#x9;&#x9;VARCHAR(4000) DEFAULT /shared/ASAssets/BestPractices_v81/&quot;_ProjectMaintenance&quot;/defaultValues.utilitiesRootPath;
&#x9;DECLARE bestPracticesRootPath&#x9;&#x9;VARCHAR(4000) DEFAULT /shared/ASAssets/BestPractices_v81/&quot;_ProjectMaintenance&quot;/defaultValues.bestPracticesRootPath;
&#x9;DECLARE bestPracticesVersionCurrent DOUBLE DEFAULT /shared/ASAssets/BestPractices_v81/&quot;_ProjectMaintenance&quot;/defaultValues.bestPracticesVersion;

&#x9;-- Apply reserved path to project path destination
&#x9;call /shared/ASAssets/Utilities/repository/RepoUtils/applyReservedListToPath(projectPathDst, null, projectPathDstReserved);
&#x9;-- Apply reserved path to scripts path desitnation
&#x9;call /shared/ASAssets/Utilities/repository/RepoUtils/applyReservedListToPath(scriptsPathDst, null, scriptsPathDstReserved);
&#x9;-- Get the derived path
&#x9;set scriptsPathDstDerived = REPLACE(scriptsPathDstReserved, projectPathDstReserved, &apos;&apos;);
&#x9;-- Get the project name
&#x9;call /shared/ASAssets/Utilities/repository/returnFolderNameAndFolderPath(projectPathDstReserved, &apos;E&apos;, projectNameReserved, resourcePath);

&#x9;if (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;call print(&apos;INPUT:&apos;);
&#x9;&#x9;call print(&apos;    projectPathSrc=&apos;||NVL(projectPathSrc,&apos;null&apos;)||&apos;   REPLACEMENT KEYWORD=$PROJECT_PATH_SRC&apos;);
&#x9;&#x9;call print(&apos;    projectPathDst=&apos;||NVL(projectPathDst,&apos;null&apos;)||&apos;   REPLACEMENT KEYWORD=$PROJECT_PATH_DST&apos;);
&#x9;&#x9;call print(&apos;    scriptsPathDst=&apos;||NVL(scriptsPathDst,&apos;null&apos;)||&apos;   REPLACEMENT KEYWORD=$SCRIPTS_PATH_DST&apos;);
&#x9;&#x9;call print(&apos;    bestPracticesVersionFrom=&apos;||bestPracticesVersionFrom);
&#x9;&#x9;call print(&apos;    bestPracticesVersionTo=&apos;||bestPracticesVersionTo);
&#x9;&#x9;call print(&apos;DERIVED:&apos;);
&#x9;&#x9;call print(&apos;    projectPathDstReserved=&apos;||NVL(projectPathDstReserved,&apos;null&apos;)||&apos;   REPLACEMENT KEYWORD=$PROJECT_PATH_DST_RESERVED&apos;);
&#x9;&#x9;call print(&apos;       projectNameReserved=&apos;||NVL(projectNameReserved,&apos;null&apos;)   ||&apos;   REPLACEMENT KEYWORD=$PROJECT_NAME_RESERVED&apos;);
&#x9;&#x9;call print(&apos;    scriptsPathDstReserved=&apos;||NVL(scriptsPathDstReserved,&apos;null&apos;)||&apos;   REPLACEMENT KEYWORD=$SCRIPTS_PATH_DST_RESERVED&apos;);
&#x9;&#x9;call print(&apos;     scriptsPathDstDerived=&apos;||NVL(scriptsPathDstDerived,&apos;null&apos;) ||&apos;   REPLACEMENT KEYWORD=$SCRIPTS_PATH_DST_DERIVED&apos;);
&#x9;end if;

&#x9;if (projectPathDst IS NULL OR LENGTH(&apos;|&apos;||projectPathDst||&apos;|&apos;) = 2) then  --Empty
&#x9;&#x9;raise ex value moduleName||&apos;:  &quot;projectPathDst&quot; may not be null or empty.&apos;;
&#x9;end if;
&#x9;if (scriptsPathDst IS NULL OR LENGTH(&apos;|&apos;||scriptsPathDst||&apos;|&apos;) = 2) then  --Empty
&#x9;&#x9;raise ex value moduleName||&apos;:  &quot;scriptsPathDst&quot; may not be null or empty.&apos;;
&#x9;end if;
&#x9;if (bestPracticesVersionFrom is null) then
&#x9;&#x9;raise ex value moduleName||&apos;:  &quot;bestPracticesVersionFrom&quot; may not be null.&apos;;
&#x9;end if;
&#x9;if (bestPracticesVersionTo is null) then
&#x9;&#x9;raise ex value moduleName||&apos;:  &quot;bestPracticesVersionTo&quot; may not be null.&apos;;
&#x9;end if;

/********************************************************************************************************************************
 * masterUpgradeVector:
 *    The &quot;masterUpgradeVector&quot; provides a complete list of all the upgrade actions for each upgrade path starting with 7.0.
 *
 *    It is the responsibility of the developer to add new upgrade entries for each new release of the Best Practices scripts.
 *********************************************************************************************************************************/
&#x9;set masterUpgradeVector = VECTOR [
/********************************************************
 * Actions to upgrade 1.0 through 4.0 to latest version:
 ********************************************************/
&#x9;&#x9;-- 1. Copy Physial Metadata (Spelled wrong in 1.0 and 2.0)
&#x9;&#x9;(&#x9;1.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L4_Physical_Layer/L4_2_Physial_Metadata&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Physical/Metadata&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 2. Copy Physical Metadata (Spelled correctly in 3.0 and 4.0)
&#x9;&#x9;,(&#x9;1.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L4_Physical_Layer/L4_2_Physical_Metadata&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Physical/Metadata&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 3. Copy Physical Views
&#x9;&#x9;,(&#x9;1.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L4_Physical_Layer/L4_1_Physical_Views&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Physical/Physical&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 4. Copy Formatting Views
&#x9;&#x9;,(&#x9;1.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L3_Formatting_Layer/L3_1_Formatting_Views&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Physical/Formatting&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 5. Copy Logical Views
&#x9;&#x9;,(&#x9;1.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L2_Business_Layer/L2_2_Logical_Views&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Business/Logical&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 6. Copy Federated Views
&#x9;&#x9;,(&#x9;1.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L2_Business_Layer/L2_1_Federated_Views&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Business/Federated&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 7. Copy Client Views
&#x9;&#x9;,(&#x9;1.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L1_Mapping_Layer/L1_2_Client_Views&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Application/Views&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 8. Copy Client Services
&#x9;&#x9;,(&#x9;1.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L1_Mapping_Layer/L1_1_Client_Services&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Application/Services&apos;,&apos;CONTAINER&apos;)], &#x9;null)

&#x9;&#x9;-- 9. Copy constants to Definitions used by CRUD
&#x9;&#x9;,(&#x9;1.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/constants&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Application/Services/CRUD/Definitions&apos;,&apos;CONTAINER&apos;)], &#x9;null)

&#x9;&#x9;-- 10. Copy Test Physical Metadata (Spelled correctly in 1.0 through 4.0)
&#x9;&#x9;,(&#x9;1.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L4_Physical_Layer/L4_2_Physical_Metadata&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Physical/Metadata&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 11. Copy Test Physical Views
&#x9;&#x9;,(&#x9;1.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L4_Physical_Layer/L4_1_Physical_Views&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Physical/Physical&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 12. Copy Test Formatting Views
&#x9;&#x9;,(&#x9;1.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L3_Formatting_Layer/L3_1_Formatting_Views&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Physical/Formatting&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 13. Copy Test Logical Views
&#x9;&#x9;,(&#x9;1.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L2_Business_Layer/L2_2_Logical_Views&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Business/Logical&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 14. Copy Test Federated Views
&#x9;&#x9;,(&#x9;1.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L2_Business_Layer/L2_1_Federated_Views&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Business/Federated&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 15. Copy Test Client Views
&#x9;&#x9;,(&#x9;1.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L1_Mapping_Layer/L1_2_Client_Views&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Application/Views&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 16. Copy Test Client Services
&#x9;&#x9;,(&#x9;1.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L1_Mapping_Layer/L1_1_Client_Services&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Application/Services&apos;,&apos;CONTAINER&apos;)], &#x9;null)

&#x9;&#x9;-- 17. Rebind Physial Metadata (Spelled wrong in 1.0 and 2.0)
&#x9;&#x9;,(&#x9;1.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L4_Physical_Layer/L4_2_Physial_Metadata&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Physical/Metadata&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 18. Rebind Physical Metadata (Spelled correctly in 3.0 and 4.0)
&#x9;&#x9;,(&#x9;1.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L4_Physical_Layer/L4_2_Physical_Metadata&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Physical/Metadata&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 19. Rebind Physical Views
&#x9;&#x9;,(&#x9;1.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L4_Physical_Layer/L4_1_Physical_Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Physical/Physical&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 20. Rebind Formatting Views
&#x9;&#x9;,(&#x9;1.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L3_Formatting_Layer/L3_1_Formatting_Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Physical/Formatting&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 21. Rebind Logical Views
&#x9;&#x9;,(&#x9;1.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L2_Business_Layer/L2_2_Logical_Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Business/Logical&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 22. Rebind Federated Views
&#x9;&#x9;,(&#x9;1.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L2_Business_Layer/L2_1_Federated_Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Business/Federated&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 23. Rebind Client Views
&#x9;&#x9;,(&#x9;1.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L1_Mapping_Layer/L1_2_Client_Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Application/Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 24. Rebind Client Services
&#x9;&#x9;,(&#x9;1.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L1_Mapping_Layer/L1_1_Client_Services&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Application/Services&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 25. Rebind Test Physical Metadata (Spelled correctly in 1.0 through 4.0)
&#x9;&#x9;,(&#x9;1.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L4_Physical_Layer/L4_2_Physical_Metadata&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Physical/Metadata&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 26. Rebind Test Physical Views
&#x9;&#x9;,(&#x9;1.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L4_Physical_Layer/L4_1_Physical_Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Physical/Physical&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 27. Rebind Test Formatting Views
&#x9;&#x9;,(&#x9;1.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L3_Formatting_Layer/L3_1_Formatting_Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Physical/Formatting&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 28. Rebind Test Logical Views
&#x9;&#x9;,(&#x9;1.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L2_Business_Layer/L2_2_Logical_Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Business/Logical&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 29. Rebind Test Federated Views
&#x9;&#x9;,(&#x9;1.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L2_Business_Layer/L2_1_Federated_Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Business/Federated&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 30. Rebind Test Client Views
&#x9;&#x9;,(&#x9;1.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L1_Mapping_Layer/L1_2_Client_Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Application/Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 31. Rebind Test Client Services
&#x9;&#x9;,(&#x9;1.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L1_Mapping_Layer/L1_1_Client_Services&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Application/Services&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 32. Rebind /shared/BestPractices
&#x9;&#x9;,(&#x9;1.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;/shared/BestPractices&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 33. Rebind constants
&#x9;&#x9;,(&#x9;1.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/constants&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Application/Services/CRUD/Definitions&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 34. Rebind defaultValues
&#x9;&#x9;,(&#x9;1.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_DST/Application/Services/CRUD/Definitions/defaultValues&apos;,&apos;PROCEDURE&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/&quot;_scripts&quot;/Constants/defaultValues&apos;,&apos;PROCEDURE&apos;)], null)
&#x9;&#x9;-- 35. Update CRUD procedures within the destination project path
&#x9;&#x9;,(&#x9;1.0, bestPracticesVersionCurrent, &apos;updateCrud&apos;, null, null, null, VECTOR[(&apos;$PROJECT_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

/********************************************************
 * Actions to upgrade 5.0 to latest version:
 ********************************************************/

&#x9;&#x9;-- 1. Copy Physical Metadata
&#x9;&#x9;,(&#x9;5.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L4_Physical_Layer/Physical_Metadata&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Physical/Metadata&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 2. Copy Physical Views
&#x9;&#x9;,(&#x9;5.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L4_Physical_Layer/Physical_Views&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Physical/Physical&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 3. Copy Formatting Views
&#x9;&#x9;,(&#x9;5.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L3_Formatting_Layer/Formatting_Views&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Physical/Formatting&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 4. Copy Logical Views
&#x9;&#x9;,(&#x9;5.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L2_Business_Layer/Logical_Views&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Business/Logical&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 5. Copy Federated Views
&#x9;&#x9;,(&#x9;5.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L2_Business_Layer/Federated_Views&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Business/Federated&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 6. Copy Business Views
&#x9;&#x9;,(&#x9;5.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L2_Business_Layer/Business_Views&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Business/Business&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 7. Copy Client Views
&#x9;&#x9;,(&#x9;5.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L1_Mapping_Layer/Client_Views&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Application/Views&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 8. Copy Client Services
&#x9;&#x9;,(&#x9;5.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L1_Mapping_Layer/Client_Services&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Application/Services&apos;,&apos;CONTAINER&apos;)], &#x9;null)

&#x9;&#x9;-- 9. Copy constants to Definitions used by CRUD
&#x9;&#x9;,(&#x9;5.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/constants&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Application/Services/CRUD/Definitions&apos;,&apos;CONTAINER&apos;)], &#x9;null)

&#x9;&#x9;-- 10. Copy Test Physical Metadata
&#x9;&#x9;,(&#x9;5.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L4_Physical_Layer/Physical_Metadata&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Physical/Metadata&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 11. Copy Test Physical Views
&#x9;&#x9;,(&#x9;5.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L4_Physical_Layer/Physical_Views&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Physical/Physical&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 12. Copy Test Formatting Views
&#x9;&#x9;,(&#x9;5.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L3_Formatting_Layer/Formatting_Views&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Physical/Formatting&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 13. Copy Test Logical Views
&#x9;&#x9;,(&#x9;5.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L2_Business_Layer/Logical_Views&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Business/Logical&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 14. Copy Test Federated Views
&#x9;&#x9;,(&#x9;5.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L2_Business_Layer/Federated_Views&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Business/Federated&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 15. Copy Test Business Views
&#x9;&#x9;,(&#x9;5.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L2_Business_Layer/Business_Views&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Business/Business&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 16. Copy Test Client Views
&#x9;&#x9;,(&#x9;5.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L1_Mapping_Layer/Client_Views&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Application/Views&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 17. Copy Test Client Services
&#x9;&#x9;,(&#x9;5.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L1_Mapping_Layer/Client_Services&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Application/Services&apos;,&apos;CONTAINER&apos;)], &#x9;null)

&#x9;&#x9;-- 18. Rebind Physical Metadata
&#x9;&#x9;,(&#x9;5.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L4_Physical_Layer/Physical_Metadata&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Physical/Metadata&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 19. Rebind Physical Views
&#x9;&#x9;,(&#x9;5.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L4_Physical_Layer/Physical_Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Physical/Physical&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 20. Rebind Formatting Views
&#x9;&#x9;,(&#x9;5.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L3_Formatting_Layer/Formatting_Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Physical/Formatting&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 21. Rebind Logical Views
&#x9;&#x9;,(&#x9;5.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L2_Business_Layer/Logical_Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Business/Logical&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 22. Rebind Federated Views
&#x9;&#x9;,(&#x9;5.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L2_Business_Layer/Federated_Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Business/Federated&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 23. Rebind Business Views
&#x9;&#x9;,(&#x9;5.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L2_Business_Layer/Business_Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Business/Business&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 24. Rebind Client Views
&#x9;&#x9;,(&#x9;5.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L1_Mapping_Layer/Client_Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Application/Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 25. Rebind Client Services
&#x9;&#x9;,(&#x9;5.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L1_Mapping_Layer/Client_Services&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Application/Services&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 26. Rebind Test Physical Metadata
&#x9;&#x9;,(&#x9;5.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L4_Physical_Layer/Physical_Metadata&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Physical/Metadata&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 27. Rebind Test Physical Views
&#x9;&#x9;,(&#x9;5.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L4_Physical_Layer/Physical_Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Physical/Physical&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 28. Rebind Test Formatting Views
&#x9;&#x9;,(&#x9;5.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L3_Formatting_Layer/Formatting_Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Physical/Formatting&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 29. Rebind Test Logical Views
&#x9;&#x9;,(&#x9;5.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L2_Business_Layer/Logical_Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Business/Logical&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 30. Rebind Test Federated Views
&#x9;&#x9;,(&#x9;5.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L2_Business_Layer/Federated_Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Business/Federated&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 31. Rebind Test Business Views
&#x9;&#x9;,(&#x9;5.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L2_Business_Layer/Business_Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Business/Business&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 32. Rebind Test Client Views
&#x9;&#x9;,(&#x9;5.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L1_Mapping_Layer/Client_Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Application/Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 33. Rebind Test Client Services
&#x9;&#x9;,(&#x9;5.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L1_Mapping_Layer/Client_Services&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Application/Services&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 34. Rebind /shared/BestPractices
&#x9;&#x9;,(&#x9;5.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;/shared/BestPractices&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 35. Rebind constants
&#x9;&#x9;,(&#x9;5.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/constants&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Application/Services/CRUD/Definitions&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 36. Rebind defaultValues
&#x9;&#x9;,(&#x9;5.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_DST/Application/Services/CRUD/Definitions/defaultValues&apos;,&apos;PROCEDURE&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/&quot;_scripts&quot;/Constants/defaultValues&apos;,&apos;PROCEDURE&apos;)], null)
&#x9;&#x9;-- 37. Update CRUD procedures within the destination project path
&#x9;&#x9;,(&#x9;5.0, bestPracticesVersionCurrent, &apos;updateCrud&apos;, null, null, null, VECTOR[(&apos;$PROJECT_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

/********************************************************
 * Actions to upgrade 6.0  thru 6.6 to latest version:
 ********************************************************/
&#x9;&#x9;-- 1. Copy Physical Metadata
&#x9;&#x9;,(&#x9;6.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L4_Physical_Layer/Physical_Metadata&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Physical/Metadata&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 2. Copy Physical Views
&#x9;&#x9;,(&#x9;6.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L4_Physical_Layer/Physical_Views&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Physical/Physical&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 3. Copy Formatting Views
&#x9;&#x9;,(&#x9;6.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L3_Formatting_Layer/Formatting_Views&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Physical/Formatting&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 4. Copy Logical Views
&#x9;&#x9;,(&#x9;6.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L2_Business_Layer/Logical_Views&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Business/Logical&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 5. Copy Federated Views
&#x9;&#x9;,(&#x9;6.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L2_Business_Layer/Federated_Views&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Business/Federated&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 6. Copy Business Views
&#x9;&#x9;,(&#x9;6.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L2_Business_Layer/Business_Views&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Business/Business&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 7. Copy Client Views
&#x9;&#x9;,(&#x9;6.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L1_Mapping_Layer/Client_Views&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Application/Views&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 8. Copy Client Services
&#x9;&#x9;,(&#x9;6.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L1_Mapping_Layer/Client_Services&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Application/Services&apos;,&apos;CONTAINER&apos;)], &#x9;null)
&#x9;&#x9;-- 9. Copy Client Published
&#x9;&#x9;,(&#x9;6.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L1_Mapping_Layer/Client_Published&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Application/Published&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 10. Copy constants to Definitions used by CRUD
&#x9;&#x9;,(&#x9;6.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/constants&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Application/Services/CRUD/Definitions&apos;,&apos;CONTAINER&apos;)], &#x9;null)

&#x9;&#x9;-- 11. Copy Test Physical Metadata
&#x9;&#x9;,(&#x9;6.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L4_Physical_Layer/Physical_Metadata&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Physical/Metadata&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 12. Copy Test Physical Views
&#x9;&#x9;,(&#x9;6.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L4_Physical_Layer/Physical_Views&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Physical/Physical&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 13. Copy Test Formatting Views
&#x9;&#x9;,(&#x9;6.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L3_Formatting_Layer/Formatting_Views&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Physical/Formatting&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 14. Copy Test Logical Views
&#x9;&#x9;,(&#x9;6.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L2_Business_Layer/Logical_Views&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Business/Logical&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 15. Copy Test Federated Views
&#x9;&#x9;,(&#x9;6.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L2_Business_Layer/Federated_Views&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Business/Federated&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 16. Copy Test Business Views
&#x9;&#x9;,(&#x9;6.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L2_Business_Layer/Business_Views&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Business/Business&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 17. Copy Test Client Views
&#x9;&#x9;,(&#x9;6.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L1_Mapping_Layer/Client_Views&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Application/Views&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 18. Copy Test Client Services
&#x9;&#x9;,(&#x9;6.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L1_Mapping_Layer/Client_Services&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Application/Services&apos;,&apos;CONTAINER&apos;)], &#x9;null)
&#x9;&#x9;-- 19. Copy Test Client Published
&#x9;&#x9;,(&#x9;6.0, bestPracticesVersionCurrent, &apos;copyChildren&apos;, null, null, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L1_Mapping_Layer/Client_Published&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Application/Published&apos;,&apos;CONTAINER&apos;)], &#x9;null)

&#x9;&#x9;-- 20. Rebind Physical Metadata
&#x9;&#x9;,(&#x9;6.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L4_Physical_Layer/Physical_Metadata&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Physical/Metadata&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 21. Rebind Physical Views
&#x9;&#x9;,(&#x9;6.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L4_Physical_Layer/Physical_Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Physical/Physical&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 22. Rebind Formatting Views
&#x9;&#x9;,(&#x9;6.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L3_Formatting_Layer/Formatting_Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Physical/Formatting&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 23. Rebind Logical Views
&#x9;&#x9;,(&#x9;6.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L2_Business_Layer/Logical_Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Business/Logical&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 24. Rebind Federated Views
&#x9;&#x9;,(&#x9;6.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L2_Business_Layer/Federated_Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Business/Federated&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 25. Rebind Business Views
&#x9;&#x9;,(&#x9;6.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L2_Business_Layer/Business_Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Business/Business&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 26. Rebind Client Views
&#x9;&#x9;,(&#x9;6.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L1_Mapping_Layer/Client_Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Application/Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 27. Rebind Client Services
&#x9;&#x9;,(&#x9;6.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L1_Mapping_Layer/Client_Services&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Application/Services&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 28. Rebind Client Published
&#x9;&#x9;,(&#x9;6.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L1_Mapping_Layer/Client_Published&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Application/Published&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 29. Rebind Test Physical Metadata
&#x9;&#x9;,(&#x9;6.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L4_Physical_Layer/Physical_Metadata&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Physical/Metadata&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 30. Rebind Test Physical Views
&#x9;&#x9;,(&#x9;6.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L4_Physical_Layer/Physical_Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Physical/Physical&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 31. Rebind Test Formatting Views
&#x9;&#x9;,(&#x9;6.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L3_Formatting_Layer/Formatting_Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Physical/Formatting&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 32. Rebind Test Logical Views
&#x9;&#x9;,(&#x9;6.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L2_Business_Layer/Logical_Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Business/Logical&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 33. Rebind Test Federated Views
&#x9;&#x9;,(&#x9;6.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L2_Business_Layer/Federated_Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Business/Federated&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 34. Rebind Test Business Views
&#x9;&#x9;,(&#x9;6.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L2_Business_Layer/Business_Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Business/Business&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 35. Rebind Test Client Views
&#x9;&#x9;,(&#x9;6.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L1_Mapping_Layer/Client_Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Application/Views&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 36. Rebind Test Client Services
&#x9;&#x9;,(&#x9;6.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L1_Mapping_Layer/Client_Services&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Application/Services&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 37. Rebind Test Client Published
&#x9;&#x9;,(&#x9;6.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/L0_Testing_Layer/L1_Mapping_Layer/Client_Published&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Test/Application/Published&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 38. Rebind /shared/BestPractices
&#x9;&#x9;,(&#x9;6.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;/shared/BestPractices&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 39. Rebind constants
&#x9;&#x9;,(&#x9;6.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_SRC/constants&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/Application/Services/CRUD/Definitions&apos;||&apos;/&apos;,&apos;CONTAINER&apos;)], null)
&#x9;&#x9;-- 40. Rebind defaultValues
&#x9;&#x9;,(&#x9;6.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST&apos;, &apos;CONTAINER&apos;, VECTOR[(&apos;$PROJECT_PATH_DST/Application/Services/CRUD/Definitions/defaultValues&apos;,&apos;PROCEDURE&apos;)], VECTOR[(&apos;$PROJECT_PATH_DST/&quot;_scripts&quot;/Constants/defaultValues&apos;,&apos;PROCEDURE&apos;)], null)
&#x9;&#x9;-- 41. Update CRUD procedures within the destination project path
&#x9;&#x9;,(&#x9;6.0, bestPracticesVersionCurrent, &apos;updateCrud&apos;, null, null, null, VECTOR[(&apos;$PROJECT_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)


/********************************************************
 * Actions to upgrade 7.0 to Current: 
   Note: The actions below are the minimum requirments for upgrading a project.
 ********************************************************/
/* NOTE: THIS SECTION IS USED TO AN UPGRADE IN PLACE FROM 7.0 to Current.  It makes one copy of the entire _scripts folder. */
&#x9;&#x9;-- 1. Make a copy of $SCRIPTS_PATH_DST
&#x9;&#x9;,(&#x9;7.0, bestPracticesVersionCurrent, &apos;copyLeave&apos;, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null, null)

&#x9;&#x9;-- 2. Copy DataAbstraction_GENERIC_Template/_scripts/Constants to $SCRIPTS_PATH_DST/Constants
&#x9;&#x9;,(&#x9;7.0, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Constants&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Constants&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 3. Copy DataAbstraction_GENERIC_Template/_scripts/Display to $SCRIPTS_PATH_DST/Display
&#x9;&#x9;,(&#x9;7.0, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Display&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Display&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 4. Copy DataAbstraction_GENERIC_Template/_scripts/Generate to $SCRIPTS_PATH_DST/Generate
&#x9;&#x9;,(&#x9;7.0, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Generate&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Generate&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 5. Delete $SCRIPTS_PATH_DST/Rebind
&#x9;&#x9;,(&#x9;7.0, bestPracticesVersionCurrent, &apos;delete&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST/Rebind&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 6. Copy DataAbstraction_GENERIC_Template/_scripts/Rebind to $SCRIPTS_PATH_DST/Rebind
&#x9;&#x9;,(&#x9;7.0, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Rebind&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Rebind&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 7. Update PROJECT_PATH/_scripts/Constants/defaultValues
&#x9;&#x9;,(&#x9;7.0, bestPracticesVersionCurrent, &apos;update&apos;, null, null, null,
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Constants/defaultValues&apos;,&apos;PROCEDURE&apos;)],
&#x9;&#x9;&#x9;VECTOR[&#x9;--updateAction,&#x9;occur,numLines,&#x9;keyTextVerify,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;searchText,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;replaceText
&#x9;&#x9;&#x9;&#x9;&#x9;  (&apos;replace&apos;,&#x9;&#x9;1,&#x9;0,&#x9;&#x9;&apos;/services/databases/$PROJECT_NAME_RESERVED&apos;,&apos;/services/databases/DataAbstraction_GENERIC_Template&apos;,&#x9;&#x9;&#x9;&apos;/services/databases/$PROJECT_NAME_RESERVED&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9; ,(&apos;replace&apos;,&#x9;&#x9;1,&#x9;0,&#x9;&#x9;&apos;$PROJECT_PATH_DST_RESERVED&apos;,&#x9;&#x9;&#x9;&#x9;bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template&apos;,&#x9;&#x9;&#x9;&apos;$PROJECT_PATH_DST_RESERVED&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9; ,(&apos;replace&apos;,&#x9;&#x9;1,&#x9;0,&#x9;&#x9;&apos;$SCRIPTS_PATH_DST_DERIVED&apos;,&#x9;&#x9;&#x9;&#x9;&apos;/&quot;_scripts&quot;&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;$SCRIPTS_PATH_DST_DERIVED&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9;])

&#x9;&#x9;-- 8. Update PROJECT_PATH/_scripts/Documentation/constants
&#x9;&#x9;,(&#x9;7.0, bestPracticesVersionCurrent, &apos;update&apos;, null, null, null,
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation/constants&apos;,&apos;PROCEDURE&apos;)],
&#x9;&#x9;&#x9;VECTOR[&#x9;--updateAction,&#x9;occur,numLines,&#x9;keyTextVerify,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;searchText,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;replaceText
&#x9;&#x9;&#x9;&#x9;&#x9; (&apos;replace&apos;,&#x9;&#x9;0,&#x9;0,&#x9;&#x9;utilitiesRootPath,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;/shared/Utilities&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;utilitiesRootPath)
&#x9;&#x9;&#x9;&#x9;&#x9;,(&apos;replace&apos;,&#x9;&#x9;0,&#x9;0,&#x9;&#x9;utilitiesRootPath,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;/shared/PSAssets/Utilities&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;utilitiesRootPath)
&#x9;&#x9;&#x9;&#x9;&#x9;])

&#x9;&#x9;-- 9. UpdateTrigger PROJECT_PATH/_scripts/Documentation
&#x9;&#x9;,(&#x9;7.0, bestPracticesVersionCurrent, &apos;updateTrigger&apos;, null, null, null,
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation&apos;,&apos;CONTAINER&apos;)],
&#x9;&#x9;&#x9;VECTOR[&#x9;--updateAction,&#x9;occur,numLines,&#x9;keyTextVerify,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;searchText,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;replaceText
&#x9;&#x9;&#x9;&#x9;&#x9; (&apos;fixParam&apos;,&#x9;&#x9;0,&#x9;0,&#x9;&#x9;&apos;&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;&apos;) -- fix the single quote pairs
&#x9;&#x9;&#x9;&#x9;&#x9;,(&apos;replacePath&apos;,&#x9;0,&#x9;0,&#x9;&#x9;utilitiesRootPath,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;/shared/Utilities&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;utilitiesRootPath)
&#x9;&#x9;&#x9;&#x9;&#x9;,(&apos;replacePath&apos;,&#x9;0,&#x9;0,&#x9;&#x9;utilitiesRootPath,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;/shared/PSAssets/Utilities&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;utilitiesRootPath)
--&#x9;&#x9;&#x9;&#x9;&#x9;,(&apos;replaceParam&apos;,&#x9;0,&#x9;0,&#x9;&#x9;&apos;$PROJECT_PATH_DST&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&apos;$PROJECT_PATH_DST&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;$PROJECT_PATH_DST&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9;])

&#x9;&#x9;-- 10. Configure starting Folders PROJECT_PATH/_scripts/Configure
&#x9;&#x9;,(&#x9;7.0, bestPracticesVersionCurrent, &apos;configFolders&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 11. Rebind all resources starting at PROJECT_PATH/_scripts from New Utilities path (/shared/BestPractices) to Best practices Current (/shared/PSAssets/BestPractices_v80)
&#x9;&#x9;,(&#x9;7.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$SCRIPTS_PATH_DST&apos;, &apos;CONTAINER&apos;, &#x9;&#x9;VECTOR[(&apos;/shared/BestPractices&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 12. Rebind all resources starting at PROJECT_PATH/Application from New Utilities path (/shared/BestPractices) to Best practices Current (/shared/PSAssets/BestPractices_v80)
&#x9;&#x9;,(&#x9;7.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Application&apos;, &apos;CONTAINER&apos;, &#x9;VECTOR[(&apos;/shared/BestPractices&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 13. Rebind all resources starting at PROJECT_PATH/Business from New Utilities path (/shared/BestPractices) to Best practices Current (/shared/PSAssets/BestPractices_v80)
&#x9;&#x9;,(&#x9;7.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Business&apos;, &apos;CONTAINER&apos;, &#x9;&#x9;VECTOR[(&apos;/shared/BestPractices&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 14. Rebind all resources starting at PROJECT_PATH/Physical from New Utilities path (/shared/BestPractices) to Best practices Current (/shared/PSAssets/BestPractices_v80)
&#x9;&#x9;,(&#x9;7.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Physical&apos;, &apos;CONTAINER&apos;, &#x9;&#x9;VECTOR[(&apos;/shared/BestPractices&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 15. Update CRUD procedures within the destination project path
&#x9;&#x9;,(&#x9;7.0, bestPracticesVersionCurrent, &apos;updateCrud&apos;, null, null, null, VECTOR[(&apos;$PROJECT_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)


/********************************************************
 * Actions to upgrade 7.1 to Current: 
   Note: The actions below are the minimum requirments for upgrading a project.
 ********************************************************/
/* NOTE: THIS SECTION IS USED TO AN UPGRADE IN PLACE FROM 7.1 to Current.  It makes one copy of the entire _scripts folder. */
&#x9;&#x9;-- 1. Make a copy of $SCRIPTS_PATH_DST
&#x9;&#x9;,(&#x9;7.1, bestPracticesVersionCurrent, &apos;copyLeave&apos;, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null, null)

&#x9;&#x9;-- 2. Copy DataAbstraction_GENERIC_Template/_scripts/Constants to $SCRIPTS_PATH_DST/Constants
&#x9;&#x9;,(&#x9;7.1, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Constants&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Constants&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 3. Copy DataAbstraction_GENERIC_Template/_scripts/Display to $SCRIPTS_PATH_DST/Display
&#x9;&#x9;,(&#x9;7.1, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Display&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Display&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 4. Copy DataAbstraction_GENERIC_Template/_scripts/Generate to $SCRIPTS_PATH_DST/Generate
&#x9;&#x9;,(&#x9;7.1, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Generate&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Generate&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 5. Update PROJECT_PATH/_scripts/Constants/defaultValues
&#x9;&#x9;,(&#x9;7.1, bestPracticesVersionCurrent, &apos;update&apos;, null, null, null,
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Constants/defaultValues&apos;,&apos;PROCEDURE&apos;)],
&#x9;&#x9;&#x9;VECTOR[&#x9;--updateAction,&#x9;occur,numLines,&#x9;keyTextVerify,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;searchText,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;replaceText
&#x9;&#x9;&#x9;&#x9;&#x9;  (&apos;replace&apos;,&#x9;&#x9;1,&#x9;0,&#x9;&#x9;&apos;/services/databases/$PROJECT_NAME_RESERVED&apos;,&apos;/services/databases/DataAbstraction_GENERIC_Template&apos;,&#x9;&#x9;&#x9;&apos;/services/databases/$PROJECT_NAME_RESERVED&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9; ,(&apos;replace&apos;,&#x9;&#x9;1,&#x9;0,&#x9;&#x9;&apos;$PROJECT_PATH_DST_RESERVED&apos;,&#x9;&#x9;&#x9;&#x9;bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template&apos;,&#x9;&#x9;&#x9;&apos;$PROJECT_PATH_DST_RESERVED&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9; ,(&apos;replace&apos;,&#x9;&#x9;1,&#x9;0,&#x9;&#x9;&apos;$SCRIPTS_PATH_DST_DERIVED&apos;,&#x9;&#x9;&#x9;&#x9;&apos;/&quot;_scripts&quot;&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;$SCRIPTS_PATH_DST_DERIVED&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9;])

&#x9;&#x9;-- 6. Update PROJECT_PATH/_scripts/Documentation/constants
&#x9;&#x9;,(&#x9;7.1, bestPracticesVersionCurrent, &apos;update&apos;, null, null, null,
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation/constants&apos;,&apos;PROCEDURE&apos;)],
&#x9;&#x9;&#x9;VECTOR[&#x9;--updateAction,&#x9;occur,numLines,&#x9;keyTextVerify,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;searchText,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;replaceText
&#x9;&#x9;&#x9;&#x9;&#x9; (&apos;replace&apos;,&#x9;&#x9;0,&#x9;0,&#x9;&#x9;utilitiesRootPath,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;/shared/Utilities&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;utilitiesRootPath)
&#x9;&#x9;&#x9;&#x9;&#x9;,(&apos;replace&apos;,&#x9;&#x9;0,&#x9;0,&#x9;&#x9;utilitiesRootPath,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;/shared/PSAssets/Utilities&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;utilitiesRootPath)
&#x9;&#x9;&#x9;&#x9;&#x9;])

&#x9;&#x9;-- 7. UpdateTrigger PROJECT_PATH/_scripts/Documentation
&#x9;&#x9;,(&#x9;7.1, bestPracticesVersionCurrent, &apos;updateTrigger&apos;, null, null, null,
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation&apos;,&apos;CONTAINER&apos;)],
&#x9;&#x9;&#x9;VECTOR[&#x9;--updateAction,&#x9;occur,numLines,&#x9;keyTextVerify,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;searchText,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;replaceText
&#x9;&#x9;&#x9;&#x9;&#x9; (&apos;fixParam&apos;,&#x9;&#x9;0,&#x9;0,&#x9;&#x9;&apos;&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;&apos;) -- fix the single quote pairs
&#x9;&#x9;&#x9;&#x9;&#x9;,(&apos;replacePath&apos;,&#x9;0,&#x9;0,&#x9;&#x9;utilitiesRootPath,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;/shared/Utilities&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;utilitiesRootPath)
&#x9;&#x9;&#x9;&#x9;&#x9;,(&apos;replacePath&apos;,&#x9;0,&#x9;0,&#x9;&#x9;utilitiesRootPath,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;/shared/PSAssets/Utilities&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;utilitiesRootPath)
--&#x9;&#x9;&#x9;&#x9;&#x9;,(&apos;replaceParam&apos;,&#x9;0,&#x9;0,&#x9;&#x9;&apos;$PROJECT_PATH_DST&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&apos;$PROJECT_PATH_DST&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;$PROJECT_PATH_DST&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9;])

&#x9;&#x9;-- 8. Configure starting Folders PROJECT_PATH/_scripts/Configure
&#x9;&#x9;,(&#x9;7.1, bestPracticesVersionCurrent, &apos;configFolders&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 9. Rebind all resources starting at PROJECT_PATH/_scripts from New Utilities path (/shared/BestPractices) to Best practices Current (/shared/PSAssets/BestPractices_v80)
&#x9;&#x9;,(&#x9;7.1, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$SCRIPTS_PATH_DST&apos;, &apos;CONTAINER&apos;, &#x9;&#x9;VECTOR[(&apos;/shared/BestPractices&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 10. Rebind all resources starting at PROJECT_PATH/Application from New Utilities path (/shared/BestPractices) to Best practices Current (/shared/PSAssets/BestPractices_v80)
&#x9;&#x9;,(&#x9;7.1, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Application&apos;, &apos;CONTAINER&apos;, &#x9;VECTOR[(&apos;/shared/BestPractices&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 11. Rebind all resources starting at PROJECT_PATH/Business from New Utilities path (/shared/BestPractices) to Best practices Current (/shared/PSAssets/BestPractices_v80)
&#x9;&#x9;,(&#x9;7.1, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Business&apos;, &apos;CONTAINER&apos;, &#x9;&#x9;VECTOR[(&apos;/shared/BestPractices&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 12. Rebind all resources starting at PROJECT_PATH/Physical from New Utilities path (/shared/BestPractices) to Best practices Current (/shared/PSAssets/BestPractices_v80)
&#x9;&#x9;,(&#x9;7.1, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Physical&apos;, &apos;CONTAINER&apos;, &#x9;&#x9;VECTOR[(&apos;/shared/BestPractices&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 13. Update CRUD procedures within the destination project path
&#x9;&#x9;,(&#x9;7.1, bestPracticesVersionCurrent, &apos;updateCrud&apos;, null, null, null, VECTOR[(&apos;$PROJECT_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)


/********************************************************
 * Actions to upgrade 7.2 to Current: 
   Note: The actions below are the minimum requirments for upgrading a project.
 ********************************************************/
/* NOTE: THIS SECTION IS USED TO AN UPGRADE IN PLACE FROM 7.2 to Current.  It makes one copy of the entire _scripts folder. */
&#x9;&#x9;-- 1. Make a copy of $SCRIPTS_PATH_DST
&#x9;&#x9;,(&#x9;7.2, bestPracticesVersionCurrent, &apos;copyLeave&apos;, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null, null)

&#x9;&#x9;-- 2. Copy DataAbstraction_GENERIC_Template/_scripts/Constants to $SCRIPTS_PATH_DST/Constants
&#x9;&#x9;,(&#x9;7.2, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Constants&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Constants&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 3. Copy DataAbstraction_GENERIC_Template/_scripts/Display to $SCRIPTS_PATH_DST/Display
&#x9;&#x9;,(&#x9;7.2, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Display&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Display&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 4. Copy DataAbstraction_GENERIC_Template/_scripts/Generate to $SCRIPTS_PATH_DST/Generate
&#x9;&#x9;,(&#x9;7.2, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Generate&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Generate&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 5. Update PROJECT_PATH/_scripts/Constants/defaultValues
&#x9;&#x9;,(&#x9;7.2, bestPracticesVersionCurrent, &apos;update&apos;, null, null, null,
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Constants/defaultValues&apos;,&apos;PROCEDURE&apos;)],
&#x9;&#x9;&#x9;VECTOR[&#x9;--updateAction,&#x9;occur,numLines,&#x9;keyTextVerify,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;searchText,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;replaceText
&#x9;&#x9;&#x9;&#x9;&#x9;  (&apos;replace&apos;,&#x9;&#x9;1,&#x9;0,&#x9;&#x9;&apos;/services/databases/$PROJECT_NAME_RESERVED&apos;,&apos;/services/databases/DataAbstraction_GENERIC_Template&apos;,&#x9;&#x9;&#x9;&apos;/services/databases/$PROJECT_NAME_RESERVED&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9; ,(&apos;replace&apos;,&#x9;&#x9;1,&#x9;0,&#x9;&#x9;&apos;$PROJECT_PATH_DST_RESERVED&apos;,&#x9;&#x9;&#x9;&#x9;bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template&apos;,&#x9;&#x9;&#x9;&apos;$PROJECT_PATH_DST_RESERVED&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9; ,(&apos;replace&apos;,&#x9;&#x9;1,&#x9;0,&#x9;&#x9;&apos;$SCRIPTS_PATH_DST_DERIVED&apos;,&#x9;&#x9;&#x9;&#x9;&apos;/&quot;_scripts&quot;&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;$SCRIPTS_PATH_DST_DERIVED&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9;])

&#x9;&#x9;-- 6. Update PROJECT_PATH/_scripts/Documentation/constants
&#x9;&#x9;,(&#x9;7.2, bestPracticesVersionCurrent, &apos;update&apos;, null, null, null,
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation/constants&apos;,&apos;PROCEDURE&apos;)],
&#x9;&#x9;&#x9;VECTOR[&#x9;--updateAction,&#x9;occur,numLines,&#x9;keyTextVerify,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;searchText,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;replaceText
&#x9;&#x9;&#x9;&#x9;&#x9; (&apos;replace&apos;,&#x9;&#x9;0,&#x9;0,&#x9;&#x9;&apos;/shared/PSAssets/BestPractices_v80&apos;,&#x9;&apos;/shared/BestPractices_v72/Procedures/defaultValues&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;bestPracticesRootPath||&apos;/&quot;_ProjectMaintenance&quot;/defaultValues&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9;,(&apos;replace&apos;,&#x9;&#x9;0,&#x9;0,&#x9;&#x9;utilitiesRootPath,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;/shared/Utilities&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;utilitiesRootPath)
&#x9;&#x9;&#x9;&#x9;&#x9;,(&apos;replace&apos;,&#x9;&#x9;0,&#x9;0,&#x9;&#x9;utilitiesRootPath,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;/shared/PSAssets/Utilities&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;utilitiesRootPath)
&#x9;&#x9;&#x9;&#x9;&#x9;])

&#x9;&#x9;-- 7. UpdateTrigger PROJECT_PATH/_scripts/Documentation
&#x9;&#x9;,(&#x9;7.2, bestPracticesVersionCurrent, &apos;updateTrigger&apos;, null, null, null,
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation&apos;,&apos;CONTAINER&apos;)],
&#x9;&#x9;&#x9;VECTOR[&#x9;--updateAction,&#x9;occur,numLines,&#x9;keyTextVerify,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;searchText,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;replaceText
&#x9;&#x9;&#x9;&#x9;&#x9; (&apos;fixParam&apos;,&#x9;&#x9;0,&#x9;0,&#x9;&#x9;&apos;&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;&apos;) -- fix the single quote pairs
&#x9;&#x9;&#x9;&#x9;&#x9;,(&apos;replacePath&apos;,&#x9;0,&#x9;0,&#x9;&#x9;utilitiesRootPath,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;/shared/Utilities&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;utilitiesRootPath)
&#x9;&#x9;&#x9;&#x9;&#x9;,(&apos;replacePath&apos;,&#x9;0,&#x9;0,&#x9;&#x9;utilitiesRootPath,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;/shared/PSAssets/Utilities&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;utilitiesRootPath)
--&#x9;&#x9;&#x9;&#x9;&#x9;,(&apos;replaceParam&apos;,&#x9;0,&#x9;0,&#x9;&#x9;&apos;$PROJECT_PATH_DST&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&apos;$PROJECT_PATH_DST&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;$PROJECT_PATH_DST&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9;])

&#x9;&#x9;-- 8. Configure starting Folders PROJECT_PATH/_scripts/Configure
&#x9;&#x9;,(&#x9;7.2, bestPracticesVersionCurrent, &apos;configFolders&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 9. Rebind all resources starting at PROJECT_PATH/_scripts from New Utilities path (/shared/BestPractices_v72) to Best practices Current (/shared/PSAssets/BestPractices_v80)
&#x9;&#x9;,(&#x9;7.2, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$SCRIPTS_PATH_DST&apos;, &apos;CONTAINER&apos;, &#x9;&#x9;VECTOR[(&apos;/shared/BestPractices_v72&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 10. Rebind all resources starting at PROJECT_PATH/Application from New Utilities path (/shared/BestPractices_v72) to Best practices Current (/shared/PSAssets/BestPractices_v80)
&#x9;&#x9;,(&#x9;7.2, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Application&apos;, &apos;CONTAINER&apos;, &#x9;VECTOR[(&apos;/shared/BestPractices_v72&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 11. Rebind all resources starting at PROJECT_PATH/Business from New Utilities path (/shared/BestPractices_v72) to Best practices Current (/shared/PSAssets/BestPractices_v80)
&#x9;&#x9;,(&#x9;7.2, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Business&apos;, &apos;CONTAINER&apos;, &#x9;&#x9;VECTOR[(&apos;/shared/BestPractices_v72&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 12. Rebind all resources starting at PROJECT_PATH/Physical from New Utilities path (/shared/BestPractices_v72) to Best practices Current (/shared/PSAssets/BestPractices_v80)
&#x9;&#x9;,(&#x9;7.2, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Physical&apos;, &apos;CONTAINER&apos;, &#x9;&#x9;VECTOR[(&apos;/shared/BestPractices_v72&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 13. Update CRUD procedures within the destination project path
&#x9;&#x9;,(&#x9;7.2, bestPracticesVersionCurrent, &apos;updateCrud&apos;, null, null, null, VECTOR[(&apos;$PROJECT_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)


/********************************************************
 * Actions to upgrade 7.3 to Current: 
   Note: The actions below are the minimum requirments for upgrading a project.
 ********************************************************/
/* NOTE: THIS SECTION IS USED TO AN UPGRADE IN PLACE FROM 7.3 to Current.  It makes one copy of the entire _scripts folder. */
&#x9;&#x9;-- 1. Make a copy of $SCRIPTS_PATH_DST
&#x9;&#x9;,(&#x9;7.3, bestPracticesVersionCurrent, &apos;copyLeave&apos;, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null, null)

&#x9;&#x9;-- 2. Copy DataAbstraction_GENERIC_Template/_scripts/Constants to $SCRIPTS_PATH_DST/Constants
&#x9;&#x9;,(&#x9;7.3, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Constants&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Constants&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 3. Copy DataAbstraction_GENERIC_Template/_scripts/Display to $SCRIPTS_PATH_DST/Display
&#x9;&#x9;,(&#x9;7.3, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Display&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Display&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 4. Copy DataAbstraction_GENERIC_Template/_scripts/Generate to $SCRIPTS_PATH_DST/Generate
&#x9;&#x9;,(&#x9;7.3, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Generate&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Generate&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 5. Update PROJECT_PATH/_scripts/Constants/defaultValues
&#x9;&#x9;,(&#x9;7.3, bestPracticesVersionCurrent, &apos;update&apos;, null, null, null,
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Constants/defaultValues&apos;,&apos;PROCEDURE&apos;)],
&#x9;&#x9;&#x9;VECTOR[&#x9;--updateAction,&#x9;occur,numLines,&#x9;keyTextVerify,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;searchText,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;replaceText
&#x9;&#x9;&#x9;&#x9;&#x9;  (&apos;replace&apos;,&#x9;&#x9;1,&#x9;0,&#x9;&#x9;&apos;/services/databases/$PROJECT_NAME_RESERVED&apos;,&apos;/services/databases/DataAbstraction_GENERIC_Template&apos;,&#x9;&#x9;&#x9;&apos;/services/databases/$PROJECT_NAME_RESERVED&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9; ,(&apos;replace&apos;,&#x9;&#x9;1,&#x9;0,&#x9;&#x9;&apos;$PROJECT_PATH_DST_RESERVED&apos;,&#x9;&#x9;&#x9;&#x9;bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template&apos;,&#x9;&#x9;&#x9;&apos;$PROJECT_PATH_DST_RESERVED&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9; ,(&apos;replace&apos;,&#x9;&#x9;1,&#x9;0,&#x9;&#x9;&apos;$SCRIPTS_PATH_DST_DERIVED&apos;,&#x9;&#x9;&#x9;&#x9;&apos;/&quot;_scripts&quot;&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;$SCRIPTS_PATH_DST_DERIVED&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9;])

&#x9;&#x9;-- 6. Update PROJECT_PATH/_scripts/Documentation/constants
&#x9;&#x9;,(&#x9;7.3, bestPracticesVersionCurrent, &apos;update&apos;, null, null, null,
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation/constants&apos;,&apos;PROCEDURE&apos;)],
&#x9;&#x9;&#x9;VECTOR[&#x9;--updateAction,&#x9;occur,numLines,&#x9;keyTextVerify,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;searchText,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;replaceText
&#x9;&#x9;&#x9;&#x9;&#x9; (&apos;replace&apos;,&#x9;&#x9;0,&#x9;0,&#x9;&#x9;bestPracticesRootPath,&#x9;&#x9;&#x9;&#x9;&#x9;&apos;/shared/Utilities/BestPractices_v73&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;bestPracticesRootPath) --&apos;/shared/PSAssets/BestPractices_v80&apos;
&#x9;&#x9;&#x9;&#x9;&#x9;,(&apos;replace&apos;,&#x9;&#x9;0,&#x9;0,&#x9;&#x9;bestPracticesRootPath,&#x9;&#x9;&#x9;&#x9;&#x9;&apos;/shared/PSAssets/Utilities/BestPractices_v73&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;bestPracticesRootPath)
&#x9;&#x9;&#x9;&#x9;&#x9;,(&apos;replace&apos;,&#x9;&#x9;0,&#x9;0,&#x9;&#x9;utilitiesRootPath,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;/shared/Utilities&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;utilitiesRootPath)
&#x9;&#x9;&#x9;&#x9;&#x9;,(&apos;replace&apos;,&#x9;&#x9;0,&#x9;0,&#x9;&#x9;utilitiesRootPath,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;/shared/PSAssets/Utilities&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;utilitiesRootPath)
&#x9;&#x9;&#x9;&#x9;&#x9;])

&#x9;&#x9;-- 7. UpdateTrigger PROJECT_PATH/_scripts/Documentation
&#x9;&#x9;,(&#x9;7.3, bestPracticesVersionCurrent, &apos;updateTrigger&apos;, null, null, null,
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation&apos;,&apos;CONTAINER&apos;)],
&#x9;&#x9;&#x9;VECTOR[&#x9;--updateAction,&#x9;occur,numLines,&#x9;keyTextVerify,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;searchText,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;replaceText
&#x9;&#x9;&#x9;&#x9;&#x9; (&apos;fixParam&apos;,&#x9;&#x9;0,&#x9;0,&#x9;&#x9;&apos;&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;&apos;) -- fix the single quote pairs
&#x9;&#x9;&#x9;&#x9;&#x9;,(&apos;replacePath&apos;,&#x9;0,&#x9;0,&#x9;&#x9;utilitiesRootPath,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;/shared/Utilities&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;utilitiesRootPath)
&#x9;&#x9;&#x9;&#x9;&#x9;,(&apos;replacePath&apos;,&#x9;0,&#x9;0,&#x9;&#x9;utilitiesRootPath,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;/shared/PSAssets/Utilities&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;utilitiesRootPath)
--&#x9;&#x9;&#x9;&#x9;&#x9;,(&apos;replaceParam&apos;,&#x9;0,&#x9;0,&#x9;&#x9;&apos;$PROJECT_PATH_DST&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&apos;$PROJECT_PATH_DST&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;$PROJECT_PATH_DST&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9;])

&#x9;&#x9;-- 8. Configure starting Folders PROJECT_PATH/_scripts/Configure
&#x9;&#x9;,(&#x9;7.3, bestPracticesVersionCurrent, &apos;configFolders&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 9. Rebind all resources starting at PROJECT_PATH/_scripts from Previous Utilities path (/shared/Utilities/BestPractices_v73) to Best practices Current (/shared/PSAssets/BestPractices_v80)
&#x9;&#x9;,(&#x9;7.3, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$SCRIPTS_PATH_DST&apos;, &apos;CONTAINER&apos;, &#x9;&#x9;VECTOR[(&apos;/shared/Utilities/BestPractices_v73&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 10. Rebind all resources starting at PROJECT_PATH/_scripts from New Utilities path (/shared/PSAssets/Utilities/BestPractices_v73) to Best practices Current (/shared/PSAssets/BestPractices_v80)
&#x9;&#x9;,(&#x9;7.3, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$SCRIPTS_PATH_DST&apos;, &apos;CONTAINER&apos;, &#x9;&#x9;VECTOR[(&apos;/shared/PSAssets/BestPractices_v73&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 11. Rebind all resources starting at PROJECT_PATH/Application from Previous Utilities path (/shared/Utilities/BestPractices_v73) to Best practices Current (/shared/PSAssets/BestPractices_v80)
&#x9;&#x9;,(&#x9;7.3, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Application&apos;, &apos;CONTAINER&apos;, &#x9;VECTOR[(&apos;/shared/Utilities/BestPractices_v73&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 12. Rebind all resources starting at PROJECT_PATH/Application from New Utilities path (/shared/PSAssets/Utilities/BestPractices_v73) to Best practices Current (/shared/PSAssets/BestPractices_v80)
&#x9;&#x9;,(&#x9;7.3, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Application&apos;, &apos;CONTAINER&apos;, &#x9;VECTOR[(&apos;/shared/PSAssets/BestPractices_v73&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 13. Rebind all resources starting at PROJECT_PATH/Business from Previous Utilities path (/shared/Utilities/BestPractices_v73) to Best practices Current (/shared/PSAssets/BestPractices_v80)
&#x9;&#x9;,(&#x9;7.3, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Business&apos;, &apos;CONTAINER&apos;, &#x9;&#x9;VECTOR[(&apos;/shared/Utilities/BestPractices_v73&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 14. Rebind all resources starting at PROJECT_PATH/Business from New Utilities path (/shared/PSAssets/Utilities/BestPractices_v73) to Best practices Current (/shared/PSAssets/BestPractices_v80)
&#x9;&#x9;,(&#x9;7.3, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Business&apos;, &apos;CONTAINER&apos;, &#x9;&#x9;VECTOR[(&apos;/shared/PSAssets/BestPractices_v73&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 15. Rebind all resources starting at PROJECT_PATH/Physical from Previous Utilities path (/shared/Utilities/BestPractices_v73) to Best practices Current (/shared/PSAssets/BestPractices_v80)
&#x9;&#x9;,(&#x9;7.3, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Physical&apos;, &apos;CONTAINER&apos;, &#x9;&#x9;VECTOR[(&apos;/shared/Utilities/BestPractices_v73&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 16. Rebind all resources starting at PROJECT_PATH/Physical from New Utilities path (/shared/PSAssets/Utilities/BestPractices_v73) to Best practices Current (/shared/PSAssets/BestPractices_v80)
&#x9;&#x9;,(&#x9;7.3, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Physical&apos;, &apos;CONTAINER&apos;, &#x9;&#x9;VECTOR[(&apos;/shared/PSAssets/BestPractices_v73&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 17. Update CRUD procedures within the destination project path
&#x9;&#x9;,(&#x9;7.3, bestPracticesVersionCurrent, &apos;updateCrud&apos;, null, null, null, VECTOR[(&apos;$PROJECT_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

/********************************************************
 * Actions to upgrade 8.0 to Current: 
 ********************************************************/
/* NOTE: THIS SECTION IS USED TO AN UPGRADE IN PLACE FROM 8.0 to Current.  It makes one copy of the entire _scripts folder. */
&#x9;&#x9;-- 1. Make a copy of $SCRIPTS_PATH_DST
&#x9;&#x9;,(&#x9;8.0, bestPracticesVersionCurrent, &apos;copyLeave&apos;, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null, null)

&#x9;&#x9;-- 2. Copy DataAbstraction_GENERIC_Template/_scripts/_Custom to $SCRIPTS_PATH_DST/_Custom
&#x9;&#x9;,(&#x9;8.0, bestPracticesVersionCurrent, &apos;copyNotExist&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/_Custom&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/_Custom&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 3. Copy DataAbstraction_GENERIC_Template/_scripts/Configure to $SCRIPTS_PATH_DST/Configure
&#x9;&#x9;,(&#x9;8.0, bestPracticesVersionCurrent, &apos;copyNotExist&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Configure&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Configure&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 4. Copy DataAbstraction_GENERIC_Template/_scripts/Configure/ConfigureParams to $SCRIPTS_PATH_DST/Configure/ConfigureParams
&#x9;&#x9;,(&#x9;8.0, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Configure/ConfigureParams&apos;,&apos;PROCEDURE&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Configure&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 5. Copy DataAbstraction_GENERIC_Template/_scripts/Constants to $SCRIPTS_PATH_DST/Constants
&#x9;&#x9;,(&#x9;8.0, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Constants&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Constants&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 6. Copy DataAbstraction_GENERIC_Template/_scripts/Display to $SCRIPTS_PATH_DST/Display
&#x9;&#x9;,(&#x9;8.0, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Display&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Display&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 7. Copy DataAbstraction_GENERIC_Template/_scripts/Constants to $SCRIPTS_PATH_DST/Documentation
&#x9;&#x9;,(&#x9;8.0, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Documentation&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 8. Copy DataAbstraction_GENERIC_Template/_scripts/Generate to $SCRIPTS_PATH_DST/Generate
&#x9;&#x9;,(&#x9;8.0, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Generate&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Generate&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 9. Copy DataAbstraction_GENERIC_Template/_scripts/Rebind to $SCRIPTS_PATH_DST/Rebind
&#x9;&#x9;,(&#x9;8.0, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Rebind&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Rebind&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 10. Update PROJECT_PATH/_scripts/Constants/defaultValues
&#x9;&#x9;,(&#x9;8.0, bestPracticesVersionCurrent, &apos;update&apos;, null, null, null,
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Constants/defaultValues&apos;,&apos;PROCEDURE&apos;)],
&#x9;&#x9;&#x9;VECTOR[&#x9;--updateAction,&#x9;occur,numLines,&#x9;keyTextVerify,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;searchText,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;replaceText
&#x9;&#x9;&#x9;&#x9;&#x9;  (&apos;modifyConstant&apos;,1,&#x9;0,&#x9;&#x9;&apos;bestPracticesVersion&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;bestPracticesVersion&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CAST(bestPracticesVersionCurrent AS VARCHAR))
&#x9;&#x9;&#x9;&#x9;&#x9; ,(&apos;replace&apos;,&#x9;&#x9;0,&#x9;0,&#x9;&#x9;&apos;VARCHAR(4000)&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;VARCHAR(1024)&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;VARCHAR(4000)&apos;) 
&#x9;&#x9;&#x9;&#x9;&#x9; ,(&apos;replace&apos;,&#x9;&#x9;1,&#x9;0,&#x9;&#x9;&apos;/services/databases/$PROJECT_NAME_RESERVED&apos;,&apos;/services/databases/DataAbstraction_GENERIC_Template&apos;,&#x9;&#x9;&#x9;&apos;/services/databases/$PROJECT_NAME_RESERVED&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9; ,(&apos;replace&apos;,&#x9;&#x9;1,&#x9;0,&#x9;&#x9;&apos;$PROJECT_PATH_DST_RESERVED&apos;,&#x9;&#x9;&#x9;&#x9;bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template&apos;,&#x9;&#x9;&#x9;&apos;$PROJECT_PATH_DST_RESERVED&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9; ,(&apos;replace&apos;,&#x9;&#x9;1,&#x9;0,&#x9;&#x9;&apos;$SCRIPTS_PATH_DST_DERIVED&apos;,&#x9;&#x9;&#x9;&#x9;&apos;/&quot;_scripts&quot;&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;$SCRIPTS_PATH_DST_DERIVED&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9;])

&#x9;&#x9;-- 11. Update PROJECT_PATH/_scripts/Documentation/constants
&#x9;&#x9;,(&#x9;8.0, bestPracticesVersionCurrent, &apos;update&apos;, null, null, null,
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation/constants&apos;,&apos;PROCEDURE&apos;)],
&#x9;&#x9;&#x9;VECTOR[&#x9;--updateAction,&#x9;occur,numLines,&#x9;keyTextVerify,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;searchText,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;replaceText
&#x9;&#x9;&#x9;&#x9;&#x9; (&apos;replace&apos;,&#x9;&#x9;0,&#x9;0,&#x9;&#x9;&apos;$SCRIPTS_PATH_DST_RESERVED&apos;,&#x9;&#x9;&#x9;bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/&quot;_scripts&quot;&apos;,&#x9;&apos;$SCRIPTS_PATH_DST_RESERVED&apos;) 
&#x9;&#x9;&#x9;&#x9;&#x9;])

&#x9;&#x9;-- 12. UpdateTrigger PROJECT_PATH/_scripts/Documentation
&#x9;&#x9;,(&#x9;8.0, bestPracticesVersionCurrent, &apos;updateTrigger&apos;, null, null, null,
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation&apos;,&apos;CONTAINER&apos;)],
&#x9;&#x9;&#x9;VECTOR[&#x9;--updateAction,&#x9;occur,numLines,&#x9;keyTextVerify,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;searchText,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;replaceText
&#x9;&#x9;&#x9;&#x9;&#x9; (&apos;restoreParam&apos;,&#x9;0,&#x9;0,&#x9;&#x9;&apos;&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;$SCRIPTS_PATH_DST&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9;,(&apos;fixParam&apos;,&#x9;&#x9;0,&#x9;0,&#x9;&#x9;&apos;&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9;])

&#x9;&#x9;-- 13. Restore default values from original at PROJECT_PATH/Constants/defaultValues
&#x9;&#x9;,(&#x9;8.0, bestPracticesVersionCurrent, &apos;restoreDefaultValues&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 14. Restore documentation constants from original at PROJECT_PATH/Documentation/constants
&#x9;&#x9;,(&#x9;8.0, bestPracticesVersionCurrent, &apos;restoreDocConstants&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 15. Configure starting Folders PROJECT_PATH/_scripts/Configure
&#x9;&#x9;,(&#x9;8.0, bestPracticesVersionCurrent, &apos;configFolders&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 16. Rebind all resources starting at PROJECT_PATH/_scripts from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
&#x9;&#x9;,(&#x9;8.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$SCRIPTS_PATH_DST&apos;, &apos;CONTAINER&apos;, &#x9;&#x9;VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 17. Rebind all resources starting at PROJECT_PATH/Application from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
&#x9;&#x9;,(&#x9;8.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Application&apos;, &apos;CONTAINER&apos;, &#x9;VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 18. Rebind all resources starting at PROJECT_PATH/Business from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
&#x9;&#x9;,(&#x9;8.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Business&apos;, &apos;CONTAINER&apos;, &#x9;&#x9;VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 19. Rebind all resources starting at PROJECT_PATH/Physical from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
&#x9;&#x9;,(&#x9;8.0, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Physical&apos;, &apos;CONTAINER&apos;, &#x9;&#x9;VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 20. Update CRUD procedures within the destination project path
&#x9;&#x9;,(&#x9;8.0, bestPracticesVersionCurrent, &apos;updateCrud&apos;, null, null, null, VECTOR[(&apos;$PROJECT_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

/********************************************************
 * Actions to upgrade 8.1 to Current: 
 ********************************************************/
/* NOTE: THIS SECTION IS USED TO AN UPGRADE IN PLACE FROM 8.1 to Current.  It makes one copy of the entire _scripts folder. */
&#x9;&#x9;-- 1. Make a copy of $SCRIPTS_PATH_DST
&#x9;&#x9;,(&#x9;8.1, bestPracticesVersionCurrent, &apos;copyLeave&apos;, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null, null)

&#x9;&#x9;-- 2. Copy DataAbstraction_GENERIC_Template/_scripts/_Custom to $SCRIPTS_PATH_DST/_Custom
&#x9;&#x9;,(&#x9;8.1, bestPracticesVersionCurrent, &apos;copyNotExist&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/_Custom&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/_Custom&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 3. Copy DataAbstraction_GENERIC_Template/_scripts/Configure to $SCRIPTS_PATH_DST/Configure
&#x9;&#x9;,(&#x9;8.1, bestPracticesVersionCurrent, &apos;copyNotExist&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Configure&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Configure&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 4. Copy DataAbstraction_GENERIC_Template/_scripts/Configure/ConfigureParams to $SCRIPTS_PATH_DST/Configure/ConfigureParams
&#x9;&#x9;,(&#x9;8.1, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Configure/ConfigureParams&apos;,&apos;PROCEDURE&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Configure&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 5. Copy DataAbstraction_GENERIC_Template/_scripts/Constants to $SCRIPTS_PATH_DST/Constants
&#x9;&#x9;,(&#x9;8.1, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Constants&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Constants&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 6. Copy DataAbstraction_GENERIC_Template/_scripts/Display to $SCRIPTS_PATH_DST/Display
&#x9;&#x9;,(&#x9;8.1, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Display&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Display&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 7. Copy DataAbstraction_GENERIC_Template/_scripts/Constants to $SCRIPTS_PATH_DST/Documentation
&#x9;&#x9;,(&#x9;8.1, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Documentation&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 8. Copy DataAbstraction_GENERIC_Template/_scripts/Generate to $SCRIPTS_PATH_DST/Generate
&#x9;&#x9;,(&#x9;8.1, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Generate&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Generate&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 9. Copy DataAbstraction_GENERIC_Template/_scripts/Rebind to $SCRIPTS_PATH_DST/Rebind
&#x9;&#x9;,(&#x9;8.1, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Rebind&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Rebind&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 10. Update PROJECT_PATH/_scripts/Constants/defaultValues
&#x9;&#x9;,(&#x9;8.1, bestPracticesVersionCurrent, &apos;update&apos;, null, null, null,
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Constants/defaultValues&apos;,&apos;PROCEDURE&apos;)],
&#x9;&#x9;&#x9;VECTOR[&#x9;--updateAction,&#x9;occur,numLines,&#x9;keyTextVerify,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;searchText,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;replaceText
&#x9;&#x9;&#x9;&#x9;&#x9;  (&apos;modifyConstant&apos;,1,&#x9;0,&#x9;&#x9;&apos;bestPracticesVersion&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;bestPracticesVersion&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CAST(bestPracticesVersionCurrent AS VARCHAR))
&#x9;&#x9;&#x9;&#x9;&#x9; ,(&apos;replace&apos;,&#x9;&#x9;0,&#x9;0,&#x9;&#x9;&apos;VARCHAR(4000)&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;VARCHAR(1024)&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;VARCHAR(4000)&apos;) 
&#x9;&#x9;&#x9;&#x9;&#x9; ,(&apos;replace&apos;,&#x9;&#x9;1,&#x9;0,&#x9;&#x9;&apos;/services/databases/$PROJECT_NAME_RESERVED&apos;,&apos;/services/databases/DataAbstraction_GENERIC_Template&apos;,&#x9;&#x9;&#x9;&apos;/services/databases/$PROJECT_NAME_RESERVED&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9; ,(&apos;replace&apos;,&#x9;&#x9;1,&#x9;0,&#x9;&#x9;&apos;$PROJECT_PATH_DST_RESERVED&apos;,&#x9;&#x9;&#x9;&#x9;bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template&apos;,&#x9;&#x9;&#x9;&apos;$PROJECT_PATH_DST_RESERVED&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9; ,(&apos;replace&apos;,&#x9;&#x9;1,&#x9;0,&#x9;&#x9;&apos;$SCRIPTS_PATH_DST_DERIVED&apos;,&#x9;&#x9;&#x9;&#x9;&apos;/&quot;_scripts&quot;&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;$SCRIPTS_PATH_DST_DERIVED&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9;])

&#x9;&#x9;-- 11. Update PROJECT_PATH/_scripts/Documentation/constants
&#x9;&#x9;,(&#x9;8.1, bestPracticesVersionCurrent, &apos;update&apos;, null, null, null,
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation/constants&apos;,&apos;PROCEDURE&apos;)],
&#x9;&#x9;&#x9;VECTOR[&#x9;--updateAction,&#x9;occur,numLines,&#x9;keyTextVerify,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;searchText,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;replaceText
&#x9;&#x9;&#x9;&#x9;&#x9; (&apos;replace&apos;,&#x9;&#x9;0,&#x9;0,&#x9;&#x9;&apos;$SCRIPTS_PATH_DST_RESERVED&apos;,&#x9;&#x9;&#x9;bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/&quot;_scripts&quot;&apos;,&#x9;&apos;$SCRIPTS_PATH_DST_RESERVED&apos;) 
&#x9;&#x9;&#x9;&#x9;&#x9;])

&#x9;&#x9;-- 12. UpdateTrigger PROJECT_PATH/_scripts/Documentation
&#x9;&#x9;,(&#x9;8.1, bestPracticesVersionCurrent, &apos;updateTrigger&apos;, null, null, null,
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation&apos;,&apos;CONTAINER&apos;)],
&#x9;&#x9;&#x9;VECTOR[&#x9;--updateAction,&#x9;occur,numLines,&#x9;keyTextVerify,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;searchText,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;replaceText
&#x9;&#x9;&#x9;&#x9;&#x9; (&apos;restoreParam&apos;,&#x9;0,&#x9;0,&#x9;&#x9;&apos;&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;$SCRIPTS_PATH_DST&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9;,(&apos;fixParam&apos;,&#x9;&#x9;0,&#x9;0,&#x9;&#x9;&apos;&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9;])

&#x9;&#x9;-- 13. Restore default values from original at PROJECT_PATH/Constants/defaultValues
&#x9;&#x9;,(&#x9;8.1, bestPracticesVersionCurrent, &apos;restoreDefaultValues&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 14. Restore documentation constants from original at PROJECT_PATH/Documentation/constants
&#x9;&#x9;,(&#x9;8.1, bestPracticesVersionCurrent, &apos;restoreDocConstants&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 15. Configure starting Folders PROJECT_PATH/_scripts/Configure
&#x9;&#x9;,(&#x9;8.1, bestPracticesVersionCurrent, &apos;configFolders&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 16. Rebind all resources starting at PROJECT_PATH/_scripts from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
&#x9;&#x9;,(&#x9;8.1, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$SCRIPTS_PATH_DST&apos;, &apos;CONTAINER&apos;, &#x9;&#x9;VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 17. Rebind all resources starting at PROJECT_PATH/Application from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
&#x9;&#x9;,(&#x9;8.1, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Application&apos;, &apos;CONTAINER&apos;, &#x9;VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 18. Rebind all resources starting at PROJECT_PATH/Business from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
&#x9;&#x9;,(&#x9;8.1, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Business&apos;, &apos;CONTAINER&apos;, &#x9;&#x9;VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 19. Rebind all resources starting at PROJECT_PATH/Physical from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
&#x9;&#x9;,(&#x9;8.1, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Physical&apos;, &apos;CONTAINER&apos;, &#x9;&#x9;VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 20. Update CRUD procedures within the destination project path
&#x9;&#x9;,(&#x9;8.1, bestPracticesVersionCurrent, &apos;updateCrud&apos;, null, null, null, VECTOR[(&apos;$PROJECT_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)


/********************************************************
 * Actions to upgrade 8.13 to Current: 
 ********************************************************/
/* NOTE: THIS SECTION IS USED TO AN UPGRADE IN PLACE FROM 8.1 to Current.  It makes one copy of the entire _scripts folder. */
&#x9;&#x9;-- 1. Make a copy of $SCRIPTS_PATH_DST
&#x9;&#x9;,(&#x9;8.13, bestPracticesVersionCurrent, &apos;copyLeave&apos;, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null, null)

&#x9;&#x9;-- 2. Copy DataAbstraction_GENERIC_Template/_scripts/_Custom to $SCRIPTS_PATH_DST/_Custom
&#x9;&#x9;,(&#x9;8.13, bestPracticesVersionCurrent, &apos;copyNotExist&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/_Custom&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/_Custom&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 3. Copy DataAbstraction_GENERIC_Template/_scripts/Configure to $SCRIPTS_PATH_DST/Configure
&#x9;&#x9;,(&#x9;8.13, bestPracticesVersionCurrent, &apos;copyNotExist&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Configure&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Configure&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 4. Copy DataAbstraction_GENERIC_Template/_scripts/Configure/ConfigureParams to $SCRIPTS_PATH_DST/Configure/ConfigureParams
&#x9;&#x9;,(&#x9;8.13, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Configure/ConfigureParams&apos;,&apos;PROCEDURE&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Configure&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 5. Copy DataAbstraction_GENERIC_Template/_scripts/Constants to $SCRIPTS_PATH_DST/Constants
&#x9;&#x9;,(&#x9;8.13, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Constants&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Constants&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 6. Copy DataAbstraction_GENERIC_Template/_scripts/Display to $SCRIPTS_PATH_DST/Display
&#x9;&#x9;,(&#x9;8.13, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Display&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Display&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 7. Copy DataAbstraction_GENERIC_Template/_scripts/Constants to $SCRIPTS_PATH_DST/Documentation
&#x9;&#x9;,(&#x9;8.13, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Documentation&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 8. Copy DataAbstraction_GENERIC_Template/_scripts/Generate to $SCRIPTS_PATH_DST/Generate
&#x9;&#x9;,(&#x9;8.13, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Generate&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Generate&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 9. Copy DataAbstraction_GENERIC_Template/_scripts/Rebind to $SCRIPTS_PATH_DST/Rebind
&#x9;&#x9;,(&#x9;8.13, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Rebind&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Rebind&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 10. Update PROJECT_PATH/_scripts/Constants/defaultValues
&#x9;&#x9;,(&#x9;8.13, bestPracticesVersionCurrent, &apos;update&apos;, null, null, null,
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Constants/defaultValues&apos;,&apos;PROCEDURE&apos;)],
&#x9;&#x9;&#x9;VECTOR[&#x9;--updateAction,&#x9;occur,numLines,&#x9;keyTextVerify,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;searchText,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;replaceText
&#x9;&#x9;&#x9;&#x9;&#x9;  (&apos;modifyConstant&apos;,1,&#x9;0,&#x9;&#x9;&apos;bestPracticesVersion&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;bestPracticesVersion&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CAST(bestPracticesVersionCurrent AS VARCHAR))
&#x9;&#x9;&#x9;&#x9;&#x9; ,(&apos;replace&apos;,&#x9;&#x9;0,&#x9;0,&#x9;&#x9;&apos;VARCHAR(4000)&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;VARCHAR(1024)&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;VARCHAR(4000)&apos;) 
&#x9;&#x9;&#x9;&#x9;&#x9; ,(&apos;replace&apos;,&#x9;&#x9;1,&#x9;0,&#x9;&#x9;&apos;/services/databases/$PROJECT_NAME_RESERVED&apos;,&apos;/services/databases/DataAbstraction_GENERIC_Template&apos;,&#x9;&#x9;&#x9;&apos;/services/databases/$PROJECT_NAME_RESERVED&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9; ,(&apos;replace&apos;,&#x9;&#x9;1,&#x9;0,&#x9;&#x9;&apos;$PROJECT_PATH_DST_RESERVED&apos;,&#x9;&#x9;&#x9;&#x9;bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template&apos;,&#x9;&#x9;&#x9;&apos;$PROJECT_PATH_DST_RESERVED&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9; ,(&apos;replace&apos;,&#x9;&#x9;1,&#x9;0,&#x9;&#x9;&apos;$SCRIPTS_PATH_DST_DERIVED&apos;,&#x9;&#x9;&#x9;&#x9;&apos;/&quot;_scripts&quot;&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;$SCRIPTS_PATH_DST_DERIVED&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9;])

&#x9;&#x9;-- 11. Update PROJECT_PATH/_scripts/Documentation/constants
&#x9;&#x9;,(&#x9;8.13, bestPracticesVersionCurrent, &apos;update&apos;, null, null, null,
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation/constants&apos;,&apos;PROCEDURE&apos;)],
&#x9;&#x9;&#x9;VECTOR[&#x9;--updateAction,&#x9;occur,numLines,&#x9;keyTextVerify,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;searchText,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;replaceText
&#x9;&#x9;&#x9;&#x9;&#x9; (&apos;replace&apos;,&#x9;&#x9;0,&#x9;0,&#x9;&#x9;&apos;$SCRIPTS_PATH_DST_RESERVED&apos;,&#x9;&#x9;&#x9;bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/&quot;_scripts&quot;&apos;,&#x9;&apos;$SCRIPTS_PATH_DST_RESERVED&apos;) 
&#x9;&#x9;&#x9;&#x9;&#x9;])

&#x9;&#x9;-- 12. UpdateTrigger PROJECT_PATH/_scripts/Documentation
&#x9;&#x9;,(&#x9;8.13, bestPracticesVersionCurrent, &apos;updateTrigger&apos;, null, null, null,
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation&apos;,&apos;CONTAINER&apos;)],
&#x9;&#x9;&#x9;VECTOR[&#x9;--updateAction,&#x9;occur,numLines,&#x9;keyTextVerify,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;searchText,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;replaceText
&#x9;&#x9;&#x9;&#x9;&#x9; (&apos;restoreParam&apos;,&#x9;0,&#x9;0,&#x9;&#x9;&apos;&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;$SCRIPTS_PATH_DST&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9;,(&apos;fixParam&apos;,&#x9;&#x9;0,&#x9;0,&#x9;&#x9;&apos;&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9;])

&#x9;&#x9;-- 13. Restore default values from original at PROJECT_PATH/Constants/defaultValues
&#x9;&#x9;,(&#x9;8.13, bestPracticesVersionCurrent, &apos;restoreDefaultValues&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 14. Restore documentation constants from original at PROJECT_PATH/Documentation/constants
&#x9;&#x9;,(&#x9;8.13, bestPracticesVersionCurrent, &apos;restoreDocConstants&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 15. Configure starting Folders PROJECT_PATH/_scripts/Configure
&#x9;&#x9;,(&#x9;8.13, bestPracticesVersionCurrent, &apos;configFolders&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 16. Rebind all resources starting at PROJECT_PATH/_scripts from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
&#x9;&#x9;,(&#x9;8.13, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$SCRIPTS_PATH_DST&apos;, &apos;CONTAINER&apos;, &#x9;&#x9;VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 17. Rebind all resources starting at PROJECT_PATH/Application from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
&#x9;&#x9;,(&#x9;8.13, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Application&apos;, &apos;CONTAINER&apos;, &#x9;VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 18. Rebind all resources starting at PROJECT_PATH/Business from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
&#x9;&#x9;,(&#x9;8.13, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Business&apos;, &apos;CONTAINER&apos;, &#x9;&#x9;VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 19. Rebind all resources starting at PROJECT_PATH/Physical from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
&#x9;&#x9;,(&#x9;8.13, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Physical&apos;, &apos;CONTAINER&apos;, &#x9;&#x9;VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 20. Update CRUD procedures within the destination project path
&#x9;&#x9;,(&#x9;8.13, bestPracticesVersionCurrent, &apos;updateCrud&apos;, null, null, null, VECTOR[(&apos;$PROJECT_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

/********************************************************
 * Actions to upgrade 8.14 to Current: 
 ********************************************************/
/* NOTE: THIS SECTION IS USED TO AN UPGRADE IN PLACE FROM 8.1 to Current.  It makes one copy of the entire _scripts folder. */
&#x9;&#x9;-- 1. Make a copy of $SCRIPTS_PATH_DST
&#x9;&#x9;,(&#x9;8.14, bestPracticesVersionCurrent, &apos;copyLeave&apos;, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null, null)

&#x9;&#x9;-- 2. Copy DataAbstraction_GENERIC_Template/_scripts/_Custom to $SCRIPTS_PATH_DST/_Custom
&#x9;&#x9;,(&#x9;8.14, bestPracticesVersionCurrent, &apos;copyNotExist&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/_Custom&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/_Custom&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 3. Copy DataAbstraction_GENERIC_Template/_scripts/Configure to $SCRIPTS_PATH_DST/Configure
&#x9;&#x9;,(&#x9;8.14, bestPracticesVersionCurrent, &apos;copyNotExist&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Configure&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Configure&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 4. Copy DataAbstraction_GENERIC_Template/_scripts/Configure/ConfigureParams to $SCRIPTS_PATH_DST/Configure/ConfigureParams
&#x9;&#x9;,(&#x9;8.14, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Configure/ConfigureParams&apos;,&apos;PROCEDURE&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Configure&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 5. Copy DataAbstraction_GENERIC_Template/_scripts/Constants to $SCRIPTS_PATH_DST/Constants
&#x9;&#x9;,(&#x9;8.14, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Constants&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Constants&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 6. Copy DataAbstraction_GENERIC_Template/_scripts/Display to $SCRIPTS_PATH_DST/Display
&#x9;&#x9;,(&#x9;8.14, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Display&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Display&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 7. Copy DataAbstraction_GENERIC_Template/_scripts/Constants to $SCRIPTS_PATH_DST/Documentation
&#x9;&#x9;,(&#x9;8.14, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Documentation&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 8. Copy DataAbstraction_GENERIC_Template/_scripts/Generate to $SCRIPTS_PATH_DST/Generate
&#x9;&#x9;,(&#x9;8.14, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Generate&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Generate&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 9. Copy DataAbstraction_GENERIC_Template/_scripts/Rebind to $SCRIPTS_PATH_DST/Rebind
&#x9;&#x9;,(&#x9;8.14, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Rebind&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Rebind&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 10. Update PROJECT_PATH/_scripts/Constants/defaultValues
&#x9;&#x9;,(&#x9;8.14, bestPracticesVersionCurrent, &apos;update&apos;, null, null, null,
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Constants/defaultValues&apos;,&apos;PROCEDURE&apos;)],
&#x9;&#x9;&#x9;VECTOR[&#x9;--updateAction,&#x9;occur,numLines,&#x9;keyTextVerify,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;searchText,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;replaceText
&#x9;&#x9;&#x9;&#x9;&#x9;  (&apos;modifyConstant&apos;,1,&#x9;0,&#x9;&#x9;&apos;bestPracticesVersion&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;bestPracticesVersion&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CAST(bestPracticesVersionCurrent AS VARCHAR))
&#x9;&#x9;&#x9;&#x9;&#x9; ,(&apos;replace&apos;,&#x9;&#x9;0,&#x9;0,&#x9;&#x9;&apos;VARCHAR(4000)&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;VARCHAR(1024)&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;VARCHAR(4000)&apos;) 
&#x9;&#x9;&#x9;&#x9;&#x9; ,(&apos;replace&apos;,&#x9;&#x9;1,&#x9;0,&#x9;&#x9;&apos;/services/databases/$PROJECT_NAME_RESERVED&apos;,&apos;/services/databases/DataAbstraction_GENERIC_Template&apos;,&#x9;&#x9;&#x9;&apos;/services/databases/$PROJECT_NAME_RESERVED&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9; ,(&apos;replace&apos;,&#x9;&#x9;1,&#x9;0,&#x9;&#x9;&apos;$PROJECT_PATH_DST_RESERVED&apos;,&#x9;&#x9;&#x9;&#x9;bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template&apos;,&#x9;&#x9;&#x9;&apos;$PROJECT_PATH_DST_RESERVED&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9; ,(&apos;replace&apos;,&#x9;&#x9;1,&#x9;0,&#x9;&#x9;&apos;$SCRIPTS_PATH_DST_DERIVED&apos;,&#x9;&#x9;&#x9;&#x9;&apos;/&quot;_scripts&quot;&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;$SCRIPTS_PATH_DST_DERIVED&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9;])

&#x9;&#x9;-- 11. Update PROJECT_PATH/_scripts/Documentation/constants
&#x9;&#x9;,(&#x9;8.14, bestPracticesVersionCurrent, &apos;update&apos;, null, null, null,
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation/constants&apos;,&apos;PROCEDURE&apos;)],
&#x9;&#x9;&#x9;VECTOR[&#x9;--updateAction,&#x9;occur,numLines,&#x9;keyTextVerify,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;searchText,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;replaceText
&#x9;&#x9;&#x9;&#x9;&#x9; (&apos;replace&apos;,&#x9;&#x9;0,&#x9;0,&#x9;&#x9;&apos;$SCRIPTS_PATH_DST_RESERVED&apos;,&#x9;&#x9;&#x9;bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/&quot;_scripts&quot;&apos;,&#x9;&apos;$SCRIPTS_PATH_DST_RESERVED&apos;) 
&#x9;&#x9;&#x9;&#x9;&#x9;])

&#x9;&#x9;-- 12. UpdateTrigger PROJECT_PATH/_scripts/Documentation
&#x9;&#x9;,(&#x9;8.14, bestPracticesVersionCurrent, &apos;updateTrigger&apos;, null, null, null,
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation&apos;,&apos;CONTAINER&apos;)],
&#x9;&#x9;&#x9;VECTOR[&#x9;--updateAction,&#x9;occur,numLines,&#x9;keyTextVerify,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;searchText,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;replaceText
&#x9;&#x9;&#x9;&#x9;&#x9; (&apos;restoreParam&apos;,&#x9;0,&#x9;0,&#x9;&#x9;&apos;&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;$SCRIPTS_PATH_DST&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9;,(&apos;fixParam&apos;,&#x9;&#x9;0,&#x9;0,&#x9;&#x9;&apos;&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9;])

&#x9;&#x9;-- 13. Restore default values from original at PROJECT_PATH/Constants/defaultValues
&#x9;&#x9;,(&#x9;8.14, bestPracticesVersionCurrent, &apos;restoreDefaultValues&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 14. Restore documentation constants from original at PROJECT_PATH/Documentation/constants
&#x9;&#x9;,(&#x9;8.14, bestPracticesVersionCurrent, &apos;restoreDocConstants&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 15. Configure starting Folders PROJECT_PATH/_scripts/Configure
&#x9;&#x9;,(&#x9;8.14, bestPracticesVersionCurrent, &apos;configFolders&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 16. Rebind all resources starting at PROJECT_PATH/_scripts from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
&#x9;&#x9;,(&#x9;8.14, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$SCRIPTS_PATH_DST&apos;, &apos;CONTAINER&apos;, &#x9;&#x9;VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 17. Rebind all resources starting at PROJECT_PATH/Application from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
&#x9;&#x9;,(&#x9;8.14, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Application&apos;, &apos;CONTAINER&apos;, &#x9;VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 18. Rebind all resources starting at PROJECT_PATH/Business from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
&#x9;&#x9;,(&#x9;8.14, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Business&apos;, &apos;CONTAINER&apos;, &#x9;&#x9;VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 19. Rebind all resources starting at PROJECT_PATH/Physical from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
&#x9;&#x9;,(&#x9;8.14, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Physical&apos;, &apos;CONTAINER&apos;, &#x9;&#x9;VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 20. Update CRUD procedures within the destination project path
&#x9;&#x9;,(&#x9;8.14, bestPracticesVersionCurrent, &apos;updateCrud&apos;, null, null, null, VECTOR[(&apos;$PROJECT_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

/********************************************************
 * Actions to upgrade 8.15 to Current: 
 ********************************************************/
/* NOTE: THIS SECTION IS USED TO AN UPGRADE IN PLACE FROM 8.1 to Current.  It makes one copy of the entire _scripts folder. */
&#x9;&#x9;-- 1. Make a copy of $SCRIPTS_PATH_DST
&#x9;&#x9;,(&#x9;8.15, bestPracticesVersionCurrent, &apos;copyLeave&apos;, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null, null)

&#x9;&#x9;-- 2. Copy DataAbstraction_GENERIC_Template/_scripts/_Custom to $SCRIPTS_PATH_DST/_Custom
&#x9;&#x9;,(&#x9;8.15, bestPracticesVersionCurrent, &apos;copyNotExist&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/_Custom&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/_Custom&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 3. Copy DataAbstraction_GENERIC_Template/_scripts/Configure to $SCRIPTS_PATH_DST/Configure
&#x9;&#x9;,(&#x9;8.15, bestPracticesVersionCurrent, &apos;copyNotExist&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Configure&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Configure&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 4. Copy DataAbstraction_GENERIC_Template/_scripts/Configure/ConfigureParams to $SCRIPTS_PATH_DST/Configure/ConfigureParams
&#x9;&#x9;,(&#x9;8.15, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Configure/ConfigureParams&apos;,&apos;PROCEDURE&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Configure&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 5. Copy DataAbstraction_GENERIC_Template/_scripts/Constants to $SCRIPTS_PATH_DST/Constants
&#x9;&#x9;,(&#x9;8.15, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Constants&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Constants&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 6. Copy DataAbstraction_GENERIC_Template/_scripts/Display to $SCRIPTS_PATH_DST/Display
&#x9;&#x9;,(&#x9;8.15, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Display&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Display&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 7. Copy DataAbstraction_GENERIC_Template/_scripts/Constants to $SCRIPTS_PATH_DST/Documentation
&#x9;&#x9;,(&#x9;8.15, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Documentation&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 8. Copy DataAbstraction_GENERIC_Template/_scripts/Generate to $SCRIPTS_PATH_DST/Generate
&#x9;&#x9;,(&#x9;8.15, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Generate&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Generate&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 9. Copy DataAbstraction_GENERIC_Template/_scripts/Rebind to $SCRIPTS_PATH_DST/Rebind
&#x9;&#x9;,(&#x9;8.15, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Rebind&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Rebind&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 10. Update PROJECT_PATH/_scripts/Constants/defaultValues
&#x9;&#x9;,(&#x9;8.15, bestPracticesVersionCurrent, &apos;update&apos;, null, null, null,
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Constants/defaultValues&apos;,&apos;PROCEDURE&apos;)],
&#x9;&#x9;&#x9;VECTOR[&#x9;--updateAction,&#x9;occur,numLines,&#x9;keyTextVerify,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;searchText,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;replaceText
&#x9;&#x9;&#x9;&#x9;&#x9;  (&apos;modifyConstant&apos;,1,&#x9;0,&#x9;&#x9;&apos;bestPracticesVersion&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;bestPracticesVersion&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CAST(bestPracticesVersionCurrent AS VARCHAR))
&#x9;&#x9;&#x9;&#x9;&#x9; ,(&apos;replace&apos;,&#x9;&#x9;0,&#x9;0,&#x9;&#x9;&apos;VARCHAR(4000)&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;VARCHAR(1024)&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;VARCHAR(4000)&apos;) 
&#x9;&#x9;&#x9;&#x9;&#x9; ,(&apos;replace&apos;,&#x9;&#x9;1,&#x9;0,&#x9;&#x9;&apos;/services/databases/$PROJECT_NAME_RESERVED&apos;,&apos;/services/databases/DataAbstraction_GENERIC_Template&apos;,&#x9;&#x9;&#x9;&apos;/services/databases/$PROJECT_NAME_RESERVED&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9; ,(&apos;replace&apos;,&#x9;&#x9;1,&#x9;0,&#x9;&#x9;&apos;$PROJECT_PATH_DST_RESERVED&apos;,&#x9;&#x9;&#x9;&#x9;bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template&apos;,&#x9;&#x9;&#x9;&apos;$PROJECT_PATH_DST_RESERVED&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9; ,(&apos;replace&apos;,&#x9;&#x9;1,&#x9;0,&#x9;&#x9;&apos;$SCRIPTS_PATH_DST_DERIVED&apos;,&#x9;&#x9;&#x9;&#x9;&apos;/&quot;_scripts&quot;&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;$SCRIPTS_PATH_DST_DERIVED&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9;])

&#x9;&#x9;-- 11. Update PROJECT_PATH/_scripts/Documentation/constants
&#x9;&#x9;,(&#x9;8.15, bestPracticesVersionCurrent, &apos;update&apos;, null, null, null,
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation/constants&apos;,&apos;PROCEDURE&apos;)],
&#x9;&#x9;&#x9;VECTOR[&#x9;--updateAction,&#x9;occur,numLines,&#x9;keyTextVerify,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;searchText,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;replaceText
&#x9;&#x9;&#x9;&#x9;&#x9; (&apos;replace&apos;,&#x9;&#x9;0,&#x9;0,&#x9;&#x9;&apos;$SCRIPTS_PATH_DST_RESERVED&apos;,&#x9;&#x9;&#x9;bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/&quot;_scripts&quot;&apos;,&#x9;&apos;$SCRIPTS_PATH_DST_RESERVED&apos;) 
&#x9;&#x9;&#x9;&#x9;&#x9;])

&#x9;&#x9;-- 12. UpdateTrigger PROJECT_PATH/_scripts/Documentation
&#x9;&#x9;,(&#x9;8.15, bestPracticesVersionCurrent, &apos;updateTrigger&apos;, null, null, null,
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation&apos;,&apos;CONTAINER&apos;)],
&#x9;&#x9;&#x9;VECTOR[&#x9;--updateAction,&#x9;occur,numLines,&#x9;keyTextVerify,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;searchText,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;replaceText
&#x9;&#x9;&#x9;&#x9;&#x9; (&apos;restoreParam&apos;,&#x9;0,&#x9;0,&#x9;&#x9;&apos;&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;$SCRIPTS_PATH_DST&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9;,(&apos;fixParam&apos;,&#x9;&#x9;0,&#x9;0,&#x9;&#x9;&apos;&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9;])

&#x9;&#x9;-- 13. Restore default values from original at PROJECT_PATH/Constants/defaultValues
&#x9;&#x9;,(&#x9;8.15, bestPracticesVersionCurrent, &apos;restoreDefaultValues&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 14. Restore documentation constants from original at PROJECT_PATH/Documentation/constants
&#x9;&#x9;,(&#x9;8.15, bestPracticesVersionCurrent, &apos;restoreDocConstants&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 15. Configure starting Folders PROJECT_PATH/_scripts/Configure
&#x9;&#x9;,(&#x9;8.15, bestPracticesVersionCurrent, &apos;configFolders&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 16. Rebind all resources starting at PROJECT_PATH/_scripts from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
&#x9;&#x9;,(&#x9;8.15, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$SCRIPTS_PATH_DST&apos;, &apos;CONTAINER&apos;, &#x9;&#x9;VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 17. Rebind all resources starting at PROJECT_PATH/Application from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
&#x9;&#x9;,(&#x9;8.15, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Application&apos;, &apos;CONTAINER&apos;, &#x9;VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 18. Rebind all resources starting at PROJECT_PATH/Business from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
&#x9;&#x9;,(&#x9;8.15, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Business&apos;, &apos;CONTAINER&apos;, &#x9;&#x9;VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 19. Rebind all resources starting at PROJECT_PATH/Physical from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
&#x9;&#x9;,(&#x9;8.15, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Physical&apos;, &apos;CONTAINER&apos;, &#x9;&#x9;VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 20. Update CRUD procedures within the destination project path
&#x9;&#x9;,(&#x9;8.15, bestPracticesVersionCurrent, &apos;updateCrud&apos;, null, null, null, VECTOR[(&apos;$PROJECT_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

/********************************************************
 * Actions to upgrade 8.16 to Current: 
 ********************************************************/
/* NOTE: THIS SECTION IS USED TO AN UPGRADE IN PLACE FROM 8.1 to Current.  It makes one copy of the entire _scripts folder. */
&#x9;&#x9;-- 1. Make a copy of $SCRIPTS_PATH_DST
&#x9;&#x9;,(&#x9;8.16, bestPracticesVersionCurrent, &apos;copyLeave&apos;, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null, null)

&#x9;&#x9;-- 2. Copy DataAbstraction_GENERIC_Template/_scripts/_Custom to $SCRIPTS_PATH_DST/_Custom
&#x9;&#x9;,(&#x9;8.16, bestPracticesVersionCurrent, &apos;copyNotExist&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/_Custom&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/_Custom&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 3. Copy DataAbstraction_GENERIC_Template/_scripts/Configure to $SCRIPTS_PATH_DST/Configure
&#x9;&#x9;,(&#x9;8.16, bestPracticesVersionCurrent, &apos;copyNotExist&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Configure&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Configure&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 4. Copy DataAbstraction_GENERIC_Template/_scripts/Configure/ConfigureParams to $SCRIPTS_PATH_DST/Configure/ConfigureParams
&#x9;&#x9;,(&#x9;8.16, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Configure/ConfigureParams&apos;,&apos;PROCEDURE&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Configure&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 5. Copy DataAbstraction_GENERIC_Template/_scripts/Constants to $SCRIPTS_PATH_DST/Constants
&#x9;&#x9;,(&#x9;8.16, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Constants&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Constants&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 6. Copy DataAbstraction_GENERIC_Template/_scripts/Display to $SCRIPTS_PATH_DST/Display
&#x9;&#x9;,(&#x9;8.16, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Display&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Display&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 7. Copy DataAbstraction_GENERIC_Template/_scripts/Constants to $SCRIPTS_PATH_DST/Documentation
&#x9;&#x9;,(&#x9;8.16, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Documentation&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 8. Copy DataAbstraction_GENERIC_Template/_scripts/Generate to $SCRIPTS_PATH_DST/Generate
&#x9;&#x9;,(&#x9;8.16, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Generate&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Generate&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 9. Copy DataAbstraction_GENERIC_Template/_scripts/Rebind to $SCRIPTS_PATH_DST/Rebind
&#x9;&#x9;,(&#x9;8.16, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Rebind&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Rebind&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 10. Update PROJECT_PATH/_scripts/Constants/defaultValues
&#x9;&#x9;,(&#x9;8.16, bestPracticesVersionCurrent, &apos;update&apos;, null, null, null,
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Constants/defaultValues&apos;,&apos;PROCEDURE&apos;)],
&#x9;&#x9;&#x9;VECTOR[&#x9;--updateAction,&#x9;occur,numLines,&#x9;keyTextVerify,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;searchText,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;replaceText
&#x9;&#x9;&#x9;&#x9;&#x9;  (&apos;modifyConstant&apos;,1,&#x9;0,&#x9;&#x9;&apos;bestPracticesVersion&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;bestPracticesVersion&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CAST(bestPracticesVersionCurrent AS VARCHAR))
&#x9;&#x9;&#x9;&#x9;&#x9; ,(&apos;replace&apos;,&#x9;&#x9;0,&#x9;0,&#x9;&#x9;&apos;VARCHAR(4000)&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;VARCHAR(1024)&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;VARCHAR(4000)&apos;) 
&#x9;&#x9;&#x9;&#x9;&#x9; ,(&apos;replace&apos;,&#x9;&#x9;1,&#x9;0,&#x9;&#x9;&apos;/services/databases/$PROJECT_NAME_RESERVED&apos;,&apos;/services/databases/DataAbstraction_GENERIC_Template&apos;,&#x9;&#x9;&#x9;&apos;/services/databases/$PROJECT_NAME_RESERVED&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9; ,(&apos;replace&apos;,&#x9;&#x9;1,&#x9;0,&#x9;&#x9;&apos;$PROJECT_PATH_DST_RESERVED&apos;,&#x9;&#x9;&#x9;&#x9;bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template&apos;,&#x9;&#x9;&#x9;&apos;$PROJECT_PATH_DST_RESERVED&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9; ,(&apos;replace&apos;,&#x9;&#x9;1,&#x9;0,&#x9;&#x9;&apos;$SCRIPTS_PATH_DST_DERIVED&apos;,&#x9;&#x9;&#x9;&#x9;&apos;/&quot;_scripts&quot;&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;$SCRIPTS_PATH_DST_DERIVED&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9;])

&#x9;&#x9;-- 11. Update PROJECT_PATH/_scripts/Documentation/constants
&#x9;&#x9;,(&#x9;8.16, bestPracticesVersionCurrent, &apos;update&apos;, null, null, null,
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation/constants&apos;,&apos;PROCEDURE&apos;)],
&#x9;&#x9;&#x9;VECTOR[&#x9;--updateAction,&#x9;occur,numLines,&#x9;keyTextVerify,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;searchText,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;replaceText
&#x9;&#x9;&#x9;&#x9;&#x9; (&apos;replace&apos;,&#x9;&#x9;0,&#x9;0,&#x9;&#x9;&apos;$SCRIPTS_PATH_DST_RESERVED&apos;,&#x9;&#x9;&#x9;bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/&quot;_scripts&quot;&apos;,&#x9;&apos;$SCRIPTS_PATH_DST_RESERVED&apos;) 
&#x9;&#x9;&#x9;&#x9;&#x9;])

&#x9;&#x9;-- 12. UpdateTrigger PROJECT_PATH/_scripts/Documentation
&#x9;&#x9;,(&#x9;8.16, bestPracticesVersionCurrent, &apos;updateTrigger&apos;, null, null, null,
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation&apos;,&apos;CONTAINER&apos;)],
&#x9;&#x9;&#x9;VECTOR[&#x9;--updateAction,&#x9;occur,numLines,&#x9;keyTextVerify,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;searchText,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;replaceText
&#x9;&#x9;&#x9;&#x9;&#x9; (&apos;restoreParam&apos;,&#x9;0,&#x9;0,&#x9;&#x9;&apos;&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;$SCRIPTS_PATH_DST&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9;,(&apos;fixParam&apos;,&#x9;&#x9;0,&#x9;0,&#x9;&#x9;&apos;&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9;])

&#x9;&#x9;-- 13. Restore default values from original at PROJECT_PATH/Constants/defaultValues
&#x9;&#x9;,(&#x9;8.16, bestPracticesVersionCurrent, &apos;restoreDefaultValues&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 14. Restore documentation constants from original at PROJECT_PATH/Documentation/constants
&#x9;&#x9;,(&#x9;8.16, bestPracticesVersionCurrent, &apos;restoreDocConstants&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 15. Configure starting Folders PROJECT_PATH/_scripts/Configure
&#x9;&#x9;,(&#x9;8.16, bestPracticesVersionCurrent, &apos;configFolders&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 16. Rebind all resources starting at PROJECT_PATH/_scripts from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
&#x9;&#x9;,(&#x9;8.16, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$SCRIPTS_PATH_DST&apos;, &apos;CONTAINER&apos;, &#x9;&#x9;VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 17. Rebind all resources starting at PROJECT_PATH/Application from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
&#x9;&#x9;,(&#x9;8.16, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Application&apos;, &apos;CONTAINER&apos;, &#x9;VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 18. Rebind all resources starting at PROJECT_PATH/Business from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
&#x9;&#x9;,(&#x9;8.16, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Business&apos;, &apos;CONTAINER&apos;, &#x9;&#x9;VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 19. Rebind all resources starting at PROJECT_PATH/Physical from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
&#x9;&#x9;,(&#x9;8.16, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Physical&apos;, &apos;CONTAINER&apos;, &#x9;&#x9;VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 20. Update CRUD procedures within the destination project path
&#x9;&#x9;,(&#x9;8.16, bestPracticesVersionCurrent, &apos;updateCrud&apos;, null, null, null, VECTOR[(&apos;$PROJECT_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

/********************************************************
 * Actions to upgrade 8.17 to Current: 
 ********************************************************/
/* NOTE: THIS SECTION IS USED TO AN UPGRADE IN PLACE FROM 8.1 to Current.  It makes one copy of the entire _scripts folder. */
&#x9;&#x9;-- 1. Make a copy of $SCRIPTS_PATH_DST
&#x9;&#x9;,(&#x9;8.17, bestPracticesVersionCurrent, &apos;copyLeave&apos;, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null, null)

&#x9;&#x9;-- 2. Copy DataAbstraction_GENERIC_Template/_scripts/_Custom to $SCRIPTS_PATH_DST/_Custom
&#x9;&#x9;,(&#x9;8.17, bestPracticesVersionCurrent, &apos;copyNotExist&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/_Custom&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/_Custom&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 3. Copy DataAbstraction_GENERIC_Template/_scripts/Configure to $SCRIPTS_PATH_DST/Configure
&#x9;&#x9;,(&#x9;8.17, bestPracticesVersionCurrent, &apos;copyNotExist&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Configure&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Configure&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 4. Copy DataAbstraction_GENERIC_Template/_scripts/Configure/ConfigureParams to $SCRIPTS_PATH_DST/Configure/ConfigureParams
&#x9;&#x9;,(&#x9;8.17, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Configure/ConfigureParams&apos;,&apos;PROCEDURE&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Configure&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 5. Copy DataAbstraction_GENERIC_Template/_scripts/Constants to $SCRIPTS_PATH_DST/Constants
&#x9;&#x9;,(&#x9;8.17, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Constants&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Constants&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 6. Copy DataAbstraction_GENERIC_Template/_scripts/Display to $SCRIPTS_PATH_DST/Display
&#x9;&#x9;,(&#x9;8.17, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Display&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Display&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 7. Copy DataAbstraction_GENERIC_Template/_scripts/Constants to $SCRIPTS_PATH_DST/Documentation
&#x9;&#x9;,(&#x9;8.17, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Documentation&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 8. Copy DataAbstraction_GENERIC_Template/_scripts/Generate to $SCRIPTS_PATH_DST/Generate
&#x9;&#x9;,(&#x9;8.17, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Generate&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Generate&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 9. Copy DataAbstraction_GENERIC_Template/_scripts/Rebind to $SCRIPTS_PATH_DST/Rebind
&#x9;&#x9;,(&#x9;8.17, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Rebind&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Rebind&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 10. Update PROJECT_PATH/_scripts/Constants/defaultValues
&#x9;&#x9;,(&#x9;8.17, bestPracticesVersionCurrent, &apos;update&apos;, null, null, null,
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Constants/defaultValues&apos;,&apos;PROCEDURE&apos;)],
&#x9;&#x9;&#x9;VECTOR[&#x9;--updateAction,&#x9;occur,numLines,&#x9;keyTextVerify,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;searchText,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;replaceText
&#x9;&#x9;&#x9;&#x9;&#x9;  (&apos;modifyConstant&apos;,1,&#x9;0,&#x9;&#x9;&apos;bestPracticesVersion&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;bestPracticesVersion&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CAST(bestPracticesVersionCurrent AS VARCHAR))
&#x9;&#x9;&#x9;&#x9;&#x9; ,(&apos;replace&apos;,&#x9;&#x9;0,&#x9;0,&#x9;&#x9;&apos;VARCHAR(4000)&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;VARCHAR(1024)&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;VARCHAR(4000)&apos;) 
&#x9;&#x9;&#x9;&#x9;&#x9; ,(&apos;replace&apos;,&#x9;&#x9;1,&#x9;0,&#x9;&#x9;&apos;/services/databases/$PROJECT_NAME_RESERVED&apos;,&apos;/services/databases/DataAbstraction_GENERIC_Template&apos;,&#x9;&#x9;&#x9;&apos;/services/databases/$PROJECT_NAME_RESERVED&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9; ,(&apos;replace&apos;,&#x9;&#x9;1,&#x9;0,&#x9;&#x9;&apos;$PROJECT_PATH_DST_RESERVED&apos;,&#x9;&#x9;&#x9;&#x9;bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template&apos;,&#x9;&#x9;&#x9;&apos;$PROJECT_PATH_DST_RESERVED&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9; ,(&apos;replace&apos;,&#x9;&#x9;1,&#x9;0,&#x9;&#x9;&apos;$SCRIPTS_PATH_DST_DERIVED&apos;,&#x9;&#x9;&#x9;&#x9;&apos;/&quot;_scripts&quot;&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;$SCRIPTS_PATH_DST_DERIVED&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9;])

&#x9;&#x9;-- 11. Update PROJECT_PATH/_scripts/Documentation/constants
&#x9;&#x9;,(&#x9;8.17, bestPracticesVersionCurrent, &apos;update&apos;, null, null, null,
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation/constants&apos;,&apos;PROCEDURE&apos;)],
&#x9;&#x9;&#x9;VECTOR[&#x9;--updateAction,&#x9;occur,numLines,&#x9;keyTextVerify,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;searchText,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;replaceText
&#x9;&#x9;&#x9;&#x9;&#x9; (&apos;replace&apos;,&#x9;&#x9;0,&#x9;0,&#x9;&#x9;&apos;$SCRIPTS_PATH_DST_RESERVED&apos;,&#x9;&#x9;&#x9;bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/&quot;_scripts&quot;&apos;,&#x9;&apos;$SCRIPTS_PATH_DST_RESERVED&apos;) 
&#x9;&#x9;&#x9;&#x9;&#x9;])

&#x9;&#x9;-- 12. UpdateTrigger PROJECT_PATH/_scripts/Documentation
&#x9;&#x9;,(&#x9;8.17, bestPracticesVersionCurrent, &apos;updateTrigger&apos;, null, null, null,
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation&apos;,&apos;CONTAINER&apos;)],
&#x9;&#x9;&#x9;VECTOR[&#x9;--updateAction,&#x9;occur,numLines,&#x9;keyTextVerify,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;searchText,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;replaceText
&#x9;&#x9;&#x9;&#x9;&#x9; (&apos;restoreParam&apos;,&#x9;0,&#x9;0,&#x9;&#x9;&apos;&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;$SCRIPTS_PATH_DST&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9;,(&apos;fixParam&apos;,&#x9;&#x9;0,&#x9;0,&#x9;&#x9;&apos;&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9;])

&#x9;&#x9;-- 13. Restore default values from original at PROJECT_PATH/Constants/defaultValues
&#x9;&#x9;,(&#x9;8.17, bestPracticesVersionCurrent, &apos;restoreDefaultValues&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 14. Restore documentation constants from original at PROJECT_PATH/Documentation/constants
&#x9;&#x9;,(&#x9;8.17, bestPracticesVersionCurrent, &apos;restoreDocConstants&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 15. Configure starting Folders PROJECT_PATH/_scripts/Configure
&#x9;&#x9;,(&#x9;8.17, bestPracticesVersionCurrent, &apos;configFolders&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 16. Rebind all resources starting at PROJECT_PATH/_scripts from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
&#x9;&#x9;,(&#x9;8.17, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$SCRIPTS_PATH_DST&apos;, &apos;CONTAINER&apos;, &#x9;&#x9;VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 17. Rebind all resources starting at PROJECT_PATH/Application from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
&#x9;&#x9;,(&#x9;8.17, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Application&apos;, &apos;CONTAINER&apos;, &#x9;VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 18. Rebind all resources starting at PROJECT_PATH/Business from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
&#x9;&#x9;,(&#x9;8.17, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Business&apos;, &apos;CONTAINER&apos;, &#x9;&#x9;VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 19. Rebind all resources starting at PROJECT_PATH/Physical from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
&#x9;&#x9;,(&#x9;8.17, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Physical&apos;, &apos;CONTAINER&apos;, &#x9;&#x9;VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 20. Update CRUD procedures within the destination project path
&#x9;&#x9;,(&#x9;8.17, bestPracticesVersionCurrent, &apos;updateCrud&apos;, null, null, null, VECTOR[(&apos;$PROJECT_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)


/********************************************************
 * Actions to upgrade 8.18 to Current: 
 ********************************************************/
/* NOTE: THIS SECTION IS USED TO AN UPGRADE IN PLACE FROM 8.1 to Current.  It makes one copy of the entire _scripts folder. */
&#x9;&#x9;-- 1. Make a copy of $SCRIPTS_PATH_DST
&#x9;&#x9;,(&#x9;8.18, bestPracticesVersionCurrent, &apos;copyLeave&apos;, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null, null)

&#x9;&#x9;-- 2. Copy DataAbstraction_GENERIC_Template/_scripts/_Custom to $SCRIPTS_PATH_DST/_Custom
&#x9;&#x9;,(&#x9;8.18, bestPracticesVersionCurrent, &apos;copyNotExist&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/_Custom&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/_Custom&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 3. Copy DataAbstraction_GENERIC_Template/_scripts/Configure to $SCRIPTS_PATH_DST/Configure
&#x9;&#x9;,(&#x9;8.18, bestPracticesVersionCurrent, &apos;copyNotExist&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Configure&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Configure&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 4. Copy DataAbstraction_GENERIC_Template/_scripts/Configure/ConfigureParams to $SCRIPTS_PATH_DST/Configure/ConfigureParams
&#x9;&#x9;,(&#x9;8.18, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Configure/ConfigureParams&apos;,&apos;PROCEDURE&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Configure&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 5. Copy DataAbstraction_GENERIC_Template/_scripts/Constants to $SCRIPTS_PATH_DST/Constants
&#x9;&#x9;,(&#x9;8.18, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Constants&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Constants&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 6. Copy DataAbstraction_GENERIC_Template/_scripts/Display to $SCRIPTS_PATH_DST/Display
&#x9;&#x9;,(&#x9;8.18, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Display&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Display&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 7. Copy DataAbstraction_GENERIC_Template/_scripts/Constants to $SCRIPTS_PATH_DST/Documentation
&#x9;&#x9;,(&#x9;8.18, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Documentation&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 8. Copy DataAbstraction_GENERIC_Template/_scripts/Generate to $SCRIPTS_PATH_DST/Generate
&#x9;&#x9;,(&#x9;8.18, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Generate&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Generate&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 9. Copy DataAbstraction_GENERIC_Template/_scripts/Rebind to $SCRIPTS_PATH_DST/Rebind
&#x9;&#x9;,(&#x9;8.18, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Rebind&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Rebind&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 10. Update PROJECT_PATH/_scripts/Constants/defaultValues
&#x9;&#x9;,(&#x9;8.18, bestPracticesVersionCurrent, &apos;update&apos;, null, null, null,
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Constants/defaultValues&apos;,&apos;PROCEDURE&apos;)],
&#x9;&#x9;&#x9;VECTOR[&#x9;--updateAction,&#x9;occur,numLines,&#x9;keyTextVerify,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;searchText,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;replaceText
&#x9;&#x9;&#x9;&#x9;&#x9;  (&apos;modifyConstant&apos;,1,&#x9;0,&#x9;&#x9;&apos;bestPracticesVersion&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;bestPracticesVersion&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CAST(bestPracticesVersionCurrent AS VARCHAR))
&#x9;&#x9;&#x9;&#x9;&#x9; ,(&apos;replace&apos;,&#x9;&#x9;0,&#x9;0,&#x9;&#x9;&apos;VARCHAR(4000)&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;VARCHAR(1024)&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;VARCHAR(4000)&apos;) 
&#x9;&#x9;&#x9;&#x9;&#x9; ,(&apos;replace&apos;,&#x9;&#x9;1,&#x9;0,&#x9;&#x9;&apos;/services/databases/$PROJECT_NAME_RESERVED&apos;,&apos;/services/databases/DataAbstraction_GENERIC_Template&apos;,&#x9;&#x9;&#x9;&apos;/services/databases/$PROJECT_NAME_RESERVED&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9; ,(&apos;replace&apos;,&#x9;&#x9;1,&#x9;0,&#x9;&#x9;&apos;$PROJECT_PATH_DST_RESERVED&apos;,&#x9;&#x9;&#x9;&#x9;bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template&apos;,&#x9;&#x9;&#x9;&apos;$PROJECT_PATH_DST_RESERVED&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9; ,(&apos;replace&apos;,&#x9;&#x9;1,&#x9;0,&#x9;&#x9;&apos;$SCRIPTS_PATH_DST_DERIVED&apos;,&#x9;&#x9;&#x9;&#x9;&apos;/&quot;_scripts&quot;&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;$SCRIPTS_PATH_DST_DERIVED&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9;])

&#x9;&#x9;-- 11. Update PROJECT_PATH/_scripts/Documentation/constants
&#x9;&#x9;,(&#x9;8.18, bestPracticesVersionCurrent, &apos;update&apos;, null, null, null,
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation/constants&apos;,&apos;PROCEDURE&apos;)],
&#x9;&#x9;&#x9;VECTOR[&#x9;--updateAction,&#x9;occur,numLines,&#x9;keyTextVerify,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;searchText,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;replaceText
&#x9;&#x9;&#x9;&#x9;&#x9; (&apos;replace&apos;,&#x9;&#x9;0,&#x9;0,&#x9;&#x9;&apos;$SCRIPTS_PATH_DST_RESERVED&apos;,&#x9;&#x9;&#x9;bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/&quot;_scripts&quot;&apos;,&#x9;&apos;$SCRIPTS_PATH_DST_RESERVED&apos;) 
&#x9;&#x9;&#x9;&#x9;&#x9;])

&#x9;&#x9;-- 12. UpdateTrigger PROJECT_PATH/_scripts/Documentation
&#x9;&#x9;,(&#x9;8.18, bestPracticesVersionCurrent, &apos;updateTrigger&apos;, null, null, null,
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation&apos;,&apos;CONTAINER&apos;)],
&#x9;&#x9;&#x9;VECTOR[&#x9;--updateAction,&#x9;occur,numLines,&#x9;keyTextVerify,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;searchText,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;replaceText
&#x9;&#x9;&#x9;&#x9;&#x9; (&apos;restoreParam&apos;,&#x9;0,&#x9;0,&#x9;&#x9;&apos;&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;$SCRIPTS_PATH_DST&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9;,(&apos;fixParam&apos;,&#x9;&#x9;0,&#x9;0,&#x9;&#x9;&apos;&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9;])

&#x9;&#x9;-- 13. Restore default values from original at PROJECT_PATH/Constants/defaultValues
&#x9;&#x9;,(&#x9;8.18, bestPracticesVersionCurrent, &apos;restoreDefaultValues&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 15. Restore documentation constants from original at PROJECT_PATH/Documentation/constants
&#x9;&#x9;,(&#x9;8.18, bestPracticesVersionCurrent, &apos;restoreDocConstants&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 16. Configure starting Folders PROJECT_PATH/_scripts/Configure
&#x9;&#x9;,(&#x9;8.18, bestPracticesVersionCurrent, &apos;configFolders&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 17. Rebind all resources starting at PROJECT_PATH/_scripts from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
&#x9;&#x9;,(&#x9;8.18, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$SCRIPTS_PATH_DST&apos;, &apos;CONTAINER&apos;, &#x9;&#x9;VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 18. Rebind all resources starting at PROJECT_PATH/Application from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
&#x9;&#x9;,(&#x9;8.18, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Application&apos;, &apos;CONTAINER&apos;, &#x9;VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 19. Rebind all resources starting at PROJECT_PATH/Business from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
&#x9;&#x9;,(&#x9;8.18, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Business&apos;, &apos;CONTAINER&apos;, &#x9;&#x9;VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 20. Rebind all resources starting at PROJECT_PATH/Physical from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
&#x9;&#x9;,(&#x9;8.18, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Physical&apos;, &apos;CONTAINER&apos;, &#x9;&#x9;VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 18. Update CRUD procedures within the destination project path
&#x9;&#x9;,(&#x9;8.18, bestPracticesVersionCurrent, &apos;updateCrud&apos;, null, null, null, VECTOR[(&apos;$PROJECT_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

/********************************************************
 * Actions to upgrade 8.19 to Current: 
 ********************************************************/
/* NOTE: THIS SECTION IS USED TO AN UPGRADE IN PLACE FROM 8.1 to Current.  It makes one copy of the entire _scripts folder. */
&#x9;&#x9;-- 1. Make a copy of $SCRIPTS_PATH_DST
&#x9;&#x9;,(&#x9;8.19, bestPracticesVersionCurrent, &apos;copyLeave&apos;, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null, null)

&#x9;&#x9;-- 2. Copy DataAbstraction_GENERIC_Template/_scripts/_Custom to $SCRIPTS_PATH_DST/_Custom
&#x9;&#x9;,(&#x9;8.19, bestPracticesVersionCurrent, &apos;copyNotExist&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/_Custom&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/_Custom&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 3. Copy DataAbstraction_GENERIC_Template/_scripts/Configure to $SCRIPTS_PATH_DST/Configure
&#x9;&#x9;,(&#x9;8.19, bestPracticesVersionCurrent, &apos;copyNotExist&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Configure&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Configure&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 4. Copy DataAbstraction_GENERIC_Template/_scripts/Configure/ConfigureParams to $SCRIPTS_PATH_DST/Configure/ConfigureParams
&#x9;&#x9;,(&#x9;8.19, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Configure/ConfigureParams&apos;,&apos;PROCEDURE&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Configure&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 5. Copy DataAbstraction_GENERIC_Template/_scripts/Constants to $SCRIPTS_PATH_DST/Constants
&#x9;&#x9;,(&#x9;8.19, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Constants&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Constants&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 6. Copy DataAbstraction_GENERIC_Template/_scripts/Display to $SCRIPTS_PATH_DST/Display
&#x9;&#x9;,(&#x9;8.19, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Display&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Display&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 7. Copy DataAbstraction_GENERIC_Template/_scripts/Constants to $SCRIPTS_PATH_DST/Documentation
&#x9;&#x9;,(&#x9;8.19, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Documentation&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 8. Copy DataAbstraction_GENERIC_Template/_scripts/Generate to $SCRIPTS_PATH_DST/Generate
&#x9;&#x9;,(&#x9;8.19, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Generate&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Generate&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 9. Copy DataAbstraction_GENERIC_Template/_scripts/Rebind to $SCRIPTS_PATH_DST/Rebind
&#x9;&#x9;,(&#x9;8.19, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Rebind&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Rebind&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 10. Update PROJECT_PATH/_scripts/Constants/defaultValues
&#x9;&#x9;,(&#x9;8.19, bestPracticesVersionCurrent, &apos;update&apos;, null, null, null,
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Constants/defaultValues&apos;,&apos;PROCEDURE&apos;)],
&#x9;&#x9;&#x9;VECTOR[&#x9;--updateAction,&#x9;occur,numLines,&#x9;keyTextVerify,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;searchText,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;replaceText
&#x9;&#x9;&#x9;&#x9;&#x9;  (&apos;modifyConstant&apos;,1,&#x9;0,&#x9;&#x9;&apos;bestPracticesVersion&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;bestPracticesVersion&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CAST(bestPracticesVersionCurrent AS VARCHAR))
&#x9;&#x9;&#x9;&#x9;&#x9; ,(&apos;replace&apos;,&#x9;&#x9;0,&#x9;0,&#x9;&#x9;&apos;VARCHAR(4000)&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;VARCHAR(1024)&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;VARCHAR(4000)&apos;) 
&#x9;&#x9;&#x9;&#x9;&#x9; ,(&apos;replace&apos;,&#x9;&#x9;1,&#x9;0,&#x9;&#x9;&apos;/services/databases/$PROJECT_NAME_RESERVED&apos;,&apos;/services/databases/DataAbstraction_GENERIC_Template&apos;,&#x9;&#x9;&#x9;&apos;/services/databases/$PROJECT_NAME_RESERVED&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9; ,(&apos;replace&apos;,&#x9;&#x9;1,&#x9;0,&#x9;&#x9;&apos;$PROJECT_PATH_DST_RESERVED&apos;,&#x9;&#x9;&#x9;&#x9;bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template&apos;,&#x9;&#x9;&#x9;&apos;$PROJECT_PATH_DST_RESERVED&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9; ,(&apos;replace&apos;,&#x9;&#x9;1,&#x9;0,&#x9;&#x9;&apos;$SCRIPTS_PATH_DST_DERIVED&apos;,&#x9;&#x9;&#x9;&#x9;&apos;/&quot;_scripts&quot;&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;$SCRIPTS_PATH_DST_DERIVED&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9;])

&#x9;&#x9;-- 11. Update PROJECT_PATH/_scripts/Documentation/constants
&#x9;&#x9;,(&#x9;8.19, bestPracticesVersionCurrent, &apos;update&apos;, null, null, null,
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation/constants&apos;,&apos;PROCEDURE&apos;)],
&#x9;&#x9;&#x9;VECTOR[&#x9;--updateAction,&#x9;occur,numLines,&#x9;keyTextVerify,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;searchText,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;replaceText
&#x9;&#x9;&#x9;&#x9;&#x9; (&apos;replace&apos;,&#x9;&#x9;0,&#x9;0,&#x9;&#x9;&apos;$SCRIPTS_PATH_DST_RESERVED&apos;,&#x9;&#x9;&#x9;bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/&quot;_scripts&quot;&apos;,&#x9;&apos;$SCRIPTS_PATH_DST_RESERVED&apos;) 
&#x9;&#x9;&#x9;&#x9;&#x9;])

&#x9;&#x9;-- 12. UpdateTrigger PROJECT_PATH/_scripts/Documentation
&#x9;&#x9;,(&#x9;8.19, bestPracticesVersionCurrent, &apos;updateTrigger&apos;, null, null, null,
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation&apos;,&apos;CONTAINER&apos;)],
&#x9;&#x9;&#x9;VECTOR[&#x9;--updateAction,&#x9;occur,numLines,&#x9;keyTextVerify,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;searchText,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;replaceText
&#x9;&#x9;&#x9;&#x9;&#x9; (&apos;restoreParam&apos;,&#x9;0,&#x9;0,&#x9;&#x9;&apos;&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;$SCRIPTS_PATH_DST&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9;,(&apos;fixParam&apos;,&#x9;&#x9;0,&#x9;0,&#x9;&#x9;&apos;&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9;])

&#x9;&#x9;-- 13. Restore default values from original at PROJECT_PATH/Constants/defaultValues
&#x9;&#x9;,(&#x9;8.19, bestPracticesVersionCurrent, &apos;restoreDefaultValues&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 14. Restore documentation constants from original at PROJECT_PATH/Documentation/constants
&#x9;&#x9;,(&#x9;8.19, bestPracticesVersionCurrent, &apos;restoreDocConstants&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 15. Configure starting Folders PROJECT_PATH/_scripts/Configure
&#x9;&#x9;,(&#x9;8.19, bestPracticesVersionCurrent, &apos;configFolders&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 16. Rebind all resources starting at PROJECT_PATH/_scripts from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
&#x9;&#x9;,(&#x9;8.19, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$SCRIPTS_PATH_DST&apos;, &apos;CONTAINER&apos;, &#x9;&#x9;VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 15. Rebind all resources starting at PROJECT_PATH/Application from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
&#x9;&#x9;,(&#x9;8.19, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Application&apos;, &apos;CONTAINER&apos;, &#x9;VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 18. Rebind all resources starting at PROJECT_PATH/Business from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
&#x9;&#x9;,(&#x9;8.19, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Business&apos;, &apos;CONTAINER&apos;, &#x9;&#x9;VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 19. Rebind all resources starting at PROJECT_PATH/Physical from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
&#x9;&#x9;,(&#x9;8.19, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Physical&apos;, &apos;CONTAINER&apos;, &#x9;&#x9;VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 20. Update CRUD procedures within the destination project path
&#x9;&#x9;,(&#x9;8.19, bestPracticesVersionCurrent, &apos;updateCrud&apos;, null, null, null, VECTOR[(&apos;$PROJECT_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

/********************************************************
 * Actions to upgrade 2018.1 to Current: 
 ********************************************************/
/* NOTE: THIS SECTION IS USED TO AN UPGRADE IN PLACE FROM 2018.1 to Current.  It makes one copy of the entire _scripts folder. */
&#x9;&#x9;-- 1. Make a copy of $SCRIPTS_PATH_DST
&#x9;&#x9;,(&#x9;2018.1, bestPracticesVersionCurrent, &apos;copyLeave&apos;, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null, null)

&#x9;&#x9;-- 2. Copy DataAbstraction_GENERIC_Template/_scripts/_Custom to $SCRIPTS_PATH_DST/_Custom
&#x9;&#x9;,(&#x9;2018.1, bestPracticesVersionCurrent, &apos;copyNotExist&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/_Custom&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/_Custom&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 3. Copy DataAbstraction_GENERIC_Template/_scripts/Configure to $SCRIPTS_PATH_DST/Configure
&#x9;&#x9;,(&#x9;2018.1, bestPracticesVersionCurrent, &apos;copyNotExist&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Configure&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Configure&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 4. Copy DataAbstraction_GENERIC_Template/_scripts/Configure to $SCRIPTS_PATH_DST/Configure/ConfigureParams
&#x9;&#x9;,(&#x9;2018.1, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Configure/ConfigureParams&apos;,&apos;PROCEDURE&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Configure&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 5. Copy DataAbstraction_GENERIC_Template/_scripts/Constants to $SCRIPTS_PATH_DST/Constants
&#x9;&#x9;,(&#x9;2018.1, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Constants&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Constants&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 6. Copy DataAbstraction_GENERIC_Template/_scripts/Display to $SCRIPTS_PATH_DST/Display
&#x9;&#x9;,(&#x9;2018.1, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Display&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Display&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 7. Copy DataAbstraction_GENERIC_Template/_scripts/Constants to $SCRIPTS_PATH_DST/Documentation
&#x9;&#x9;,(&#x9;2018.1, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Documentation&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 8. Copy DataAbstraction_GENERIC_Template/_scripts/Generate to $SCRIPTS_PATH_DST/Generate
&#x9;&#x9;,(&#x9;2018.1, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Generate&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Generate&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 9. Copy DataAbstraction_GENERIC_Template/_scripts/Rebind to $SCRIPTS_PATH_DST/Rebind
&#x9;&#x9;,(&#x9;2018.1, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Rebind&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Rebind&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 10. Update PROJECT_PATH/_scripts/Constants/defaultValues
&#x9;&#x9;,(&#x9;2018.1, bestPracticesVersionCurrent, &apos;update&apos;, null, null, null,
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Constants/defaultValues&apos;,&apos;PROCEDURE&apos;)],
&#x9;&#x9;&#x9;VECTOR[&#x9;--updateAction,&#x9;occur,numLines,&#x9;keyTextVerify,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;searchText,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;replaceText
&#x9;&#x9;&#x9;&#x9;&#x9;  (&apos;modifyConstant&apos;,1,&#x9;0,&#x9;&#x9;&apos;bestPracticesVersion&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;bestPracticesVersion&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CAST(bestPracticesVersionCurrent AS VARCHAR))
&#x9;&#x9;&#x9;&#x9;&#x9; ,(&apos;replace&apos;,&#x9;&#x9;0,&#x9;0,&#x9;&#x9;&apos;VARCHAR(4000)&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;VARCHAR(1024)&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;VARCHAR(4000)&apos;) 
&#x9;&#x9;&#x9;&#x9;&#x9; ,(&apos;replace&apos;,&#x9;&#x9;1,&#x9;0,&#x9;&#x9;&apos;/services/databases/$PROJECT_NAME_RESERVED&apos;,&apos;/services/databases/DataAbstraction_GENERIC_Template&apos;,&#x9;&#x9;&#x9;&apos;/services/databases/$PROJECT_NAME_RESERVED&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9; ,(&apos;replace&apos;,&#x9;&#x9;1,&#x9;0,&#x9;&#x9;&apos;$PROJECT_PATH_DST_RESERVED&apos;,&#x9;&#x9;&#x9;&#x9;bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template&apos;,&#x9;&#x9;&#x9;&apos;$PROJECT_PATH_DST_RESERVED&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9; ,(&apos;replace&apos;,&#x9;&#x9;1,&#x9;0,&#x9;&#x9;&apos;$SCRIPTS_PATH_DST_DERIVED&apos;,&#x9;&#x9;&#x9;&#x9;&apos;/&quot;_scripts&quot;&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;$SCRIPTS_PATH_DST_DERIVED&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9;])

&#x9;&#x9;-- 11. Update PROJECT_PATH/_scripts/Documentation/constants
&#x9;&#x9;,(&#x9;2018.1, bestPracticesVersionCurrent, &apos;update&apos;, null, null, null,
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation/constants&apos;,&apos;PROCEDURE&apos;)],
&#x9;&#x9;&#x9;VECTOR[&#x9;--updateAction,&#x9;occur,numLines,&#x9;keyTextVerify,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;searchText,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;replaceText
&#x9;&#x9;&#x9;&#x9;&#x9; (&apos;replace&apos;,&#x9;&#x9;0,&#x9;0,&#x9;&#x9;&apos;$SCRIPTS_PATH_DST_RESERVED&apos;,&#x9;&#x9;&#x9;bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/&quot;_scripts&quot;&apos;,&#x9;&apos;$SCRIPTS_PATH_DST_RESERVED&apos;) 
&#x9;&#x9;&#x9;&#x9;&#x9;])

&#x9;&#x9;-- 12. UpdateTrigger PROJECT_PATH/_scripts/Documentation
&#x9;&#x9;,(&#x9;2018.1, bestPracticesVersionCurrent, &apos;updateTrigger&apos;, null, null, null,
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation&apos;,&apos;CONTAINER&apos;)],
&#x9;&#x9;&#x9;VECTOR[&#x9;--updateAction,&#x9;occur,numLines,&#x9;keyTextVerify,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;searchText,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;replaceText
&#x9;&#x9;&#x9;&#x9;&#x9; (&apos;restoreParam&apos;,&#x9;0,&#x9;0,&#x9;&#x9;&apos;&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;$SCRIPTS_PATH_DST&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9;,(&apos;fixParam&apos;,&#x9;&#x9;0,&#x9;0,&#x9;&#x9;&apos;&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9;])

&#x9;&#x9;-- 13. Restore default values from original at PROJECT_PATH/Constants/defaultValues
&#x9;&#x9;,(&#x9;2018.1, bestPracticesVersionCurrent, &apos;restoreDefaultValues&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 14. Restore documentation constants from original at PROJECT_PATH/Documentation/constants
&#x9;&#x9;,(&#x9;2018.1, bestPracticesVersionCurrent, &apos;restoreDocConstants&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 15. Configure starting Folders PROJECT_PATH/_scripts/Configure
&#x9;&#x9;,(&#x9;2018.1, bestPracticesVersionCurrent, &apos;configFolders&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 16. Rebind all resources starting at PROJECT_PATH/_scripts from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
&#x9;&#x9;,(&#x9;2018.1, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$SCRIPTS_PATH_DST&apos;, &apos;CONTAINER&apos;, &#x9;&#x9;VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 17. Rebind all resources starting at PROJECT_PATH/Application from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
&#x9;&#x9;,(&#x9;2018.1, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Application&apos;, &apos;CONTAINER&apos;, &#x9;VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 18. Rebind all resources starting at PROJECT_PATH/Business from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
&#x9;&#x9;,(&#x9;2018.1, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Business&apos;, &apos;CONTAINER&apos;, &#x9;&#x9;VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 19. Rebind all resources starting at PROJECT_PATH/Physical from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
&#x9;&#x9;,(&#x9;2018.1, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Physical&apos;, &apos;CONTAINER&apos;, &#x9;&#x9;VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 20. Update CRUD procedures within the destination project path
&#x9;&#x9;,(&#x9;2018.1, bestPracticesVersionCurrent, &apos;updateCrud&apos;, null, null, null, VECTOR[(&apos;$PROJECT_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

/********************************************************
 * Actions to upgrade 2019.1 to Current: 
 ********************************************************/
/* NOTE: THIS SECTION IS USED TO AN UPGRADE IN PLACE FROM 2019.1 to Current.  It makes one copy of the entire _scripts folder. */
&#x9;&#x9;-- 1. Make a copy of $SCRIPTS_PATH_DST
&#x9;&#x9;,(&#x9;2019.1, bestPracticesVersionCurrent, &apos;copyLeave&apos;, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null, null)

&#x9;&#x9;-- 2. Copy DataAbstraction_GENERIC_Template/_scripts/_Custom to $SCRIPTS_PATH_DST/_Custom
&#x9;&#x9;,(&#x9;2019.1, bestPracticesVersionCurrent, &apos;copyNotExist&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/_Custom&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/_Custom&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 3. Copy DataAbstraction_GENERIC_Template/_scripts/Configure to $SCRIPTS_PATH_DST/Configure
&#x9;&#x9;,(&#x9;2019.1, bestPracticesVersionCurrent, &apos;copyNotExist&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Configure&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Configure&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 4. Copy DataAbstraction_GENERIC_Template/_scripts/Configure to $SCRIPTS_PATH_DST/Configure/ConfigureParams
&#x9;&#x9;,(&#x9;2019.1, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Configure/ConfigureParams&apos;,&apos;PROCEDURE&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Configure&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 5. Copy DataAbstraction_GENERIC_Template/_scripts/Constants to $SCRIPTS_PATH_DST/Constants
&#x9;&#x9;,(&#x9;2019.1, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Constants&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Constants&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 6. Copy DataAbstraction_GENERIC_Template/_scripts/Display to $SCRIPTS_PATH_DST/Display
&#x9;&#x9;,(&#x9;2019.1, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Display&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Display&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 7. Copy DataAbstraction_GENERIC_Template/_scripts/Constants to $SCRIPTS_PATH_DST/Documentation
&#x9;&#x9;,(&#x9;2019.1, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Documentation&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 8. Copy DataAbstraction_GENERIC_Template/_scripts/Generate to $SCRIPTS_PATH_DST/Generate
&#x9;&#x9;,(&#x9;2019.1, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Generate&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Generate&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 9. Copy DataAbstraction_GENERIC_Template/_scripts/Rebind to $SCRIPTS_PATH_DST/Rebind
&#x9;&#x9;,(&#x9;2019.1, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Rebind&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Rebind&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 10. Update PROJECT_PATH/_scripts/Constants/defaultValues
&#x9;&#x9;,(&#x9;2019.1, bestPracticesVersionCurrent, &apos;update&apos;, null, null, null,
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Constants/defaultValues&apos;,&apos;PROCEDURE&apos;)],
&#x9;&#x9;&#x9;VECTOR[&#x9;--updateAction,&#x9;occur,numLines,&#x9;keyTextVerify,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;searchText,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;replaceText
&#x9;&#x9;&#x9;&#x9;&#x9;  (&apos;modifyConstant&apos;,1,&#x9;0,&#x9;&#x9;&apos;bestPracticesVersion&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;bestPracticesVersion&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CAST(bestPracticesVersionCurrent AS VARCHAR))
&#x9;&#x9;&#x9;&#x9;&#x9; ,(&apos;replace&apos;,&#x9;&#x9;0,&#x9;0,&#x9;&#x9;&apos;VARCHAR(4000)&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;VARCHAR(1024)&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;VARCHAR(4000)&apos;) 
&#x9;&#x9;&#x9;&#x9;&#x9; ,(&apos;replace&apos;,&#x9;&#x9;1,&#x9;0,&#x9;&#x9;&apos;/services/databases/$PROJECT_NAME_RESERVED&apos;,&apos;/services/databases/DataAbstraction_GENERIC_Template&apos;,&#x9;&#x9;&#x9;&apos;/services/databases/$PROJECT_NAME_RESERVED&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9; ,(&apos;replace&apos;,&#x9;&#x9;1,&#x9;0,&#x9;&#x9;&apos;$PROJECT_PATH_DST_RESERVED&apos;,&#x9;&#x9;&#x9;&#x9;bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template&apos;,&#x9;&#x9;&#x9;&apos;$PROJECT_PATH_DST_RESERVED&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9; ,(&apos;replace&apos;,&#x9;&#x9;1,&#x9;0,&#x9;&#x9;&apos;$SCRIPTS_PATH_DST_DERIVED&apos;,&#x9;&#x9;&#x9;&#x9;&apos;/&quot;_scripts&quot;&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;$SCRIPTS_PATH_DST_DERIVED&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9;])

&#x9;&#x9;-- 11. Update PROJECT_PATH/_scripts/Documentation/constants
&#x9;&#x9;,(&#x9;2019.1, bestPracticesVersionCurrent, &apos;update&apos;, null, null, null,
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation/constants&apos;,&apos;PROCEDURE&apos;)],
&#x9;&#x9;&#x9;VECTOR[&#x9;--updateAction,&#x9;occur,numLines,&#x9;keyTextVerify,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;searchText,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;replaceText
&#x9;&#x9;&#x9;&#x9;&#x9; (&apos;replace&apos;,&#x9;&#x9;0,&#x9;0,&#x9;&#x9;&apos;$SCRIPTS_PATH_DST_RESERVED&apos;,&#x9;&#x9;&#x9;bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/&quot;_scripts&quot;&apos;,&#x9;&apos;$SCRIPTS_PATH_DST_RESERVED&apos;) 
&#x9;&#x9;&#x9;&#x9;&#x9;])

&#x9;&#x9;-- 12. UpdateTrigger PROJECT_PATH/_scripts/Documentation
&#x9;&#x9;,(&#x9;2019.1, bestPracticesVersionCurrent, &apos;updateTrigger&apos;, null, null, null,
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation&apos;,&apos;CONTAINER&apos;)],
&#x9;&#x9;&#x9;VECTOR[&#x9;--updateAction,&#x9;occur,numLines,&#x9;keyTextVerify,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;searchText,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;replaceText
&#x9;&#x9;&#x9;&#x9;&#x9; (&apos;restoreParam&apos;,&#x9;0,&#x9;0,&#x9;&#x9;&apos;&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;$SCRIPTS_PATH_DST&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9;,(&apos;fixParam&apos;,&#x9;&#x9;0,&#x9;0,&#x9;&#x9;&apos;&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9;])

&#x9;&#x9;-- 13. Restore default values from original at PROJECT_PATH/Constants/defaultValues
&#x9;&#x9;,(&#x9;2019.1, bestPracticesVersionCurrent, &apos;restoreDefaultValues&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 14. Restore documentation constants from original at PROJECT_PATH/Documentation/constants
&#x9;&#x9;,(&#x9;2019.1, bestPracticesVersionCurrent, &apos;restoreDocConstants&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 15. Configure starting Folders PROJECT_PATH/_scripts/Configure
&#x9;&#x9;,(&#x9;2019.1, bestPracticesVersionCurrent, &apos;configFolders&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 16. Rebind all resources starting at PROJECT_PATH/_scripts from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
&#x9;&#x9;,(&#x9;2019.1, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$SCRIPTS_PATH_DST&apos;, &apos;CONTAINER&apos;, &#x9;&#x9;VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 17. Rebind all resources starting at PROJECT_PATH/Application from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
&#x9;&#x9;,(&#x9;2019.1, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Application&apos;, &apos;CONTAINER&apos;, &#x9;VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 18. Rebind all resources starting at PROJECT_PATH/Business from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
&#x9;&#x9;,(&#x9;2019.1, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Business&apos;, &apos;CONTAINER&apos;, &#x9;&#x9;VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 19. Rebind all resources starting at PROJECT_PATH/Physical from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
&#x9;&#x9;,(&#x9;2019.1, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Physical&apos;, &apos;CONTAINER&apos;, &#x9;&#x9;VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 20. Update CRUD procedures within the destination project path
&#x9;&#x9;,(&#x9;2019.1, bestPracticesVersionCurrent, &apos;updateCrud&apos;, null, null, null, VECTOR[(&apos;$PROJECT_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

/********************************************************
 * Actions to upgrade 2019.101 to Current: 
 ********************************************************/
/* NOTE: THIS SECTION IS USED TO AN UPGRADE IN PLACE FROM 2019.101 to Current.  It makes one copy of the entire _scripts folder. */
&#x9;&#x9;-- 1. Make a copy of $SCRIPTS_PATH_DST
&#x9;&#x9;,(&#x9;2019.101, bestPracticesVersionCurrent, &apos;copyLeave&apos;, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null, null)

&#x9;&#x9;-- 2. Copy DataAbstraction_GENERIC_Template/_scripts/_Custom to $SCRIPTS_PATH_DST/_Custom
&#x9;&#x9;,(&#x9;2019.101, bestPracticesVersionCurrent, &apos;copyNotExist&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/_Custom&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/_Custom&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 3. Copy DataAbstraction_GENERIC_Template/_scripts/Configure to $SCRIPTS_PATH_DST/Configure
&#x9;&#x9;,(&#x9;2019.101, bestPracticesVersionCurrent, &apos;copyNotExist&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Configure&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Configure&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 4. Copy DataAbstraction_GENERIC_Template/_scripts/Configure/ConfigureParams to $SCRIPTS_PATH_DST/Configure/ConfigureParams
&#x9;&#x9;,(&#x9;2019.101, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Configure/ConfigureParams&apos;,&apos;PROCEDURE&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Configure&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 5. Copy DataAbstraction_GENERIC_Template/_scripts/Constants to $SCRIPTS_PATH_DST/Constants
&#x9;&#x9;,(&#x9;2019.101, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Constants&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Constants&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 6. Copy DataAbstraction_GENERIC_Template/_scripts/Display to $SCRIPTS_PATH_DST/Display
&#x9;&#x9;,(&#x9;2019.101, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Display&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Display&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 7. Copy DataAbstraction_GENERIC_Template/_scripts/Constants to $SCRIPTS_PATH_DST/Documentation
&#x9;&#x9;,(&#x9;2019.101, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Documentation&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 8. Copy DataAbstraction_GENERIC_Template/_scripts/Generate to $SCRIPTS_PATH_DST/Generate
&#x9;&#x9;,(&#x9;2019.101, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Generate&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Generate&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 9. Copy DataAbstraction_GENERIC_Template/_scripts/Rebind to $SCRIPTS_PATH_DST/Rebind
&#x9;&#x9;,(&#x9;2019.101, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Rebind&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Rebind&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 10. Update PROJECT_PATH/_scripts/Constants/defaultValues
&#x9;&#x9;,(&#x9;2019.101, bestPracticesVersionCurrent, &apos;update&apos;, null, null, null,
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Constants/defaultValues&apos;,&apos;PROCEDURE&apos;)],
&#x9;&#x9;&#x9;VECTOR[&#x9;--updateAction,&#x9;occur,numLines,&#x9;keyTextVerify,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;searchText,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;replaceText
&#x9;&#x9;&#x9;&#x9;&#x9;  (&apos;modifyConstant&apos;,1,&#x9;0,&#x9;&#x9;&apos;bestPracticesVersion&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;bestPracticesVersion&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CAST(bestPracticesVersionCurrent AS VARCHAR))
&#x9;&#x9;&#x9;&#x9;&#x9; ,(&apos;replace&apos;,&#x9;&#x9;0,&#x9;0,&#x9;&#x9;&apos;VARCHAR(4000)&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;VARCHAR(1024)&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;VARCHAR(4000)&apos;) 
&#x9;&#x9;&#x9;&#x9;&#x9; ,(&apos;replace&apos;,&#x9;&#x9;1,&#x9;0,&#x9;&#x9;&apos;/services/databases/$PROJECT_NAME_RESERVED&apos;,&apos;/services/databases/DataAbstraction_GENERIC_Template&apos;,&#x9;&#x9;&#x9;&apos;/services/databases/$PROJECT_NAME_RESERVED&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9; ,(&apos;replace&apos;,&#x9;&#x9;1,&#x9;0,&#x9;&#x9;&apos;$PROJECT_PATH_DST_RESERVED&apos;,&#x9;&#x9;&#x9;&#x9;bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template&apos;,&#x9;&#x9;&#x9;&apos;$PROJECT_PATH_DST_RESERVED&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9; ,(&apos;replace&apos;,&#x9;&#x9;1,&#x9;0,&#x9;&#x9;&apos;$SCRIPTS_PATH_DST_DERIVED&apos;,&#x9;&#x9;&#x9;&#x9;&apos;/&quot;_scripts&quot;&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;$SCRIPTS_PATH_DST_DERIVED&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9;])

&#x9;&#x9;-- 11. Update PROJECT_PATH/_scripts/Documentation/constants
&#x9;&#x9;,(&#x9;2019.101, bestPracticesVersionCurrent, &apos;update&apos;, null, null, null,
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation/constants&apos;,&apos;PROCEDURE&apos;)],
&#x9;&#x9;&#x9;VECTOR[&#x9;--updateAction,&#x9;occur,numLines,&#x9;keyTextVerify,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;searchText,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;replaceText
&#x9;&#x9;&#x9;&#x9;&#x9; (&apos;replace&apos;,&#x9;&#x9;0,&#x9;0,&#x9;&#x9;&apos;$SCRIPTS_PATH_DST_RESERVED&apos;,&#x9;&#x9;&#x9;bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/&quot;_scripts&quot;&apos;,&#x9;&apos;$SCRIPTS_PATH_DST_RESERVED&apos;) 
&#x9;&#x9;&#x9;&#x9;&#x9;])

&#x9;&#x9;-- 12. UpdateTrigger PROJECT_PATH/_scripts/Documentation
&#x9;&#x9;,(&#x9;2019.101, bestPracticesVersionCurrent, &apos;updateTrigger&apos;, null, null, null,
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation&apos;,&apos;CONTAINER&apos;)],
&#x9;&#x9;&#x9;VECTOR[&#x9;--updateAction,&#x9;occur,numLines,&#x9;keyTextVerify,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;searchText,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;replaceText
&#x9;&#x9;&#x9;&#x9;&#x9; (&apos;restoreParam&apos;,&#x9;0,&#x9;0,&#x9;&#x9;&apos;&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;$SCRIPTS_PATH_DST&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9;,(&apos;fixParam&apos;,&#x9;&#x9;0,&#x9;0,&#x9;&#x9;&apos;&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9;])

&#x9;&#x9;-- 13. Restore default values from original at PROJECT_PATH/Constants/defaultValues
&#x9;&#x9;,(&#x9;2019.101, bestPracticesVersionCurrent, &apos;restoreDefaultValues&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 14. Restore documentation constants from original at PROJECT_PATH/Documentation/constants
&#x9;&#x9;,(&#x9;2019.101, bestPracticesVersionCurrent, &apos;restoreDocConstants&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 15. Configure starting Folders PROJECT_PATH/_scripts/Configure
&#x9;&#x9;,(&#x9;2019.101, bestPracticesVersionCurrent, &apos;configFolders&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 16. Rebind all resources starting at PROJECT_PATH/_scripts from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
&#x9;&#x9;,(&#x9;2019.101, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$SCRIPTS_PATH_DST&apos;, &apos;CONTAINER&apos;, &#x9;&#x9;VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 17. Rebind all resources starting at PROJECT_PATH/Application from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
&#x9;&#x9;,(&#x9;2019.101, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Application&apos;, &apos;CONTAINER&apos;, &#x9;VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 18. Rebind all resources starting at PROJECT_PATH/Business from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
&#x9;&#x9;,(&#x9;2019.101, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Business&apos;, &apos;CONTAINER&apos;, &#x9;&#x9;VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 19. Rebind all resources starting at PROJECT_PATH/Physical from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
&#x9;&#x9;,(&#x9;2019.101, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Physical&apos;, &apos;CONTAINER&apos;, &#x9;&#x9;VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 20. Update CRUD procedures within the destination project path
&#x9;&#x9;,(&#x9;2019.101, bestPracticesVersionCurrent, &apos;updateCrud&apos;, null, null, null, VECTOR[(&apos;$PROJECT_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)


/********************************************************
 * Actions to upgrade 2019.200 to Current: 
 ********************************************************/
/* NOTE: THIS SECTION IS USED TO AN UPGRADE IN PLACE FROM 2019.200 to Current.  It makes one copy of the entire _scripts folder. */
&#x9;&#x9;-- 1. Make a copy of $SCRIPTS_PATH_DST
&#x9;&#x9;,(&#x9;2019.200, bestPracticesVersionCurrent, &apos;copyLeave&apos;, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null, null)

&#x9;&#x9;-- 2. Copy DataAbstraction_GENERIC_Template/_scripts/_Custom to $SCRIPTS_PATH_DST/_Custom
&#x9;&#x9;,(&#x9;2019.200, bestPracticesVersionCurrent, &apos;copyNotExist&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/_Custom&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/_Custom&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 3. Copy DataAbstraction_GENERIC_Template/_scripts/Configure to $SCRIPTS_PATH_DST/Configure
&#x9;&#x9;,(&#x9;2019.200, bestPracticesVersionCurrent, &apos;copyNotExist&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Configure&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Configure&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 4. Copy DataAbstraction_GENERIC_Template/_scripts/Configure/ConfigureParams to $SCRIPTS_PATH_DST/Configure/ConfigureParams
&#x9;&#x9;,(&#x9;2019.200, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Configure/ConfigureParams&apos;,&apos;PROCEDURE&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Configure&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 5. Copy DataAbstraction_GENERIC_Template/_scripts/Constants to $SCRIPTS_PATH_DST/Constants
&#x9;&#x9;,(&#x9;2019.200, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Constants&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Constants&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 6. Copy DataAbstraction_GENERIC_Template/_scripts/Display to $SCRIPTS_PATH_DST/Display
&#x9;&#x9;,(&#x9;2019.200, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Display&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Display&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 7. Copy DataAbstraction_GENERIC_Template/_scripts/Constants to $SCRIPTS_PATH_DST/Documentation
&#x9;&#x9;,(&#x9;2019.200, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Documentation&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 8. Copy DataAbstraction_GENERIC_Template/_scripts/Generate to $SCRIPTS_PATH_DST/Generate
&#x9;&#x9;,(&#x9;2019.200, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Generate&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Generate&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 9. Copy DataAbstraction_GENERIC_Template/_scripts/Rebind to $SCRIPTS_PATH_DST/Rebind
&#x9;&#x9;,(&#x9;2019.200, bestPracticesVersionCurrent, &apos;copy&apos;, null, null,
&#x9;&#x9;&#x9;VECTOR[(bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/_scripts/Rebind&apos;,&apos;CONTAINER&apos;)], 
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Rebind&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 10. Update PROJECT_PATH/_scripts/Constants/defaultValues
&#x9;&#x9;,(&#x9;2019.200, bestPracticesVersionCurrent, &apos;update&apos;, null, null, null,
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Constants/defaultValues&apos;,&apos;PROCEDURE&apos;)],
&#x9;&#x9;&#x9;VECTOR[&#x9;--updateAction,&#x9;occur,numLines,&#x9;keyTextVerify,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;searchText,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;replaceText
&#x9;&#x9;&#x9;&#x9;&#x9;  (&apos;modifyConstant&apos;,1,&#x9;0,&#x9;&#x9;&apos;bestPracticesVersion&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;bestPracticesVersion&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CAST(bestPracticesVersionCurrent AS VARCHAR))
&#x9;&#x9;&#x9;&#x9;&#x9; ,(&apos;replace&apos;,&#x9;&#x9;0,&#x9;0,&#x9;&#x9;&apos;VARCHAR(4000)&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;VARCHAR(1024)&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;VARCHAR(4000)&apos;) 
&#x9;&#x9;&#x9;&#x9;&#x9; ,(&apos;replace&apos;,&#x9;&#x9;1,&#x9;0,&#x9;&#x9;&apos;/services/databases/$PROJECT_NAME_RESERVED&apos;,&apos;/services/databases/DataAbstraction_GENERIC_Template&apos;,&#x9;&#x9;&#x9;&apos;/services/databases/$PROJECT_NAME_RESERVED&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9; ,(&apos;replace&apos;,&#x9;&#x9;1,&#x9;0,&#x9;&#x9;&apos;$PROJECT_PATH_DST_RESERVED&apos;,&#x9;&#x9;&#x9;&#x9;bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template&apos;,&#x9;&#x9;&#x9;&apos;$PROJECT_PATH_DST_RESERVED&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9; ,(&apos;replace&apos;,&#x9;&#x9;1,&#x9;0,&#x9;&#x9;&apos;$SCRIPTS_PATH_DST_DERIVED&apos;,&#x9;&#x9;&#x9;&#x9;&apos;/&quot;_scripts&quot;&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;$SCRIPTS_PATH_DST_DERIVED&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9;])

&#x9;&#x9;-- 11. Update PROJECT_PATH/_scripts/Documentation/constants
&#x9;&#x9;,(&#x9;2019.200, bestPracticesVersionCurrent, &apos;update&apos;, null, null, null,
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation/constants&apos;,&apos;PROCEDURE&apos;)],
&#x9;&#x9;&#x9;VECTOR[&#x9;--updateAction,&#x9;occur,numLines,&#x9;keyTextVerify,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;searchText,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;replaceText
&#x9;&#x9;&#x9;&#x9;&#x9; (&apos;replace&apos;,&#x9;&#x9;0,&#x9;0,&#x9;&#x9;&apos;$SCRIPTS_PATH_DST_RESERVED&apos;,&#x9;&#x9;&#x9;bestPracticesRootPath||&apos;/DataAbstraction_GENERIC_Template/&quot;_scripts&quot;&apos;,&#x9;&apos;$SCRIPTS_PATH_DST_RESERVED&apos;) 
&#x9;&#x9;&#x9;&#x9;&#x9;])

&#x9;&#x9;-- 12. UpdateTrigger PROJECT_PATH/_scripts/Documentation
&#x9;&#x9;,(&#x9;2019.200, bestPracticesVersionCurrent, &apos;updateTrigger&apos;, null, null, null,
&#x9;&#x9;&#x9;VECTOR[(&apos;$SCRIPTS_PATH_DST/Documentation&apos;,&apos;CONTAINER&apos;)],
&#x9;&#x9;&#x9;VECTOR[&#x9;--updateAction,&#x9;occur,numLines,&#x9;keyTextVerify,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;searchText,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;replaceText
&#x9;&#x9;&#x9;&#x9;&#x9; (&apos;restoreParam&apos;,&#x9;0,&#x9;0,&#x9;&#x9;&apos;&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;$SCRIPTS_PATH_DST&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9;,(&apos;fixParam&apos;,&#x9;&#x9;0,&#x9;0,&#x9;&#x9;&apos;&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;&apos;,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&apos;&apos;)
&#x9;&#x9;&#x9;&#x9;&#x9;])

&#x9;&#x9;-- 13. Restore default values from original at PROJECT_PATH/Constants/defaultValues
&#x9;&#x9;,(&#x9;2019.200, bestPracticesVersionCurrent, &apos;restoreDefaultValues&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 14. Restore documentation constants from original at PROJECT_PATH/Documentation/constants
&#x9;&#x9;,(&#x9;2019.200, bestPracticesVersionCurrent, &apos;restoreDocConstants&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 15. Configure starting Folders PROJECT_PATH/_scripts/Configure
&#x9;&#x9;,(&#x9;2019.200, bestPracticesVersionCurrent, &apos;configFolders&apos;, null, null, null, VECTOR[(&apos;$SCRIPTS_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 16. Rebind all resources starting at PROJECT_PATH/_scripts from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
&#x9;&#x9;,(&#x9;2019.200, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$SCRIPTS_PATH_DST&apos;, &apos;CONTAINER&apos;, &#x9;&#x9;VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 17. Rebind all resources starting at PROJECT_PATH/Application from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
&#x9;&#x9;,(&#x9;2019.200, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Application&apos;, &apos;CONTAINER&apos;, &#x9;VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 18. Rebind all resources starting at PROJECT_PATH/Business from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
&#x9;&#x9;,(&#x9;2019.200, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Business&apos;, &apos;CONTAINER&apos;, &#x9;&#x9;VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 19. Rebind all resources starting at PROJECT_PATH/Physical from Previous Utilities path (/shared/PSAssets/BestPractices_v80) to Best practices Current (/shared/ASAssets/BestPractices_v81)
&#x9;&#x9;,(&#x9;2019.200, bestPracticesVersionCurrent, &apos;rebind&apos;, &apos;$PROJECT_PATH_DST/Physical&apos;, &apos;CONTAINER&apos;, &#x9;&#x9;VECTOR[(&apos;/shared/PSAssets/BestPractices_v80&apos;,&apos;CONTAINER&apos;)], VECTOR[(bestPracticesRootPath,&apos;CONTAINER&apos;)], null)

&#x9;&#x9;-- 20. Update CRUD procedures within the destination project path
&#x9;&#x9;,(&#x9;2019.200, bestPracticesVersionCurrent, &apos;updateCrud&apos;, null, null, null, VECTOR[(&apos;$PROJECT_PATH_DST&apos;,&apos;CONTAINER&apos;)], null)

/********************************************************
 * Add more sections over time...
 * Actions to upgrade the previous YYYY.MMM to the most current version: 
 * &#x9;1) Copy the last upgrade section including the comment header for the section.
 *  2) Paste above this comment marker and after the previous release leaving a couple of blank lines in between.
 *  3) Modify the first column in the vector formatted as YYYY.MMM with the previous release.
 *  4) If any new modifications are required then add them into that section preferrably at the end if possible.
 *  5) Add the new section backwards in every section back to and including 8.1.
 *     This is required so that when a particular release is found, it executes the necessary actions to bring that 
 *     release up to par with the current release.  Release upgrades are not sequential.  All of the upgrade actions
 *     are defined within the context of the release version that was found at the time of upgrade.
 ********************************************************/

&#x9;];



&#x9;/********************************************************
&#x9; * Validate all entries and raise exception if invalid
&#x9; *
&#x9; * Return only the section that matches both the
&#x9; *   bestPracticesVersionFrom and bestPracticesVersionTo
&#x9; *
&#x9; * Replace all $PROJECT_PATH_DST variables with the actual
&#x9; *   project path that is passed.
&#x9; ********************************************************/
&#x9;set j = 0;
&#x9;set i = 1;
&#x9;WHILE (i &lt;= CARDINALITY(masterUpgradeVector)) DO

&#x9;&#x9;-- Validate the resource action and masterUpgradeVector vector
&#x9;&#x9;--&#x9;&#x9;     copy - copy srcResource to dstResource.  srcResource and dstResource required.  updateStruct is null.
&#x9;&#x9;--&#x9;                if resource type is CONTAINER then copy all resources
&#x9;&#x9;--&#x9;                if resource type is not CONTAINER then copy specific resource
&#x9;&#x9;--   copyNotExist - copy srcResource to dstResource.  srcResource and dstResource required.  updateStruct is null.
&#x9;&#x9;--&#x9;                if resource type is CONTAINER then copy all resources if they do not exist but do not overwrite existing resources.
&#x9;&#x9;--&#x9;                if resource type is not CONTAINER then copy specific resource if it does not exist.
&#x9;&#x9;--&#x9;&#x9;copyLeave - copy srcResource to _Copy_#.  srcResource is required.  dstResource and updateStruct are null.
&#x9;&#x9;--&#x9;                Creates a copy of a resource and leaves the original in place. 
&#x9;&#x9;--&#x9;                The copy detects other copies an increments the number as needed in the format of _Copy_#
&#x9;&#x9;--&#x9;   copyRename - copy srcResource to _Copy_#.  srcResource is required.  dstResource and updateStruct are null.
&#x9;&#x9;--&#x9;                Creates a copy of a resource and renames the original to it.  The original is no longer present.
&#x9;&#x9;--&#x9;                The copy detects other copies an increments the number as needed in the format of _Copy_#
&#x9;&#x9;--&#x9; copyChildren - copy the children of srcResource to dstResource.  srcResource and dstResource required.  updateStruct is null.
&#x9;&#x9;--&#x9;                Only copying from CONTAINER to CONTAINER is allowed.
&#x9;&#x9;--&#x9;&#x9;   update - update dstResource using updateStruct.  srcResource is null.
&#x9;&#x9;--  updateTrigger - update all trigger resources found starting at dstResource using updateStruct.  srcResource is null.
&#x9;&#x9;--&#x9;&#x9;&#x9;&#x9;&#x9; dstResource can be a single trigger or folder of triggers.
&#x9;&#x9;--&#x9;   updateCrud - update CRUD resources specified by dstResource using updateStruct.  srcResource is null.
&#x9;&#x9;--&#x9;&#x9;   delete - delete dstResource.  srcResource and updateStruct are null.
&#x9;&#x9;--&#x9;&#x9;     move - move srcResource to dstResource.  updateStruct is null.
&#x9;&#x9;--     moveCustom - move all custom scripts from srcResource folder to the specified dstResource folder. updateStruct is null.
&#x9;&#x9;--                  a custom resource is determined by finding a resource in dstResource that is not in the DataAbstraction_GENERIC_Template.
&#x9;&#x9;--         rebind - rebind srcResource to dstResource using startingFolder.  updateStruct is null.
&#x9;&#x9;--  configFolders - configure the starting folders.
&#x9;&#x9;-- restoreDefaultValues - restores the folder layer constant values with the copy of defaultValues made during the upgrade.
&#x9;&#x9;-- restoreDocConstants - restores the documentation constants with the copy of constants made during the upgrade.
&#x9;&#x9;set resourceAction = masterUpgradeVector[i].resourceAction;
&#x9;&#x9;CASE UPPER(resourceAction)
&#x9;&#x9;&#x9;WHEN &apos;COPY&apos; THEN
&#x9;&#x9;&#x9;&#x9;if (masterUpgradeVector[i].srcResource is null) then
&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].srcResource may not be null.&apos;;
&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;if (masterUpgradeVector[i].dstResource is null) then
&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource may not be null.&apos;;
&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;WHEN &apos;COPYNOTEXIST&apos; THEN
&#x9;&#x9;&#x9;&#x9;if (masterUpgradeVector[i].srcResource is null) then
&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].srcResource may not be null.&apos;;
&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;if (masterUpgradeVector[i].dstResource is null) then
&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource may not be null.&apos;;
&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;WHEN &apos;COPYLEAVE&apos; THEN
&#x9;&#x9;&#x9;&#x9;if (masterUpgradeVector[i].srcResource is null) then
&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].srcResource may not be null.&apos;;
&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;WHEN &apos;COPYRENAME&apos; THEN
&#x9;&#x9;&#x9;&#x9;if (masterUpgradeVector[i].srcResource is null) then
&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].srcResource may not be null.&apos;;
&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;WHEN &apos;COPYCHILDREN&apos; THEN
&#x9;&#x9;&#x9;&#x9;if (masterUpgradeVector[i].srcResource is null) then
&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].srcResource may not be null.&apos;;
&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;WHEN &apos;UPDATE&apos; THEN
&#x9;&#x9;&#x9;&#x9;if (masterUpgradeVector[i].dstResource is null) then
&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource may not be null.&apos;;
&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;if (masterUpgradeVector[i].updateStruct is null) then
&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].updateStruct may not be null.&apos;;
&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;WHEN &apos;UPDATETRIGGER&apos; THEN
&#x9;&#x9;&#x9;&#x9;if (masterUpgradeVector[i].dstResource is null) then
&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource may not be null.&apos;;
&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;if (masterUpgradeVector[i].updateStruct is null) then
&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].updateStruct may not be null.&apos;;
&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;WHEN &apos;UPDATECRUD&apos; THEN
&#x9;&#x9;&#x9;&#x9;if (masterUpgradeVector[i].dstResource is null) then
&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource may not be null.&apos;;
&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;WHEN &apos;DELETE&apos; THEN
&#x9;&#x9;&#x9;&#x9;if (masterUpgradeVector[i].dstResource is null) then
&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource may not be null.&apos;;
&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;WHEN &apos;MOVE&apos; THEN
&#x9;&#x9;&#x9;&#x9;if (masterUpgradeVector[i].srcResource is null) then
&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].srcResource may not be null.&apos;;
&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;if (masterUpgradeVector[i].dstResource is null) then
&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource may not be null.&apos;;
&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;WHEN &apos;MOVECUSTOM&apos; THEN
&#x9;&#x9;&#x9;&#x9;if (masterUpgradeVector[i].srcResource is null) then
&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].srcResource may not be null.&apos;;
&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;if (masterUpgradeVector[i].dstResource is null) then
&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource may not be null.&apos;;
&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;WHEN &apos;REBIND&apos; THEN
&#x9;&#x9;&#x9;&#x9;if (masterUpgradeVector[i].resourcePath is null) then
&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].resourcePath may not be null.&apos;;
&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;if (masterUpgradeVector[i].resourceType is null) then
&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].resourceType may not be null.&apos;;
&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;if (masterUpgradeVector[i].srcResource is null) then
&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].srcResource may not be null.&apos;;
&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;if (masterUpgradeVector[i].dstResource is null) then
&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource may not be null.&apos;;
&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;WHEN &apos;CONFIGFOLDERS&apos; THEN
&#x9;&#x9;&#x9;&#x9;if (masterUpgradeVector[i].dstResource is null) then
&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource may not be null.&apos;;
&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;WHEN &apos;RESTOREDEFAULTVALUES&apos; THEN
&#x9;&#x9;&#x9;&#x9;if (masterUpgradeVector[i].dstResource is null) then
&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource may not be null.&apos;;
&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;WHEN &apos;RESTOREDOCCONSTANTS&apos; THEN
&#x9;&#x9;&#x9;&#x9;if (masterUpgradeVector[i].dstResource is null) then
&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource may not be null.&apos;;
&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;ELSE
&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;:  The resource action=[&apos;||NVL(resourceAction,&apos;null&apos;)||&apos;] is not valid.  Please fix vector entry masterUpgradeVector[&apos;||i||&apos;].resourceAction.&apos;;
&#x9;&#x9;END CASE;

&#x9;&#x9;-- Validate the srcResource vector
&#x9;&#x9;set k = 1;
&#x9;&#x9;WHILE (k &lt;= CARDINALITY(masterUpgradeVector[i].srcResource)) DO
&#x9;&#x9;&#x9;-- Validate the srcResource path and type
&#x9;&#x9;&#x9;CASE UPPER(resourceAction)
&#x9;&#x9;&#x9;&#x9;WHEN &apos;COPY&apos; THEN
&#x9;&#x9;&#x9;&#x9;&#x9;if (masterUpgradeVector[i].srcResource[k].&quot;path&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].srcResource[k].&quot;path&quot;||&apos;|&apos;) = 2) then  --Empty
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].srcResource[&apos;||k||&apos;].&quot;path&quot; may not be null or empty.&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;&#x9;if (masterUpgradeVector[i].srcResource[k].&quot;type&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].srcResource[k].&quot;type&quot;||&apos;|&apos;) = 2) then  --Empty
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].srcResource[&apos;||k||&apos;].&quot;type&quot; may not be null or empty.&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;WHEN &apos;COPYNOTEXIST&apos; THEN
&#x9;&#x9;&#x9;&#x9;&#x9;if (masterUpgradeVector[i].srcResource[k].&quot;path&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].srcResource[k].&quot;path&quot;||&apos;|&apos;) = 2) then  --Empty
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].srcResource[&apos;||k||&apos;].&quot;path&quot; may not be null or empty.&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;&#x9;if (masterUpgradeVector[i].srcResource[k].&quot;type&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].srcResource[k].&quot;type&quot;||&apos;|&apos;) = 2) then  --Empty
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].srcResource[&apos;||k||&apos;].&quot;type&quot; may not be null or empty.&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;WHEN &apos;COPYLEAVE&apos; THEN
&#x9;&#x9;&#x9;&#x9;&#x9;if (masterUpgradeVector[i].srcResource[k].&quot;path&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].srcResource[k].&quot;path&quot;||&apos;|&apos;) = 2) then  --Empty
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].srcResource[&apos;||k||&apos;].&quot;path&quot; may not be null or empty.&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;&#x9;if (masterUpgradeVector[i].srcResource[k].&quot;type&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].srcResource[k].&quot;type&quot;||&apos;|&apos;) = 2) then  --Empty
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].srcResource[&apos;||k||&apos;].&quot;type&quot; may not be null or empty.&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;WHEN &apos;COPYRENAME&apos; THEN
&#x9;&#x9;&#x9;&#x9;&#x9;if (masterUpgradeVector[i].srcResource[k].&quot;path&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].srcResource[k].&quot;path&quot;||&apos;|&apos;) = 2) then  --Empty
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].srcResource[&apos;||k||&apos;].&quot;path&quot; may not be null or empty.&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;&#x9;if (masterUpgradeVector[i].srcResource[k].&quot;type&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].srcResource[k].&quot;type&quot;||&apos;|&apos;) = 2) then  --Empty
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].srcResource[&apos;||k||&apos;].&quot;type&quot; may not be null or empty.&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;WHEN &apos;COPYCHILDREN&apos; THEN
&#x9;&#x9;&#x9;&#x9;&#x9;if (masterUpgradeVector[i].srcResource[k].&quot;path&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].srcResource[k].&quot;path&quot;||&apos;|&apos;) = 2) then  --Empty
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].srcResource[&apos;||k||&apos;].&quot;path&quot; may not be null or empty.&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;&#x9;if (masterUpgradeVector[i].srcResource[k].&quot;type&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].srcResource[k].&quot;type&quot;||&apos;|&apos;) = 2) then  --Empty
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].srcResource[&apos;||k||&apos;].&quot;type&quot; may not be null or empty.&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;WHEN &apos;UPDATE&apos; THEN
&#x9;&#x9;&#x9;&#x9;WHEN &apos;UPDATETRIGGER&apos; THEN
&#x9;&#x9;&#x9;&#x9;WHEN &apos;UPDATECRUD&apos; THEN
&#x9;&#x9;&#x9;&#x9;WHEN &apos;DELETE&apos; THEN
&#x9;&#x9;&#x9;&#x9;WHEN &apos;MOVE&apos; THEN
&#x9;&#x9;&#x9;&#x9;&#x9;if (masterUpgradeVector[i].srcResource[k].&quot;path&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].srcResource[k].&quot;path&quot;||&apos;|&apos;) = 2) then  --Empty
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].srcResource[&apos;||k||&apos;].&quot;path&quot; may not be null or empty.&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;&#x9;if (masterUpgradeVector[i].srcResource[k].&quot;type&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].srcResource[k].&quot;type&quot;||&apos;|&apos;) = 2) then  --Empty
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].srcResource[&apos;||k||&apos;].&quot;type&quot; may not be null or empty.&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;WHEN &apos;MOVECUSTOM&apos; THEN
&#x9;&#x9;&#x9;&#x9;&#x9;if (masterUpgradeVector[i].srcResource[k].&quot;path&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].srcResource[k].&quot;path&quot;||&apos;|&apos;) = 2) then  --Empty
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].srcResource[&apos;||k||&apos;].&quot;path&quot; may not be null or empty.&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;&#x9;if (masterUpgradeVector[i].srcResource[k].&quot;type&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].srcResource[k].&quot;type&quot;||&apos;|&apos;) = 2) then  --Empty
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].srcResource[&apos;||k||&apos;].&quot;type&quot; may not be null or empty.&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;WHEN &apos;REBIND&apos; THEN
&#x9;&#x9;&#x9;&#x9;&#x9;if (masterUpgradeVector[i].srcResource[k].&quot;path&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].srcResource[k].&quot;path&quot;||&apos;|&apos;) = 2) then  --Empty
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].srcResource[&apos;||k||&apos;].&quot;path&quot; may not be null or empty.&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;&#x9;if (masterUpgradeVector[i].srcResource[k].&quot;type&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].srcResource[k].&quot;type&quot;||&apos;|&apos;) = 2) then  --Empty
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].srcResource[&apos;||k||&apos;].&quot;type&quot; may not be null or empty.&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;WHEN &apos;CONFIGFOLDERS&apos; THEN
&#x9;&#x9;&#x9;&#x9;WHEN &apos;RESTOREDEFAULTVALUES&apos; THEN
&#x9;&#x9;&#x9;&#x9;WHEN &apos;RESTOREDOCCONSTANTS&apos; THEN
&#x9;&#x9;&#x9;&#x9;ELSE
&#x9;&#x9;&#x9;END CASE;

&#x9;&#x9;&#x9;set k = k + 1;
&#x9;&#x9;END WHILE;

&#x9;&#x9;-- Validate the dstResource vector
&#x9;&#x9;set k = 1;
&#x9;&#x9;WHILE (k &lt;= CARDINALITY(masterUpgradeVector[i].dstResource)) DO
&#x9;&#x9;&#x9;-- Validate the srcResource path and type
&#x9;&#x9;&#x9;CASE UPPER(resourceAction)
&#x9;&#x9;&#x9;&#x9;WHEN &apos;COPY&apos; THEN
&#x9;&#x9;&#x9;&#x9;&#x9;if (masterUpgradeVector[i].dstResource[k].&quot;path&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].dstResource[k].&quot;path&quot;||&apos;|&apos;) = 2) then  --Empty
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource[&apos;||k||&apos;].&quot;path&quot; may not be null or empty.&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;&#x9;if (masterUpgradeVector[i].dstResource[k].&quot;type&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].dstResource[k].&quot;type&quot;||&apos;|&apos;) = 2) then  --Empty
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource[&apos;||k||&apos;].&quot;type&quot; may not be null or empty.&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;WHEN &apos;COPYNOTEXIST&apos; THEN
&#x9;&#x9;&#x9;&#x9;&#x9;if (masterUpgradeVector[i].dstResource[k].&quot;path&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].dstResource[k].&quot;path&quot;||&apos;|&apos;) = 2) then  --Empty
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource[&apos;||k||&apos;].&quot;path&quot; may not be null or empty.&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;&#x9;if (masterUpgradeVector[i].dstResource[k].&quot;type&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].dstResource[k].&quot;type&quot;||&apos;|&apos;) = 2) then  --Empty
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource[&apos;||k||&apos;].&quot;type&quot; may not be null or empty.&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;WHEN &apos;COPYLEAVE&apos; THEN
&#x9;&#x9;&#x9;&#x9;WHEN &apos;COPYRENAME&apos; THEN
&#x9;&#x9;&#x9;&#x9;WHEN &apos;COPYCHILDREN&apos; THEN
&#x9;&#x9;&#x9;&#x9;&#x9;if (masterUpgradeVector[i].dstResource[k].&quot;path&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].dstResource[k].&quot;path&quot;||&apos;|&apos;) = 2) then  --Empty
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource[&apos;||k||&apos;].&quot;path&quot; may not be null or empty.&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;&#x9;if (masterUpgradeVector[i].dstResource[k].&quot;type&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].dstResource[k].&quot;type&quot;||&apos;|&apos;) = 2) then  --Empty
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource[&apos;||k||&apos;].&quot;type&quot; may not be null or empty.&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;WHEN &apos;UPDATE&apos; THEN
&#x9;&#x9;&#x9;&#x9;&#x9;if (masterUpgradeVector[i].dstResource[k].&quot;path&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].dstResource[k].&quot;path&quot;||&apos;|&apos;) = 2) then  --Empty
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource[&apos;||k||&apos;].&quot;path&quot; may not be null or empty.&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;&#x9;if (masterUpgradeVector[i].dstResource[k].&quot;type&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].dstResource[k].&quot;type&quot;||&apos;|&apos;) = 2) then  --Empty
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource[&apos;||k||&apos;].&quot;type&quot; may not be null or empty.&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;WHEN &apos;UPDATETRIGGER&apos; THEN
&#x9;&#x9;&#x9;&#x9;&#x9;if (masterUpgradeVector[i].dstResource[k].&quot;path&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].dstResource[k].&quot;path&quot;||&apos;|&apos;) = 2) then  --Empty
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource[&apos;||k||&apos;].&quot;path&quot; may not be null or empty.&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;&#x9;if (masterUpgradeVector[i].dstResource[k].&quot;type&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].dstResource[k].&quot;type&quot;||&apos;|&apos;) = 2) then  --Empty
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource[&apos;||k||&apos;].&quot;type&quot; may not be null or empty.&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;WHEN &apos;UPDATECRUD&apos; THEN
&#x9;&#x9;&#x9;&#x9;&#x9;if (masterUpgradeVector[i].dstResource[k].&quot;path&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].dstResource[k].&quot;path&quot;||&apos;|&apos;) = 2) then  --Empty
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource[&apos;||k||&apos;].&quot;path&quot; may not be null or empty.&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;&#x9;if (masterUpgradeVector[i].dstResource[k].&quot;type&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].dstResource[k].&quot;type&quot;||&apos;|&apos;) = 2) then  --Empty
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource[&apos;||k||&apos;].&quot;type&quot; may not be null or empty.&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;WHEN &apos;DELETE&apos; THEN
&#x9;&#x9;&#x9;&#x9;&#x9;if (masterUpgradeVector[i].dstResource[k].&quot;path&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].dstResource[k].&quot;path&quot;||&apos;|&apos;) = 2) then  --Empty
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource[&apos;||k||&apos;].&quot;path&quot; may not be null or empty.&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;&#x9;if (masterUpgradeVector[i].dstResource[k].&quot;type&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].dstResource[k].&quot;type&quot;||&apos;|&apos;) = 2) then  --Empty
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource[&apos;||k||&apos;].&quot;type&quot; may not be null or empty.&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;WHEN &apos;MOVE&apos; THEN
&#x9;&#x9;&#x9;&#x9;&#x9;if (masterUpgradeVector[i].dstResource[k].&quot;path&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].dstResource[k].&quot;path&quot;||&apos;|&apos;) = 2) then  --Empty
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource[&apos;||k||&apos;].&quot;path&quot; may not be null or empty.&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;&#x9;if (masterUpgradeVector[i].dstResource[k].&quot;type&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].dstResource[k].&quot;type&quot;||&apos;|&apos;) = 2) then  --Empty
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource[&apos;||k||&apos;].&quot;type&quot; may not be null or empty.&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;WHEN &apos;MOVECUSTOM&apos; THEN
&#x9;&#x9;&#x9;&#x9;&#x9;if (masterUpgradeVector[i].dstResource[k].&quot;path&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].dstResource[k].&quot;path&quot;||&apos;|&apos;) = 2) then  --Empty
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource[&apos;||k||&apos;].&quot;path&quot; may not be null or empty.&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;&#x9;if (masterUpgradeVector[i].dstResource[k].&quot;type&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].dstResource[k].&quot;type&quot;||&apos;|&apos;) = 2) then  --Empty
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource[&apos;||k||&apos;].&quot;type&quot; may not be null or empty.&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;WHEN &apos;REBIND&apos; THEN
&#x9;&#x9;&#x9;&#x9;&#x9;if (masterUpgradeVector[i].dstResource[k].&quot;path&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].dstResource[k].&quot;path&quot;||&apos;|&apos;) = 2) then  --Empty
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource[&apos;||k||&apos;].&quot;path&quot; may not be null or empty.&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;&#x9;if (masterUpgradeVector[i].dstResource[k].&quot;type&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].dstResource[k].&quot;type&quot;||&apos;|&apos;) = 2) then  --Empty
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource[&apos;||k||&apos;].&quot;type&quot; may not be null or empty.&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;WHEN &apos;CONFIGFOLDERS&apos; THEN
&#x9;&#x9;&#x9;&#x9;&#x9;if (masterUpgradeVector[i].dstResource[k].&quot;path&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].dstResource[k].&quot;path&quot;||&apos;|&apos;) = 2) then  --Empty
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource[&apos;||k||&apos;].&quot;path&quot; may not be null or empty.&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;&#x9;if (masterUpgradeVector[i].dstResource[k].&quot;type&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].dstResource[k].&quot;type&quot;||&apos;|&apos;) = 2) then  --Empty
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource[&apos;||k||&apos;].&quot;type&quot; may not be null or empty.&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;WHEN &apos;RESTOREDEFAULTVALUES&apos; THEN
&#x9;&#x9;&#x9;&#x9;&#x9;if (masterUpgradeVector[i].dstResource[k].&quot;path&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].dstResource[k].&quot;path&quot;||&apos;|&apos;) = 2) then  --Empty
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource[&apos;||k||&apos;].&quot;path&quot; may not be null or empty.&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;&#x9;if (masterUpgradeVector[i].dstResource[k].&quot;type&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].dstResource[k].&quot;type&quot;||&apos;|&apos;) = 2) then  --Empty
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource[&apos;||k||&apos;].&quot;type&quot; may not be null or empty.&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;WHEN &apos;RESTOREDOCCONSTANTS&apos; THEN
&#x9;&#x9;&#x9;&#x9;&#x9;if (masterUpgradeVector[i].dstResource[k].&quot;path&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].dstResource[k].&quot;path&quot;||&apos;|&apos;) = 2) then  --Empty
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource[&apos;||k||&apos;].&quot;path&quot; may not be null or empty.&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;&#x9;if (masterUpgradeVector[i].dstResource[k].&quot;type&quot; IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].dstResource[k].&quot;type&quot;||&apos;|&apos;) = 2) then  --Empty
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;:  masterUpgradeVector[&apos;||i||&apos;].dstResource[&apos;||k||&apos;].&quot;type&quot; may not be null or empty.&apos;;
&#x9;&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;ELSE
&#x9;&#x9;&#x9;END CASE;

&#x9;&#x9;&#x9;set k = k + 1;
&#x9;&#x9;END WHILE;

&#x9;&#x9;-- Validate the updateStruct vector
&#x9;&#x9;set k = 1;
&#x9;&#x9;WHILE (k &lt;= CARDINALITY(masterUpgradeVector[i].updateStruct)) DO
&#x9;&#x9;&#x9;-- Validate the update action - Update Action: replace, replaceBefore, replaceAfter
&#x9;&#x9;&#x9;-- updateAction&#x9;&#x9;&#x9;VARCHAR,&#x9;&#x9;-- Update Action: replace, replaceBefore, replaceAfter
&#x9;&#x9;&#x9;-- occurrence&#x9;&#x9;&#x9;INTEGER,&#x9;&#x9;-- The occurrence of the searchText to act upon.  0=take action on all occurrences
&#x9;&#x9;&#x9;-- numLines&#x9;&#x9;&#x9;&#x9;INTEGER,&#x9;&#x9;-- If updateAction=replaceBefore or replaceAfter, then then perform that action by searching
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--   for the number of lines CHR(10) either before or after and placing the text at that location.
&#x9;&#x9;&#x9;-- searchText&#x9;&#x9;&#x9;LONGVARCHAR,&#x9;-- The text to search for.  
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-- If multiple occurrences are found the action may be taken according to the defined occurrence.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-- If the searchText is not found then no action is taken.
&#x9;&#x9;&#x9;-- replaceText&#x9;&#x9;&#x9;LONGVARCHAR&#x9;&#x9;-- The text to replace given the update action.
&#x9;&#x9;&#x9;if (masterUpgradeVector[i].updateStruct[k].updateAction IS NULL OR LENGTH(&apos;|&apos;||masterUpgradeVector[i].updateStruct[k].updateAction||&apos;|&apos;) = 2) then  --Empty
&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;:  The entry masterUpgradeVector[&apos;||i||&apos;].updateStruct[&apos;||k||&apos;].updateAction may not be null or empty.&apos;;
&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;if (masterUpgradeVector[i].updateStruct[k].occurrence is null) then
&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;:  The entry masterUpgradeVector[&apos;||i||&apos;].updateStruct[&apos;||k||&apos;].occurrence may not be null.&apos;;
&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;if (masterUpgradeVector[i].updateStruct[k].numLines is null) then
&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;:  The entry masterUpgradeVector[&apos;||i||&apos;].updateStruct[&apos;||k||&apos;].numLines may not be null.&apos;;
&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;if (masterUpgradeVector[i].updateStruct[k].searchText is null) then
&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;:  The entry masterUpgradeVector[&apos;||i||&apos;].updateStruct[&apos;||k||&apos;].searchText may not be null or empty.&apos;;
&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;if (masterUpgradeVector[i].updateStruct[k].replaceText is null) then
&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;:  The entry masterUpgradeVector[&apos;||i||&apos;].updateStruct[&apos;||k||&apos;].replaceText may not be null or empty.&apos;;
&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;set updateAction = masterUpgradeVector[i].updateStruct[k].updateAction;
&#x9;&#x9;&#x9;CASE UPPER(updateAction)
&#x9;&#x9;&#x9;&#x9;WHEN &apos;MODIFYCONSTANT&apos; THEN&#x9;-- For update
&#x9;&#x9;&#x9;&#x9;WHEN &apos;REPLACE&apos; THEN&#x9;&#x9;&#x9;-- For update
&#x9;&#x9;&#x9;&#x9;WHEN &apos;REPLACEBEFORE&apos; THEN&#x9;-- For update
&#x9;&#x9;&#x9;&#x9;WHEN &apos;REPLACEAFTER&apos; THEN&#x9;-- For update
&#x9;&#x9;&#x9;&#x9;WHEN &apos;REPLACEPATH&apos; THEN &#x9;-- For updateTrigger
&#x9;&#x9;&#x9;&#x9;WHEN &apos;REPLACEPARAM&apos; THEN&#x9;-- For updateTriger
&#x9;&#x9;&#x9;&#x9;WHEN &apos;FIXPARAM&apos; THEN&#x9;&#x9;-- For updateTriger
&#x9;&#x9;&#x9;&#x9;WHEN &apos;RESTOREPARAM&apos; THEN&#x9;-- For updateTrigger
&#x9;&#x9;&#x9;&#x9;ELSE
&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;:  The update action=[&apos;||NVL(updateAction,&apos;null&apos;)||&apos;] is not valid.  Please fix vector entry masterUpgradeVector[&apos;||i||&apos;].updateStruct[&apos;||k||&apos;].updateAction.&apos;;
&#x9;&#x9;&#x9;END CASE;
&#x9;&#x9;&#x9;set k = k + 1;
&#x9;&#x9;END WHILE;

&#x9;&#x9;-- Get only the master upgrade vector items that match the &quot;From&quot; and &quot;To&quot; versions passed in
&#x9;&#x9;-- Replace $PROJECT_PATH_DST as needed
&#x9;&#x9;IF (bestPracticesVersionFrom = masterUpgradeVector[i].bestPracticesVersionFrom AND bestPracticesVersionTo = masterUpgradeVector[i].bestPracticesVersionTo) THEN
&#x9;&#x9;&#x9;IF (upgradeVector is null) then
&#x9;&#x9;&#x9;&#x9;set upgradeVector = VECTOR[(null)];
&#x9;&#x9;&#x9;ELSE
&#x9;&#x9;&#x9;&#x9;set upgradeVector = EXTEND(upgradeVector,1);
&#x9;&#x9;&#x9;END IF;&#x9;
&#x9;&#x9;&#x9;set j = j + 1;
&#x9;&#x9;&#x9;set upgradeVector[j] = masterUpgradeVector[i];

&#x9;&#x9;&#x9;if (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;&#x9;call print(moduleName||&apos; : ACTION=&apos;||resourceAction||&apos;:&apos;);
&#x9;&#x9;&#x9;&#x9;call print(moduleName||&apos; : BEFORE=upgradeVector[&apos;||j||&apos;].resourcePath=&apos;||NVL(upgradeVector[j].resourcePath,&apos;null&apos;));
&#x9;&#x9;&#x9;end if;

&#x9;&#x9;&#x9;-- set the $PROJECT_PATH_SRC for the startingFolder
&#x9;&#x9;&#x9;set upgradeVector[j].resourcePath = REPLACE(REPLACE(upgradeVector[j].resourcePath, &apos;$PROJECT_PATH_SRC&apos;, TRIM(NVL(projectPathSrc,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
&#x9;&#x9;&#x9;-- set the $PROJECT_PATH_DST_RESERVED for the startingFolder
&#x9;&#x9;&#x9;set upgradeVector[j].resourcePath = REPLACE(REPLACE(upgradeVector[j].resourcePath, &apos;$PROJECT_PATH_DST_RESERVED&apos;, TRIM(NVL(projectPathDstReserved,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
&#x9;&#x9;&#x9;-- set the $PROJECT_NAME_RESERVED for the startingFolder
&#x9;&#x9;&#x9;set upgradeVector[j].resourcePath = REPLACE(REPLACE(upgradeVector[j].resourcePath, &apos;$PROJECT_NAME_RESERVED&apos;, TRIM(NVL(projectNameReserved,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
&#x9;&#x9;&#x9;-- set the $PROJECT_PATH_DST for the startingFolder
&#x9;&#x9;&#x9;set upgradeVector[j].resourcePath = REPLACE(REPLACE(upgradeVector[j].resourcePath, &apos;$PROJECT_PATH_DST&apos;, TRIM(NVL(projectPathDst,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
&#x9;&#x9;&#x9;-- set the $SCRIPTS_PATH_DST_DERIVED for the startingFolder
&#x9;&#x9;&#x9;set upgradeVector[j].resourcePath = REPLACE(REPLACE(upgradeVector[j].resourcePath, &apos;$SCRIPTS_PATH_DST_DERIVED&apos;, TRIM(NVL(scriptsPathDstDerived,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
&#x9;&#x9;&#x9;-- Set the $SCRIPTS_PATH_DST_RESERVED variable for startingFolder
&#x9;&#x9;&#x9;set upgradeVector[j].resourcePath = REPLACE(REPLACE(upgradeVector[j].resourcePath, &apos;$SCRIPTS_PATH_DST_RESERVED&apos;, TRIM(NVL(scriptsPathDstReserved,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
&#x9;&#x9;&#x9;-- set the $SCRIPTS_PATH_DST for the startingFolder
&#x9;&#x9;&#x9;set upgradeVector[j].resourcePath = REPLACE(REPLACE(upgradeVector[j].resourcePath, &apos;$SCRIPTS_PATH_DST&apos;, TRIM(NVL(scriptsPathDst,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);

&#x9;&#x9;&#x9;if (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;&#x9;call print(moduleName||&apos; :  AFTER=upgradeVector[&apos;||j||&apos;].resourcePath=&apos;||NVL(upgradeVector[j].resourcePath,&apos;null&apos;));
&#x9;&#x9;&#x9;end if;

&#x9;&#x9;&#x9;-- set the $PROJECT_PATH_SRC for the srcResource vector
&#x9;&#x9;&#x9;set k = 1;
&#x9;&#x9;&#x9;WHILE (k &lt;= CARDINALITY(upgradeVector[j].srcResource)) DO
&#x9;&#x9;&#x9;&#x9;if (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;call print(moduleName||&apos; : BEFORE=upgradeVector[&apos;||j||&apos;].srcResource[&apos;||k||&apos;].&quot;path&quot;=&apos;||NVL(upgradeVector[j].srcResource[k].&quot;path&quot;,&apos;null&apos;));
&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;-- Set the $PROJECT_PATH_SRC variable for the source path
&#x9;&#x9;&#x9;&#x9;set upgradeVector[j].srcResource[k].&quot;path&quot; = REPLACE(REPLACE(upgradeVector[j].srcResource[k].&quot;path&quot;, &apos;$PROJECT_PATH_SRC&apos;, TRIM(NVL(projectPathSrc,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
&#x9;&#x9;&#x9;&#x9;-- set the $PROJECT_PATH_DST_RESERVED for the soure path
&#x9;&#x9;&#x9;&#x9;set upgradeVector[j].srcResource[k].&quot;path&quot; = REPLACE(REPLACE(upgradeVector[j].srcResource[k].&quot;path&quot;, &apos;$PROJECT_PATH_DST_RESERVED&apos;, TRIM(NVL(projectPathDstReserved,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
&#x9;&#x9;&#x9;&#x9;-- set the $PROJECT_NAME_RESERVED for the soure path
&#x9;&#x9;&#x9;&#x9;set upgradeVector[j].srcResource[k].&quot;path&quot; = REPLACE(REPLACE(upgradeVector[j].srcResource[k].&quot;path&quot;, &apos;$PROJECT_NAME_RESERVED&apos;, TRIM(NVL(projectNameReserved,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
&#x9;&#x9;&#x9;&#x9;-- Set the $PROJECT_PATH_DST variable for the source path
&#x9;&#x9;&#x9;&#x9;set upgradeVector[j].srcResource[k].&quot;path&quot; = REPLACE(REPLACE(upgradeVector[j].srcResource[k].&quot;path&quot;, &apos;$PROJECT_PATH_DST&apos;, TRIM(NVL(projectPathDst,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
&#x9;&#x9;&#x9;&#x9;-- Set the $SCRIPTS_PATH_DST_DERIVED variable for the source path
&#x9;&#x9;&#x9;&#x9;set upgradeVector[j].srcResource[k].&quot;path&quot; = REPLACE(REPLACE(upgradeVector[j].srcResource[k].&quot;path&quot;, &apos;$SCRIPTS_PATH_DST_DERIVED&apos;, TRIM(NVL(scriptsPathDstDerived,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
&#x9;&#x9;&#x9;&#x9;-- Set the $SCRIPTS_PATH_DST_RESERVED variable for the source path
&#x9;&#x9;&#x9;&#x9;set upgradeVector[j].srcResource[k].&quot;path&quot; = REPLACE(REPLACE(upgradeVector[j].srcResource[k].&quot;path&quot;, &apos;$SCRIPTS_PATH_DST_RESERVED&apos;, TRIM(NVL(scriptsPathDstReserved,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
&#x9;&#x9;&#x9;&#x9;-- Set the $SCRIPTS_PATH_DST variable for the source path
&#x9;&#x9;&#x9;&#x9;set upgradeVector[j].srcResource[k].&quot;path&quot; = REPLACE(REPLACE(upgradeVector[j].srcResource[k].&quot;path&quot;, &apos;$SCRIPTS_PATH_DST&apos;, TRIM(NVL(scriptsPathDst,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
&#x9;&#x9;&#x9;&#x9;if (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;call print(moduleName||&apos; :  AFTER=upgradeVector[&apos;||j||&apos;].srcResource[&apos;||k||&apos;].&quot;path&quot;=&apos;||NVL(upgradeVector[j].srcResource[k].&quot;path&quot;,&apos;null&apos;));
&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;set k = k + 1;
&#x9;&#x9;&#x9;END WHILE;

&#x9;&#x9;&#x9;-- set the $PROJECT_PATH_DST for the dstResource vector
&#x9;&#x9;&#x9;set k = 1;
&#x9;&#x9;&#x9;WHILE (k &lt;= CARDINALITY(upgradeVector[j].dstResource)) DO
&#x9;&#x9;&#x9;&#x9;if (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;call print(moduleName||&apos; : BEFORE=upgradeVector[&apos;||j||&apos;].dstResource[&apos;||k||&apos;].&quot;path&quot;=&apos;||NVL(upgradeVector[j].dstResource[k].&quot;path&quot;,&apos;null&apos;));
&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;-- Set the $PROJECT_PATH_SRC variable for the destination path
&#x9;&#x9;&#x9;&#x9;set upgradeVector[j].dstResource[k].&quot;path&quot; = REPLACE(REPLACE(upgradeVector[j].dstResource[k].&quot;path&quot;, &apos;$PROJECT_PATH_SRC&apos;, TRIM(NVL(projectPathSrc,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
&#x9;&#x9;&#x9;&#x9;-- set the $PROJECT_PATH_DST_RESERVED for the destination path
&#x9;&#x9;&#x9;&#x9;set upgradeVector[j].dstResource[k].&quot;path&quot; = REPLACE(REPLACE(upgradeVector[j].dstResource[k].&quot;path&quot;, &apos;$PROJECT_PATH_DST_RESERVED&apos;, TRIM(NVL(projectPathDstReserved,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
&#x9;&#x9;&#x9;&#x9;-- set the $PROJECT_NAME_RESERVED for the destination path
&#x9;&#x9;&#x9;&#x9;set upgradeVector[j].dstResource[k].&quot;path&quot; = REPLACE(REPLACE(upgradeVector[j].dstResource[k].&quot;path&quot;, &apos;$PROJECT_NAME_RESERVED&apos;, TRIM(NVL(projectNameReserved,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
&#x9;&#x9;&#x9;&#x9;-- Set the $PROJECT_PATH_DST variable for the destination path
&#x9;&#x9;&#x9;&#x9;set upgradeVector[j].dstResource[k].&quot;path&quot; = REPLACE(REPLACE(upgradeVector[j].dstResource[k].&quot;path&quot;, &apos;$PROJECT_PATH_DST&apos;, TRIM(NVL(projectPathDst,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
&#x9;&#x9;&#x9;&#x9;-- Set the $SCRIPTS_PATH_DST_DERIVED variable for the destination path
&#x9;&#x9;&#x9;&#x9;set upgradeVector[j].dstResource[k].&quot;path&quot; = REPLACE(REPLACE(upgradeVector[j].dstResource[k].&quot;path&quot;, &apos;$SCRIPTS_PATH_DST_DERIVED&apos;, TRIM(NVL(scriptsPathDstDerived,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
&#x9;&#x9;&#x9;&#x9;-- Set the $SCRIPTS_PATH_DST_RESERVED variable for the destination path
&#x9;&#x9;&#x9;&#x9;set upgradeVector[j].dstResource[k].&quot;path&quot; = REPLACE(REPLACE(upgradeVector[j].dstResource[k].&quot;path&quot;, &apos;$SCRIPTS_PATH_DST_RESERVED&apos;, TRIM(NVL(scriptsPathDstReserved,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
&#x9;&#x9;&#x9;&#x9;-- Set the $SCRIPTS_PATH_DST variable for the destination path
&#x9;&#x9;&#x9;&#x9;set upgradeVector[j].dstResource[k].&quot;path&quot; = REPLACE(REPLACE(upgradeVector[j].dstResource[k].&quot;path&quot;, &apos;$SCRIPTS_PATH_DST&apos;, TRIM(NVL(scriptsPathDst,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
&#x9;&#x9;&#x9;&#x9;if (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;call print(moduleName||&apos; :  AFTER=upgradeVector[&apos;||j||&apos;].dstResource[&apos;||k||&apos;].&quot;path&quot;=&apos;||NVL(upgradeVector[j].dstResource[k].&quot;path&quot;,&apos;null&apos;));
&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;set k = k + 1;
&#x9;&#x9;&#x9;END WHILE;

&#x9;&#x9;&#x9;-- set the $PROJECT_PATH_DST for the updateStruct vector
&#x9;&#x9;&#x9;set k = 1;
&#x9;&#x9;&#x9;WHILE (k &lt;= CARDINALITY(upgradeVector[j].updateStruct)) DO
&#x9;&#x9;&#x9;&#x9;set updateAction = upgradeVector[j].updateStruct[k].updateAction;
&#x9;&#x9;&#x9;&#x9;if (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;if (updateAction IS NOT NULL) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;call print(moduleName||&apos; : ACTION=&apos;||resourceAction||&apos;: UPDATE ACTION=&apos;||updateAction);
&#x9;&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;&#x9;call print(moduleName||&apos; : BEFORE=upgradeVector[&apos;||j||&apos;].updateStruct[&apos;||k||&apos;].keyTextVerify=&apos;||NVL(upgradeVector[j].updateStruct[k].keyTextVerify,&apos;null&apos;));
&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;-- Set the $PROJECT_PATH_SRC variable for the key verify text
&#x9;&#x9;&#x9;&#x9;set upgradeVector[j].updateStruct[k].keyTextVerify = REPLACE(REPLACE(upgradeVector[j].updateStruct[k].keyTextVerify, &apos;$PROJECT_PATH_SRC&apos;, TRIM(NVL(projectPathSrc,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
&#x9;&#x9;&#x9;&#x9;-- Set the $PROJECT_PATH_DST_RESERVED variable for the key verify text
&#x9;&#x9;&#x9;&#x9;set upgradeVector[j].updateStruct[k].keyTextVerify = REPLACE(REPLACE(upgradeVector[j].updateStruct[k].keyTextVerify, &apos;$PROJECT_PATH_DST_RESERVED&apos;, TRIM(NVL(projectPathDstReserved,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
&#x9;&#x9;&#x9;&#x9;-- Set the $PROJECT_NAME_RESERVED variable for the key verify text
&#x9;&#x9;&#x9;&#x9;set upgradeVector[j].updateStruct[k].keyTextVerify = REPLACE(REPLACE(upgradeVector[j].updateStruct[k].keyTextVerify, &apos;$PROJECT_NAME_RESERVED&apos;, TRIM(NVL(projectNameReserved,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
&#x9;&#x9;&#x9;&#x9;-- Set the $PROJECT_PATH_DST variable for the key verify text
&#x9;&#x9;&#x9;&#x9;set upgradeVector[j].updateStruct[k].keyTextVerify = REPLACE(REPLACE(upgradeVector[j].updateStruct[k].keyTextVerify, &apos;$PROJECT_PATH_DST&apos;, TRIM(NVL(projectPathDst,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
&#x9;&#x9;&#x9;&#x9;-- Set the $SCRIPTS_PATH_DST_DERIVED variable for the key verify text
&#x9;&#x9;&#x9;&#x9;set upgradeVector[j].updateStruct[k].keyTextVerify = REPLACE(REPLACE(upgradeVector[j].updateStruct[k].keyTextVerify, &apos;$SCRIPTS_PATH_DST_DERIVED&apos;, TRIM(NVL(scriptsPathDstDerived,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
&#x9;&#x9;&#x9;&#x9;-- Set the $SCRIPTS_PATH_DST_RESERVED variable for the key verify text
&#x9;&#x9;&#x9;&#x9;set upgradeVector[j].updateStruct[k].keyTextVerify = REPLACE(REPLACE(upgradeVector[j].updateStruct[k].keyTextVerify, &apos;$SCRIPTS_PATH_DST_RESERVED&apos;, TRIM(NVL(scriptsPathDstReserved,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
&#x9;&#x9;&#x9;&#x9;-- Set the $SCRIPTS_PATH_DST variable for the key verify text
&#x9;&#x9;&#x9;&#x9;set upgradeVector[j].updateStruct[k].keyTextVerify = REPLACE(REPLACE(upgradeVector[j].updateStruct[k].keyTextVerify, &apos;$SCRIPTS_PATH_DST&apos;, TRIM(NVL(scriptsPathDst,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
&#x9;&#x9;&#x9;&#x9;if (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;call print(moduleName||&apos; :  AFTER=upgradeVector[&apos;||j||&apos;].updateStruct[&apos;||k||&apos;].keyTextVerify=&apos;||NVL(upgradeVector[j].updateStruct[k].keyTextVerify,&apos;null&apos;));
&#x9;&#x9;&#x9;&#x9;end if;

&#x9;&#x9;&#x9;&#x9;if (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;call print(moduleName||&apos; : BEFORE=upgradeVector[&apos;||j||&apos;].updateStruct[&apos;||k||&apos;].searchText=&apos;||NVL(upgradeVector[j].updateStruct[k].searchText,&apos;null&apos;));
&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;-- Set the $PROJECT_PATH_SRC variable for the search text
&#x9;&#x9;&#x9;&#x9;set upgradeVector[j].updateStruct[k].searchText = REPLACE(REPLACE(upgradeVector[j].updateStruct[k].searchText, &apos;$PROJECT_PATH_SRC&apos;, TRIM(NVL(projectPathSrc,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
&#x9;&#x9;&#x9;&#x9;-- Set the $PROJECT_PATH_DST_RESERVED variable for the search text
&#x9;&#x9;&#x9;&#x9;set upgradeVector[j].updateStruct[k].searchText = REPLACE(REPLACE(upgradeVector[j].updateStruct[k].searchText, &apos;$PROJECT_PATH_DST_RESERVED&apos;, TRIM(NVL(projectPathDstReserved,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
&#x9;&#x9;&#x9;&#x9;-- Set the $PROJECT_NAME_RESERVED variable for the search text
&#x9;&#x9;&#x9;&#x9;set upgradeVector[j].updateStruct[k].searchText = REPLACE(REPLACE(upgradeVector[j].updateStruct[k].searchText, &apos;$PROJECT_NAME_RESERVED&apos;, TRIM(NVL(projectNameReserved,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
&#x9;&#x9;&#x9;&#x9;-- Set the $PROJECT_PATH_DST variable for the search text
&#x9;&#x9;&#x9;&#x9;set upgradeVector[j].updateStruct[k].searchText = REPLACE(REPLACE(upgradeVector[j].updateStruct[k].searchText, &apos;$PROJECT_PATH_DST&apos;, TRIM(NVL(projectPathDst,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
&#x9;&#x9;&#x9;&#x9;-- Set the $SCRIPTS_PATH_DST_DERIVED variable for the search text
&#x9;&#x9;&#x9;&#x9;set upgradeVector[j].updateStruct[k].searchText = REPLACE(REPLACE(upgradeVector[j].updateStruct[k].searchText, &apos;$SCRIPTS_PATH_DST_DERIVED&apos;, TRIM(NVL(scriptsPathDstDerived,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
&#x9;&#x9;&#x9;&#x9;-- Set the $SCRIPTS_PATH_DST_RESERVED variable for the search text
&#x9;&#x9;&#x9;&#x9;set upgradeVector[j].updateStruct[k].searchText = REPLACE(REPLACE(upgradeVector[j].updateStruct[k].searchText, &apos;$SCRIPTS_PATH_DST_RESERVED&apos;, TRIM(NVL(scriptsPathDstReserved,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
&#x9;&#x9;&#x9;&#x9;-- Set the $SCRIPTS_PATH_DST variable for the search text
&#x9;&#x9;&#x9;&#x9;set upgradeVector[j].updateStruct[k].searchText = REPLACE(REPLACE(upgradeVector[j].updateStruct[k].searchText, &apos;$SCRIPTS_PATH_DST&apos;, TRIM(NVL(scriptsPathDst,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
&#x9;&#x9;&#x9;&#x9;if (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;call print(moduleName||&apos; :  AFTER=upgradeVector[&apos;||j||&apos;].updateStruct[&apos;||k||&apos;].searchText=&apos;||NVL(upgradeVector[j].updateStruct[k].searchText,&apos;null&apos;));
&#x9;&#x9;&#x9;&#x9;end if;

&#x9;&#x9;&#x9;&#x9;if (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;call print(moduleName||&apos; : BEFORE=upgradeVector[&apos;||j||&apos;].updateStruct[&apos;||k||&apos;].replaceText=&apos;||NVL(upgradeVector[j].updateStruct[k].replaceText,&apos;null&apos;));
&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;-- Set the $PROJECT_PATH_SRC variable for the replace text
&#x9;&#x9;&#x9;&#x9;set upgradeVector[j].updateStruct[k].replaceText = REPLACE(REPLACE(upgradeVector[j].updateStruct[k].replaceText, &apos;$PROJECT_PATH_SRC&apos;, TRIM(NVL(projectPathSrc,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
&#x9;&#x9;&#x9;&#x9;-- Set the $PROJECT_PATH_DST_RESERVED variable for the replace text
&#x9;&#x9;&#x9;&#x9;set upgradeVector[j].updateStruct[k].replaceText = REPLACE(REPLACE(upgradeVector[j].updateStruct[k].replaceText, &apos;$PROJECT_PATH_DST_RESERVED&apos;, TRIM(NVL(projectPathDstReserved,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
&#x9;&#x9;&#x9;&#x9;-- Set the $PROJECT_NAME_RESERVED variable for the replace text
&#x9;&#x9;&#x9;&#x9;set upgradeVector[j].updateStruct[k].replaceText = REPLACE(REPLACE(upgradeVector[j].updateStruct[k].replaceText, &apos;$PROJECT_NAME_RESERVED&apos;, TRIM(NVL(projectNameReserved,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
&#x9;&#x9;&#x9;&#x9;-- Set the $PROJECT_PATH_DST variable for the replace text
&#x9;&#x9;&#x9;&#x9;set upgradeVector[j].updateStruct[k].replaceText = REPLACE(REPLACE(upgradeVector[j].updateStruct[k].replaceText, &apos;$PROJECT_PATH_DST&apos;, TRIM(NVL(projectPathDst,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
&#x9;&#x9;&#x9;&#x9;-- Set the $SCRIPTS_PATH_DST_DERIVED variable for the replace text
&#x9;&#x9;&#x9;&#x9;set upgradeVector[j].updateStruct[k].replaceText = REPLACE(REPLACE(upgradeVector[j].updateStruct[k].replaceText, &apos;$SCRIPTS_PATH_DST_DERIVED&apos;, TRIM(NVL(scriptsPathDstDerived,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
&#x9;&#x9;&#x9;&#x9;-- Set the $SCRIPTS_PATH_DST_RESERVED variable for the replace text
&#x9;&#x9;&#x9;&#x9;set upgradeVector[j].updateStruct[k].replaceText = REPLACE(REPLACE(upgradeVector[j].updateStruct[k].replaceText, &apos;$SCRIPTS_PATH_DST_RESERVED&apos;, TRIM(NVL(scriptsPathDstReserved,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
&#x9;&#x9;&#x9;&#x9;-- Set the $SCRIPTS_PATH_DST variable for the replace text
&#x9;&#x9;&#x9;&#x9;set upgradeVector[j].updateStruct[k].replaceText = REPLACE(REPLACE(upgradeVector[j].updateStruct[k].replaceText, &apos;$SCRIPTS_PATH_DST&apos;, TRIM(NVL(scriptsPathDst,&apos;  &apos;))),&apos;//&apos;,&apos;/&apos;);
&#x9;&#x9;&#x9;&#x9;if (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;&#x9;&#x9;&#x9;call print(moduleName||&apos; :  AFTER=upgradeVector[&apos;||j||&apos;].updateStruct[&apos;||k||&apos;].replaceText=&apos;||NVL(upgradeVector[j].updateStruct[k].replaceText,&apos;null&apos;));
&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;&#x9;set k = k + 1;
&#x9;&#x9;&#x9;END WHILE;
&#x9;&#x9;END IF;
&#x9;&#x9;set i = i + 1;
&#x9;END WHILE;
END</attribute>
  <attribute name="creationDate" type="LONG">0</attribute>
  <attribute name="creatorUserDomain" type="STRING"/>
  <attribute name="creatorUserName" type="STRING"/>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1573161757946</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="p:0:Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
  <attribute name="p:2:Customized" type="STRING">datatype.changed</attribute>
  <attribute name="p:3:Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
  <attribute name="p:4:Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
  <attribute name="references" type="MAP">
    <item>
      <key type="STRING">11/2547</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">11/2449</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">11/2526</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">11/2505</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">11/2564</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">11/2466</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">11/2543</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">11/2522</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/199</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/198</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/197</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">10/2423</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">10/2422</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">10/2442</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/192</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/191</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/190</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/196</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/195</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/194</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/193</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">12/2503</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/189</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">11/2475</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">11/2492</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
  </attribute>
</metadata>