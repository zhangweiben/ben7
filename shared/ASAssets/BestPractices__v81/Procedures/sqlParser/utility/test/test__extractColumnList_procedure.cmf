<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:9a66723c-3693-47f1-a1f0-d7811996f9d5 -->
<metadata name="test_extractColumnList" path="/shared/ASAssets/BestPractices_v81/Procedures/sqlParser/utility/test/test_extractColumnList" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation>&lt;![CDATA[
&#x9;(c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.

]]&gt;</annotation>
  <parameters>
    <parameter name="sqlScriptColumns" direction="OUT" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="fromClause" direction="OUT" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="fromClauseVector" direction="OUT" nullable="true">
      <datatype name="fromClauseVector" type="ARRAY" maxLength="0">
        <itemDatatype>
          <datatype name="FromClause_Type" referenceDefinitionSet="/shared/ASAssets/BestPractices_v81/Procedures/sqlParser/utility/TypeDefinitions" referenceType="FromClause_Type" type="TREE" refId="257">
            <element name="resourcePath">
              <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
            </element>
            <element name="resourceType">
              <datatype name="VARCHAR" type="STRING" maxLength="255"/>
            </element>
            <element name="resourceAlias">
              <datatype name="VARCHAR" type="STRING" maxLength="255"/>
            </element>
            <element name="resourceName">
              <datatype name="VARCHAR" type="STRING" maxLength="255"/>
            </element>
          </datatype>
        </itemDatatype>
      </datatype>
      <attribute name="Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
    </parameter>
    <parameter name="codingListColumns" direction="OUT" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="4000"/>
    </parameter>
    <parameter name="codingListFrom" direction="OUT" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="4000"/>
    </parameter>
    <parameter name="foundNonAsciiChar" direction="OUT" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="result" direction="OUT" nullable="true">
      <datatype name="SqlScriptV2Row" type="TABLE" refId="256">
        <element name="derivedColumn">
          <datatype name="BIT" type="INTEGER" minValue="0" maxValue="1"/>
        </element>
        <element name="sourceAlias">
          <datatype name="VARCHAR" type="STRING" maxLength="4000"/>
        </element>
        <element name="sourceColumn">
          <datatype name="VARCHAR" type="STRING" maxLength="4000"/>
        </element>
        <element name="columnAlias">
          <datatype name="VARCHAR" type="STRING" maxLength="4000"/>
        </element>
        <element name="columnType">
          <datatype name="VARCHAR" type="STRING" maxLength="4096"/>
        </element>
        <element name="sourceExpression">
          <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
        </element>
        <element name="sourceExpressionNoCast">
          <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
        </element>
        <element name="sourceColumnList">
          <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
        </element>
        <element name="functionList">
          <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
        </element>
        <element name="sourcePath">
          <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
        </element>
      </datatype>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
    <privilege group="all" domain="composite" privileges="READ"/>
  </security>
  <dependency target="/shared/ASAssets/BestPractices_v81/Procedures/TypeDefinitions" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/BestPractices_v81/Procedures/sqlParser/utility/TypeDefinitions" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/BestPractices_v81/Procedures/sqlParser/utility/extractColumnList" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="sqlScript" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="fromClauseVector" direction="IN">
        <datatype type="ARRAY" maxLength="0">
          <itemDatatype>
            <datatype name="FromClause_Type" referenceDefinitionSet="/shared/ASAssets/BestPractices_v81/Procedures/sqlParser/utility/TypeDefinitions" referenceType="FromClause_Type" type="TREE" refId="257">
              <element name="resourcePath">
                <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="resourceType">
                <datatype name="VARCHAR" type="STRING" maxLength="255"/>
              </element>
              <element name="resourceAlias">
                <datatype name="VARCHAR" type="STRING" maxLength="255"/>
              </element>
              <element name="resourceName">
                <datatype name="VARCHAR" type="STRING" maxLength="255"/>
              </element>
            </datatype>
          </itemDatatype>
        </datatype>
      </element>
      <element name="codingListColumns" direction="IN">
        <datatype type="STRING" maxLength="4000"/>
      </element>
      <element name="result" direction="OUT">
        <datatype type="TABLE" refId="256">
          <element name="columnExpression">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/BestPractices_v81/Procedures/sqlParser/utility/extractSQLParts" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="inSqlScript" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="debug" direction="IN">
        <datatype type="STRING" minLength="1" maxLength="1"/>
      </element>
      <element name="debug2" direction="IN">
        <datatype type="STRING" minLength="1" maxLength="1"/>
      </element>
      <element name="sqlScriptColumns" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="fromClause" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="codingListColumns" direction="OUT">
        <datatype type="STRING" maxLength="4000"/>
      </element>
      <element name="codingListFrom" direction="OUT">
        <datatype type="STRING" maxLength="4000"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/BestPractices_v81/Procedures/sqlParser/utility/parseFromClause" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="inFromClause" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="codingList" direction="IN">
        <datatype type="STRING" maxLength="4000"/>
      </element>
      <element name="fromClauseVector" direction="OUT">
        <datatype type="ARRAY" maxLength="0">
          <itemDatatype>
            <datatype name="FromClause_Type" referenceDefinitionSet="/shared/ASAssets/BestPractices_v81/Procedures/sqlParser/utility/TypeDefinitions" referenceType="FromClause_Type" type="TREE" refId="257">
              <element name="resourcePath">
                <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="resourceType">
                <datatype name="VARCHAR" type="STRING" maxLength="255"/>
              </element>
              <element name="resourceAlias">
                <datatype name="VARCHAR" type="STRING" maxLength="255"/>
              </element>
              <element name="resourceName">
                <datatype name="VARCHAR" type="STRING" maxLength="255"/>
              </element>
            </datatype>
          </itemDatatype>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/BestPractices_v81/Procedures/sqlParser/utility/test/sqlScriptTestSelections" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="choice" direction="IN">
        <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      </element>
      <element name="resourcePath" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="resourceType" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="fromClause" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="sqlScript" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/log/logDebugMessage" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="moduleName" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="moduleNameType" type="STRING" maxLength="4096"/>
      </element>
      <element name="debug" direction="IN">
        <datatype type="STRING" maxLength="1"/>
      </element>
      <element name="messageText" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <attribute name="Script" type="STRING">/*
&#x9;(c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.
*/
PROCEDURE test_extractColumnList(
&#x9;OUT sqlScriptColumns&#x9;LONGVARCHAR,
&#x9;OUT fromClause&#x9;&#x9;&#x9;LONGVARCHAR,
&#x9;OUT fromClauseVector&#x9;VECTOR(/shared/ASAssets/BestPractices_v81/Procedures/sqlParser/utility/TypeDefinitions.FromClause_Type),
&#x9;OUT codingListColumns&#x9;VARCHAR(4000),
&#x9;OUT codingListFrom&#x9;&#x9;VARCHAR(4000),
&#x9;OUT foundNonAsciiChar&#x9;VARCHAR,
&#x9;OUT result &#x9;&#x9;&#x9;&#x9;PIPE /shared/ASAssets/BestPractices_v81/Procedures/TypeDefinitions.SqlScriptV2Row
/* (
&#x9;&#x9;sourceAlias &#x9;&#x9;&#x9;VARCHAR(4000), 
&#x9;&#x9;sourceColumn &#x9;&#x9;&#x9;VARCHAR(4000), 
&#x9;&#x9;columnAlias &#x9;&#x9;&#x9;VARCHAR(4000), 
&#x9;&#x9;columnType&#x9;&#x9;&#x9;&#x9;VARCHAR,
&#x9;&#x9;sourceExpression &#x9;&#x9;LONGVARCHAR, -- complete source expression as defined in the view
&#x9;&#x9;sourceExpressionNoCast&#x9;LONGVARCHAR, -- source expression with no outer cast 
&#x9;&#x9;functionList&#x9;&#x9;&#x9;LONGVARCHAR, -- list of functions used by the view
&#x9;&#x9;sourcePath &#x9;&#x9;&#x9;&#x9;LONGVARCHAR  -- path to the source view (parent view)
&#x9;)
*/
)
BEGIN
&#x9;DECLARE choice&#x9;&#x9;&#x9;&#x9;INTEGER DEFAULT 9;
&#x9;DECLARE moduleName&#x9;&#x9;&#x9;VARCHAR DEFAULT &apos;test_extractColumnList&apos;;
&#x9;DECLARE debug1&#x9;&#x9;&#x9;&#x9;CHAR(1) DEFAULT &apos;Y&apos;; -- Level 1 debug
&#x9;DECLARE debug2&#x9;&#x9;&#x9;&#x9;CHAR(1) DEFAULT &apos;N&apos;; -- Level 2 debug
&#x9;DECLARE rec&#x9;&#x9;&#x9;&#x9;&#x9;/shared/ASAssets/BestPractices_v81/Procedures/TypeDefinitions.SqlScriptV2Row;
&#x9;DECLARE resourcePath&#x9;&#x9;LONGVARCHAR;
&#x9;DECLARE resourceType&#x9;&#x9;VARCHAR;
&#x9;DECLARE sqlScript&#x9;&#x9;&#x9;LONGVARCHAR;

&#x9;call /shared/ASAssets/BestPractices_v81/Procedures/sqlParser/utility/test/sqlScriptTestSelections(choice, resourcePath, resourceType, fromClause, sqlScript);

&#x9;-- Extract the SQL Columns and From clause
&#x9;call /shared/ASAssets/BestPractices_v81/Procedures/sqlParser/utility/extractSQLParts(sqlScript, debug1, debug2, sqlScriptColumns, fromClause, codingListColumns, codingListFrom);

&#x9;-- Vector of FROM clauses to handle more than one table
&#x9;call /shared/ASAssets/BestPractices_v81/Procedures/sqlParser/utility/parseFromClause(fromClause, codingListFrom, fromClauseVector);

&#x9;-- Double check for any special non-ascii characters
/* &#x9;set outReplaceStr = TRIM(REPLACE(inReplaceStr,chr(13),&apos; &apos;)); -- Carriage return
&#x9;set outReplaceStr = TRIM(REPLACE(outReplaceStr,chr(10),&apos; &apos;)); -- Line Feed
&#x9;set outReplaceStr = TRIM(REPLACE(outReplaceStr,chr(9),&apos; &apos;)); -- Tab

&#x9;--Replace XML carriage return/line feed with a space
&#x9;set outReplaceStr = TRIM(REPLACE(REPLACE(outReplaceStr,&apos;&amp;#xd;&apos;,&apos; &apos;),&apos;&amp;#xD;&apos;,&apos; &apos;)); -- XML Carriage Return representation
&#x9;set outReplaceStr = TRIM(REPLACE(REPLACE(outReplaceStr,&apos;&amp;#xa;&apos;,&apos; &apos;),&apos;&amp;#xA;&apos;,&apos; &apos;)); -- XML Line Feed representation
*/
&#x9;set foundNonAsciiChar = &apos;false&apos;;
&#x9;if ((POSITION(chr(13) IN fromClause) &gt; 0) or 
&#x9;&#x9;(POSITION(chr(10) IN fromClause) &gt; 0) or 
&#x9;&#x9;(POSITION(chr(9)  IN fromClause) &gt; 0) or 
&#x9;&#x9;(POSITION(&apos;&amp;#xd;&apos; IN fromClause) &gt; 0) or 
&#x9;&#x9;(POSITION(&apos;&amp;#xa;&apos; IN fromClause) &gt; 0) or
&#x9;&#x9;(POSITION(&apos;&amp;#xD;&apos; IN fromClause) &gt; 0) or 
&#x9;&#x9;(POSITION(&apos;&amp;#xA;&apos; IN fromClause) &gt; 0) ) then
&#x9;&#x9;&#x9;set foundNonAsciiChar = &apos;true&apos;;
&#x9;end if;

&#x9;-- Extract the columns from the SQL Script into separate rows for processing
&#x9;for r as 
&#x9;&#x9;select * from /shared/ASAssets/BestPractices_v81/Procedures/sqlParser/utility/extractColumnList(sqlScriptColumns, fromClauseVector, codingListColumns) 
&#x9;do
&#x9;&#x9;set rec.sourceExpression = r.columnExpression;
&#x9;&#x9;call /shared/ASAssets/Utilities/log/logDebugMessage(moduleName,debug1,&apos;------------------- Start Process Column -------------------&apos;);
&#x9;&#x9;call /shared/ASAssets/Utilities/log/logDebugMessage(moduleName,debug1,&apos;sourceExpression=&apos;||NVL(rec.sourceExpression,&apos;null&apos;));

&#x9;&#x9;insert into result values(rec);
&#x9;end for;
END</attribute>
  <attribute name="creationDate" type="LONG">1384518840469</attribute>
  <attribute name="creatorUserDomain" type="STRING">composite</attribute>
  <attribute name="creatorUserName" type="STRING">admin</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1560603906783</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="p:2:Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
  <attribute name="references" type="NULL"/>
</metadata>