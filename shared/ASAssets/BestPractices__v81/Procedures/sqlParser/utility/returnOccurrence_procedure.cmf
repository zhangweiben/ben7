<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:e931daa6-7fda-456a-badf-4cdb1c228a1a -->
<metadata name="returnOccurrence" path="/shared/ASAssets/BestPractices_v81/Procedures/sqlParser/utility/returnOccurrence" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation>&lt;![CDATA[returnFolderNameAndFolderPath:
&#x9;-- CIS Repository Helper Procedure --
&#x9;Return the root folder name and the remaing folder path.  Used for traversing folder structures either
&#x9;top down or bottom up.  This procedure is also used when creating a folder structure from beginning to end.
 
&#x9;Input:
&#x9;&#x9;fullResourcePath - Full resource path which includes the path and the resource name  
&#x9;&#x9;&#x9;Values: e.g. /shared/Utilities/repository
&#x9;&#x9;mode - defines the mode by which to extract folder path and root name  
&#x9;&#x9;&#x9;Values: B or E, &apos;B&apos;=beginning folder and remaining folder path, 
&#x9;&#x9;&#x9;&#x9;&#x9;&apos;E&apos;=ending folder remaining folder path
&#x9;Output:
&#x9;&#x9;folderName - contains the root folder name extracted from the incoming fullResourcePath
&#x9;&#x9;&#x9;Values: example:
&#x9;&#x9;&#x9;&#x9;when &apos;B&apos; then &apos;shared&apos;
&#x9;&#x9;&#x9;&#x9;when &apos;E&apos; then &apos;repository&apos;
&#x9;&#x9;folderPath - contains the remaining folder path
&#x9;&#x9;&#x9;Values: example:
&#x9;&#x9;&#x9;&#x9;when &apos;B&apos; then &apos;/Utilities/repository&apos;
&#x9;&#x9;&#x9;&#x9;when &apos;E&apos; then &apos;/shared/Utilities&apos;
&#x9;Exceptions:  none
&#x9;Author:      Mike Tinius
&#x9;Date:        8/2/2010
&#x9;CSW Version: 5.1.0

    Copyright (c) 2010
    Composite Software, Inc.
    All Rights Reserved
&#x9;(c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCO® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.

]]&gt;</annotation>
  <parameters>
    <parameter name="inText" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="mode" direction="IN" nullable="true">
      <datatype name="CHAR" type="STRING" minLength="1" maxLength="1"/>
    </parameter>
    <parameter name="delimiter" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="trimText" direction="IN" nullable="true">
      <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
    </parameter>
    <parameter name="remainderText" direction="OUT" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="resultText" direction="OUT" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
    <privilege group="all" domain="composite" privileges="READ"/>
  </security>
  <attribute name="Script" type="STRING">/* returnOccurrence:
&#x9;Return the root folder name and the remaing folder path.  Used for traversing folder structures either
&#x9;top down or bottom up.  This procedure is also used when creating a folder structure from beginning to end.
 
&#x9;Input:
&#x9;&#x9;inText - Full resource path which includes the path and the resource name  
&#x9;&#x9;&#x9;Values: e.g. /shared/ASAssets/Utilities/repository
&#x9;&#x9;mode - defines the mode by which to extract folder path and root name  
&#x9;&#x9;&#x9;Values: B or E, &apos;B&apos;=beginning folder and remaining folder path, 
&#x9;&#x9;&#x9;&#x9;&#x9;&apos;E&apos;=ending folder remaining folder path
&#x9;&#x9;delimiter - the delimiter to search for
&#x9;&#x9;trimText - 0=do not trim result, 1=do trim result text
&#x9;Output:
&#x9;&#x9;remainderText - contains the root folder name extracted from the incoming fullResourcePath
&#x9;&#x9;&#x9;Values: example:
&#x9;&#x9;&#x9;&#x9;when &apos;B&apos; then &apos;shared&apos;
&#x9;&#x9;&#x9;&#x9;when &apos;E&apos; then &apos;repository&apos;
&#x9;&#x9;resultText - contains the remaining folder path
&#x9;&#x9;&#x9;Values: example:
&#x9;&#x9;&#x9;&#x9;when &apos;B&apos; then &apos;/Utilities/repository&apos;
&#x9;&#x9;&#x9;&#x9;when &apos;E&apos; then &apos;/shared/ASAssets/Utilities&apos;
&#x9;Exceptions:  none

&#x9;Modified Date:&#x9;Modified By:&#x9;&#x9;CSW Version:&#x9;Reason:
&#x9;11/11/2011&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;5.2.0&#x9;&#x9;&#x9;Created new
&#x9;03/15/2013&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;5.2.0&#x9;&#x9;&#x9;Modifications for Best Practices 7.0

&#x9;(c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCO® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.

*/
PROCEDURE returnOccurrence(
&#x9;IN inText&#x9;&#x9;&#x9; &#x9;LONGVARCHAR,  -- text to parse
&#x9;IN mode&#x9;&#x9;&#x9;&#x9;&#x9;CHAR(1), -- &apos;B&apos;=beginning folder and remaining folder path, &apos;E&apos;=ending folder remaining folder path
&#x9;IN delimiter&#x9;&#x9;&#x9;VARCHAR,
&#x9;IN trimText&#x9;&#x9;&#x9;&#x9;INTEGER, --0 do not trim, 1=do trim
&#x9;OUT remainderText&#x9;&#x9;LONGVARCHAR,
&#x9;OUT resultText  &#x9;&#x9;LONGVARCHAR
)
BEGIN
&#x9;DECLARE i &#x9;&#x9;&#x9;&#x9;integer;
&#x9;DECLARE foundMarker &#x9;boolean DEFAULT false;

&#x9;if (inText is not null and trimText = 1) then
&#x9;&#x9;-- Trim any leading or trailing spaces
&#x9;&#x9;set resultText = TRIM(inText);
&#x9;else
&#x9;&#x9;set resultText = inText;
&#x9;end if;
&#x9;-- Extract the beginning folder part
&#x9;if (upper(mode) = &apos;B&apos;) then
&#x9;    if (SUBSTRING(resultText,1,1) = delimiter) then
&#x9;&#x9;&#x9;set resultText = SUBSTRING(resultText,2,LENGTH(resultText));
&#x9;    end if;
&#x9;    set i = POSITION(delimiter IN resultText);
&#x9;    if (i &gt; 0) then
&#x9;&#x9;&#x9;set remainderText = SUBSTRING(resultText, i+1, length(resultText));
&#x9;&#x9;&#x9;set resultText = SUBSTRING(resultText, 1, i-1);
&#x9;    else
&#x9;&#x9;&#x9;set remainderText = &apos;&apos;;
&#x9;    end if;
&#x9;else -- &apos;E&apos;=extract the Ending folder part
&#x9;    set i = length(resultText);
&#x9;    pathLoop:
&#x9;    while (i &gt; 0) do
&#x9;&#x9;if (SUBSTRING(resultText, i, 1) = delimiter) then
&#x9;&#x9;&#x9;set foundMarker = true;
&#x9;&#x9;&#x9;leave pathLoop;
&#x9;&#x9;end if;
&#x9;&#x9;set i = i - 1;
&#x9;    end while;
&#x9;    if (foundMarker) then
&#x9;&#x9;&#x9;set remainderText = SUBSTRING(resultText,1,i-1);
&#x9;&#x9;&#x9;set resultText = SUBSTRING(resultText,i+1,LENGTH(resultText)-i);
&#x9;    end if;
&#x9;end if;
&#x9;if (resultText is not null and trimText = 1) then
&#x9;&#x9;set resultText = TRIM(resultText);
&#x9;end if;
&#x9;if (remainderText is not null and trimText = 1) then
&#x9;&#x9;set remainderText = TRIM(remainderText);
&#x9;end if;
--&#x9;call print(&apos;resultText=&apos;||EmptyStr(resultText));
--&#x9;call print(&apos;remainderText=&apos;||EmptyStr(remainderText));
END</attribute>
  <attribute name="creationDate" type="LONG">0</attribute>
  <attribute name="creatorUserDomain" type="STRING"/>
  <attribute name="creatorUserName" type="STRING"/>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1557255269551</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="NULL"/>
</metadata>