<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:9a66723c-3693-47f1-a1f0-d7811996f9d5 -->
<metadata name="resolveColumnType" path="/shared/ASAssets/BestPractices_v81/Procedures/sqlParser/utility/resolveColumnType" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation>&lt;![CDATA[
&#x9;(c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCO® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.

]]&gt;</annotation>
  <parameters>
    <parameter name="inSourceColumn" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="columnAlias" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="inResColumnTypeList" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="columnNameSearchTag" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="columnTypeSearchTag" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="codingListColumns" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="columnType" direction="OUT" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
    <privilege group="all" domain="composite" privileges="READ"/>
  </security>
  <dependency target="/shared/ASAssets/BestPractices_v81/_ProjectMaintenance/defaultValues" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/log/logDebugMessage" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="moduleName" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="moduleNameType" type="STRING" maxLength="4096"/>
      </element>
      <element name="debug" direction="IN">
        <datatype type="STRING" maxLength="1"/>
      </element>
      <element name="messageText" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/RepoUtils/applyReservedListToWord" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="inWord" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="debug" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="result" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/string/extractBiDelimitedText" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="inText" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="searchTerm" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="openingDelim" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="closingDelim" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="inOccurrence" direction="IN">
        <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      </element>
      <element name="inTrimText" direction="IN">
        <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      </element>
      <element name="inCaseSensitive" direction="IN">
        <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      </element>
      <element name="result" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <attribute name="Script" type="STRING">/*
&#x9;resolveColumnType - Resolve the column type for the given column.

&#x9;Exceptions:  none

&#x9;Modified Date:&#x9;Modified By:&#x9;&#x9;CSW Version:&#x9;Reason:
&#x9;11/11/2011&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;5.2.0&#x9;&#x9;&#x9;Created new
&#x9;03/15/2013&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;5.2.0&#x9;&#x9;&#x9;Modifications for Best Practices 7.0
&#x9;11/20/2014&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;6.2.6&#x9;&#x9;&#x9;8.1.5: Added &apos;P D S&apos; to the getCodedString(&apos;D&apos;, &apos;P D S&apos;, ...) invocation because of a change to getCodedString.
&#x9;04/15/2019&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.8&#x9;&#x9;&#x9;B.P. 2019.200: Added scriptsPath for flexibility of the location of the _scripts folder.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   Changed custom functions to explicit paths.

&#x9;(c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCO® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.

*/
PROCEDURE resolveColumnType(
&#x9;IN  inSourceColumn  &#x9;&#x9;VARCHAR,
&#x9;IN  columnAlias&#x9;&#x9;&#x9;&#x9;VARCHAR,
&#x9;IN&#x9;inResColumnTypeList&#x9;&#x9;LONGVARCHAR,
&#x9;IN  columnNameSearchTag &#x9;VARCHAR,
&#x9;IN  columnTypeSearchTag&#x9;&#x9;VARCHAR,
&#x9;IN  codingListColumns&#x9;&#x9;LONGVARCHAR,
&#x9;OUT columnType&#x9;&#x9;&#x9;&#x9;VARCHAR
)
BEGIN
&#x9;DECLARE moduleName&#x9;&#x9;&#x9;VARCHAR DEFAULT &apos;resolveColumnType&apos;;
&#x9;DECLARE sourceColumn&#x9;&#x9;VARCHAR DEFAULT inSourceColumn;
&#x9;DECLARE resColumnTypeList&#x9;LONGVARCHAR DEFAULT inResColumnTypeList;
&#x9;DECLARE debug&#x9;&#x9;&#x9;&#x9;CHAR(1) DEFAULT /shared/ASAssets/BestPractices_v81/&quot;_ProjectMaintenance&quot;/defaultValues.debugSqlParser3;
&#x9;DECLARE pos&#x9;&#x9;&#x9;&#x9;&#x9;INTEGER;
&#x9;DECLARE columnName&#x9;&#x9;&#x9;VARCHAR DEFAULT &apos;&apos;;
&#x9;DECLARe columnTypeUsed&#x9;&#x9;VARCHAR DEFAULT &apos;&apos;;
&#x9;DECLARE resColumnName&#x9;&#x9;VARCHAR(4000);
&#x9;DECLARE startTime&#x9;&#x9;&#x9;TIMESTAMP DEFAULT CURRENT_TIMESTAMP;
&#x9;DECLARE duration&#x9;&#x9;&#x9;INTERVAL MINUTE TO SECOND;
&#x9;DECLARE seconds&#x9;&#x9;&#x9;&#x9;DECIMAL(32,3);
&#x9;DECLARE debugTime&#x9;&#x9;&#x9;CHAR(1) DEFAULT /shared/ASAssets/BestPractices_v81/&quot;_ProjectMaintenance&quot;/defaultValues.debugTime;

&#x9;call /shared/ASAssets/Utilities/repository/RepoUtils/applyReservedListToWord(sourceColumn, debug, sourceColumn);
&#x9;if (debug = &apos;Y&apos;) then
&#x9;&#x9;call /shared/ASAssets/Utilities/log/logDebugMessage(moduleName,debug,&apos;in   sourceColumn=&apos;||NVL(sourceColumn,&apos;null&apos;));
&#x9;&#x9;call /shared/ASAssets/Utilities/log/logDebugMessage(moduleName,debug,&apos;in   columnAlias=&apos;||NVL(columnAlias,&apos;null&apos;));
&#x9;&#x9;call /shared/ASAssets/Utilities/log/logDebugMessage(moduleName,debug,&apos;in   inResColumnTypeList=&apos;||NVL(inResColumnTypeList,&apos;null&apos;));
&#x9;&#x9;call /shared/ASAssets/Utilities/log/logDebugMessage(moduleName,debug,&apos;in   columnNameSearchTag=&apos;||NVL(columnNameSearchTag,&apos;null&apos;));
&#x9;&#x9;call /shared/ASAssets/Utilities/log/logDebugMessage(moduleName,debug,&apos;in   columnTypeSearchTag=&apos;||NVL(columnTypeSearchTag,&apos;null&apos;));
&#x9;&#x9;call /shared/ASAssets/Utilities/log/logDebugMessage(moduleName,debug,&apos;in   codingListColumns=&apos;||NVL(codingListColumns,&apos;null&apos;));
&#x9;end if;

&#x9;-- Get the columnType from the current resourcePath
&#x9;set columnType = null;
&#x9;if (columnAlias IS NOT NULL AND LENGTH(&apos;|&apos;||columnAlias||&apos;|&apos;) &gt; 2) then  --notEmpty
&#x9;&#x9;set columnName = columnAlias;

&#x9;&#x9;set columnTypeUsed = &apos;columnAlias&apos;;
&#x9;&#x9;if (debug = &apos;Y&apos;) then
&#x9;&#x9;&#x9;call /shared/ASAssets/Utilities/log/logDebugMessage(moduleName,debug,&apos;out  columnTypeUsed=&apos;||columnTypeUsed||&apos;    columnName=&apos;||NVL(columnName,&apos;null&apos;));
&#x9;&#x9;end if;
&#x9;&#x9;set pos = POSITION(columnNameSearchTag||&apos;[&apos;||columnName||&apos; &apos;||columnTypeSearchTag IN resColumnTypeList);
&#x9;&#x9;--call print(&apos;pos=&apos;||pos||&apos;  &apos;||columnNameSearchTag||&apos;[&apos;||columnName||&apos; &apos;||columnTypeSearchTag);
&#x9;&#x9;if (pos &gt; 0) then
&#x9;&#x9;&#x9;-- Set the string so it starts with the found column.  This allows extractBiDelimitedText to select the first occurrence.
&#x9;&#x9;&#x9;set resColumnTypeList = SUBSTRING(resColumnTypeList, pos, LENGTH(resColumnTypeList));
&#x9;&#x9;&#x9;call /shared/ASAssets/Utilities/string/extractBiDelimitedText(resColumnTypeList, columnNameSearchTag, &apos;[&apos;, &apos;]&apos;, 1, 0, 1, resColumnName);
&#x9;&#x9;&#x9;call /shared/ASAssets/Utilities/string/extractBiDelimitedText(resColumnName, columnTypeSearchTag, &apos;{&apos;, &apos;}&apos;, 1, 0, 1, columnType);
&#x9;&#x9;end if;
&#x9;else
&#x9;&#x9;if (sourceColumn IS NOT NULL AND LENGTH(&apos;|&apos;||sourceColumn||&apos;|&apos;) &gt; 2) then  --notEmpty
&#x9;&#x9;&#x9;set columnName = sourceColumn;

&#x9;&#x9;&#x9;set columnTypeUsed = &apos;sourceColumn&apos;;
&#x9;&#x9;&#x9;if (debug = &apos;Y&apos;) then
&#x9;&#x9;&#x9;&#x9;call /shared/ASAssets/Utilities/log/logDebugMessage(moduleName,debug,&apos;out  columnTypeUsed=&apos;||columnTypeUsed||&apos;    columnName=&apos;||NVL(columnName,&apos;null&apos;));
&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;set pos = POSITION(columnNameSearchTag||&apos;[&apos;||columnName||&apos; &apos;||columnTypeSearchTag IN resColumnTypeList);
&#x9;&#x9;&#x9;if (pos &gt; 0) then
&#x9;&#x9;&#x9;&#x9;-- Set the string so it starts with the found column.  This allows extractBiDelimitedText to select the first occurrence.
&#x9;&#x9;&#x9;&#x9;set resColumnTypeList = SUBSTRING(resColumnTypeList, pos, LENGTH(resColumnTypeList));
&#x9;&#x9;&#x9;&#x9;call /shared/ASAssets/Utilities/string/extractBiDelimitedText(resColumnTypeList, columnNameSearchTag, &apos;[&apos;, &apos;]&apos;, 1, 0, 1, resColumnName);
&#x9;&#x9;&#x9;&#x9;call /shared/ASAssets/Utilities/string/extractBiDelimitedText(resColumnName, columnTypeSearchTag, &apos;{&apos;, &apos;}&apos;, 1, 0, 1, columnType);
&#x9;&#x9;&#x9;end if;
&#x9;&#x9;end if;
&#x9;end if;

&#x9;set duration = CURRENT_TIMESTAMP - startTime;
&#x9;set seconds = EXTRACT(SECONDS FROM duration);
&#x9;if (seconds &gt; .03 and debugTime = &apos;Y&apos;) then
&#x9;&#x9;call /shared/ASAssets/Utilities/log/logDebugMessage(moduleName,debugTime,&apos;duration=&apos;||cast(duration as varchar)||&apos;  columnType=&apos;||NVL(columnType,&apos;null&apos;)||&apos;  columnTypeUsed=&apos;||columnTypeUsed||&apos;  columnName=&apos;||columnName);
&#x9;end if;
END</attribute>
  <attribute name="creationDate" type="LONG">0</attribute>
  <attribute name="creatorUserDomain" type="STRING"/>
  <attribute name="creatorUserName" type="STRING"/>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1560603906783</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="NULL"/>
</metadata>