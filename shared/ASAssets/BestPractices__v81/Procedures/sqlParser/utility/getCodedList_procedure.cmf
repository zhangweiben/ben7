<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:9a66723c-3693-47f1-a1f0-d7811996f9d5 -->
<metadata name="getCodedList" path="/shared/ASAssets/BestPractices_v81/Procedures/sqlParser/utility/getCodedList" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation>&lt;![CDATA[
&#x9;(c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCO® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.

]]&gt;</annotation>
  <parameters>
    <parameter name="codingListType" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="codingList" direction="OUT" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="4000"/>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
    <privilege group="all" domain="composite" privileges="READ"/>
  </security>
  <dependency target="/shared/ASAssets/BestPractices_v81/Procedures/sqlParser/utility/encodedValues" type="DEFINITION_SET">
    <datatype name="Tree" type="TREE" refId="257"></datatype>
  </dependency>
  <attribute name="Script" type="STRING">/*&#x9;getCodedList:
&#x9;The set of codes to be used for encoding and decoding sql script objects.

&#x9;Input:
&#x9;&#x9;codingListType&#x9;VARCHAR,&#x9;one of [codingListColumns, codingListFrom, codingListComma, codingListRetriveColumns]
&#x9;Output:
&#x9;&#x9;codingList&#x9;&#x9;VARCHAR(4000),
&#x9;Exceptions:  none

&#x9;Modified Date:&#x9;Modified By:&#x9;&#x9;CSW Version:&#x9;Reason:
&#x9;10/28/2013&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;6.2.0&#x9;&#x9;&#x9;8.0: new.  Perform a string encode or decode of special characters
&#x9;11/20/2014&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;6.2.6&#x9;&#x9;&#x9;8.1.5: Modified codingListFrom to include the same set of code values that columns have because 
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;folders can have the same set of characters that also need to be escpaped.

&#x9;(c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCO® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.
*/
PROCEDURE getCodedList(
&#x9;IN  codingListType&#x9;&#x9;&#x9;&#x9;VARCHAR,&#x9;--[codingListColumns, codingListFrom, codingListComma, codingListRetriveColumns]
&#x9;OUT codingList&#x9;&#x9;&#x9;&#x9;&#x9;VARCHAR(4000)
)
BEGIN
&#x9;DECLARE encodedSpace &#x9;&#x9;&#x9;VARCHAR DEFAULT /shared/ASAssets/BestPractices_v81/Procedures/sqlParser/utility/encodedValues.encodedSpace;  &#x9;&#x9;&#x9;-- _0020 -- &apos; &apos; space
&#x9;DECLARE encodedPeriod &#x9;&#x9;&#x9;VARCHAR DEFAULT /shared/ASAssets/BestPractices_v81/Procedures/sqlParser/utility/encodedValues.encodedPeriod;  &#x9;&#x9;&#x9;-- _002E -- &apos;.&apos; period
&#x9;DECLARE encodedPipe &#x9;&#x9;&#x9;VARCHAR DEFAULT /shared/ASAssets/BestPractices_v81/Procedures/sqlParser/utility/encodedValues.encodedPipe;  &#x9;&#x9;&#x9;-- _007C -- &apos;|&apos; pipe
&#x9;DECLARE encodedComma &#x9;&#x9;&#x9;VARCHAR DEFAULT /shared/ASAssets/BestPractices_v81/Procedures/sqlParser/utility/encodedValues.encodedComma;  &#x9;&#x9;&#x9;-- _002C -- &apos;,&apos; comma
&#x9;DECLARE encodedOpFact&#x9;&#x9;&#x9;VARCHAR DEFAULT /shared/ASAssets/BestPractices_v81/Procedures/sqlParser/utility/encodedValues.encodedOpFact;&#x9;&#x9;&#x9;-- _0021 -- &apos;!&apos; factorial operator
&#x9;DECLARE encodedDollar&#x9;&#x9;&#x9;VARCHAR DEFAULT /shared/ASAssets/BestPractices_v81/Procedures/sqlParser/utility/encodedValues.encodedDollar; &#x9;&#x9;&#x9;-- _0024 -- &apos;$&apos; dollar sign
&#x9;DECLARE encodedOpMod&#x9;&#x9;&#x9;VARCHAR DEFAULT /shared/ASAssets/BestPractices_v81/Procedures/sqlParser/utility/encodedValues.encodedOpMod; &#x9;&#x9;&#x9;-- _0025 -- &apos;%&apos; modulo operator
&#x9;DECLARE encodedLParen&#x9;&#x9;&#x9;VARCHAR DEFAULT /shared/ASAssets/BestPractices_v81/Procedures/sqlParser/utility/encodedValues.encodedLParen;&#x9;&#x9;&#x9;-- _0028 -- &apos;(&apos; left parenthesis
&#x9;DECLARE encodedRParen&#x9;&#x9;&#x9;VARCHAR DEFAULT /shared/ASAssets/BestPractices_v81/Procedures/sqlParser/utility/encodedValues.encodedRParen;&#x9;&#x9;&#x9;-- _0029 -- &apos;)&apos; right parenthesis
&#x9;DECLARE encodedOpMult&#x9;&#x9;&#x9;VARCHAR DEFAULT /shared/ASAssets/BestPractices_v81/Procedures/sqlParser/utility/encodedValues.encodedOpMult;&#x9;&#x9;&#x9;-- _002A -- &apos;*&apos; multiply operator
&#x9;DECLARE encodedOpAdd&#x9;&#x9;&#x9;VARCHAR DEFAULT /shared/ASAssets/BestPractices_v81/Procedures/sqlParser/utility/encodedValues.encodedOpAdd;&#x9;&#x9;&#x9;&#x9;-- _002B -- &apos;+&apos; addition operator
&#x9;DECLARE encodedOpSub&#x9;&#x9;&#x9;VARCHAR DEFAULT /shared/ASAssets/BestPractices_v81/Procedures/sqlParser/utility/encodedValues.encodedOpSub;&#x9;&#x9;&#x9;&#x9;-- _002D -- &apos;-&apos; subtraction operator
&#x9;DECLARE encodedOpDiv&#x9;&#x9;&#x9;VARCHAR DEFAULT /shared/ASAssets/BestPractices_v81/Procedures/sqlParser/utility/encodedValues.encodedOpDiv;&#x9;&#x9;&#x9;&#x9;-- _002F -- &apos;/&apos; division operator
&#x9;DECLARE encodedQuestionMark&#x9;&#x9;VARCHAR DEFAULT /shared/ASAssets/BestPractices_v81/Procedures/sqlParser/utility/encodedValues.encodedQuestionMark;&#x9;&#x9;-- _003F -- &apos;?&apos; question mark
&#x9;DECLARE encodedLeftBracket&#x9;&#x9;VARCHAR DEFAULT /shared/ASAssets/BestPractices_v81/Procedures/sqlParser/utility/encodedValues.encodedLeftBracket;&#x9;&#x9;-- _005B -- &apos;[&apos; right square bracket
&#x9;DECLARE encodedRightBracket&#x9;&#x9;VARCHAR DEFAULT /shared/ASAssets/BestPractices_v81/Procedures/sqlParser/utility/encodedValues.encodedRightBracket;&#x9;&#x9;-- _005D -- &apos;]&apos; left square bracket
&#x9;DECLARE encodedBackslash&#x9;&#x9;VARCHAR DEFAULT /shared/ASAssets/BestPractices_v81/Procedures/sqlParser/utility/encodedValues.encodedBackslash;&#x9;&#x9;&#x9;-- _005C -- &apos;\&apos; backslash
&#x9;DECLARE encodedCarat&#x9;&#x9;&#x9;VARCHAR DEFAULT /shared/ASAssets/BestPractices_v81/Procedures/sqlParser/utility/encodedValues.encodedCarat;&#x9;&#x9;&#x9;&#x9;-- _005E -- &apos;^&apos; carat
&#x9;DECLARE encodedLeftCurlyBracket&#x9;VARCHAR DEFAULT /shared/ASAssets/BestPractices_v81/Procedures/sqlParser/utility/encodedValues.encodedLeftCurlyBracket;&#x9;-- _007B -- &apos;{&apos; left curly bracket
&#x9;DECLARE encodedRightCurlyBracket VARCHAR DEFAULT /shared/ASAssets/BestPractices_v81/Procedures/sqlParser/utility/encodedValues.encodedRightCurlyBracket;-- _007D -- &apos;}&apos; right curly bracket
&#x9;DECLARE encodedSingleQuote&#x9;&#x9;VARCHAR DEFAULT /shared/ASAssets/BestPractices_v81/Procedures/sqlParser/utility/encodedValues.encodedSingleQuote;&#x9;&#x9;-- _0027 -- &apos;&apos;&apos; single quote
&#x9;DECLARE encodedDoubleDoubleQuote VARCHAR DEFAULT /shared/ASAssets/BestPractices_v81/Procedures/sqlParser/utility/encodedValues.encodedDoubleDoubleQuote;-- _0022_0022 -- &apos;&quot;&quot;&apos; Double double quote

&#x9;-- Establish the encoding and decoding list for a column
&#x9;if (codingListType = &apos;codingListColumns&apos;) then
&#x9;&#x9;set codingList = TRIM(encodedDoubleDoubleQuote||&apos;,&apos;||encodedSingleQuote||&apos;,&apos;||encodedSpace||&apos;,&apos;||encodedPeriod||&apos;,&apos;||encodedPipe||&apos;,&apos;||encodedComma||&apos;,&apos;||
&#x9;&#x9;&#x9;encodedOpFact||&apos;,&apos;||encodedDollar||&apos;,&apos;||encodedOpMod||&apos;,&apos;||encodedLParen||&apos;,&apos;||encodedRParen||&apos;,&apos;||encodedOpMult||&apos;,&apos;||encodedOpAdd||&apos;,&apos;||encodedOpSub||&apos;,&apos;||encodedOpDiv||&apos;,&apos;||
&#x9;&#x9;&#x9;encodedQuestionMark||&apos;,&apos;||encodedLeftBracket||&apos;,&apos;||encodedRightBracket||&apos;,&apos;||encodedBackslash||&apos;,&apos;||encodedCarat||&apos;,&apos;||encodedLeftCurlyBracket||&apos;,&apos;||encodedRightCurlyBracket);
&#x9;end if;

&#x9;-- Establish the encoding and decoding list for a from clause [same as columns]
&#x9;if (codingListType = &apos;codingListFrom&apos;) then
&#x9;&#x9;set codingList = TRIM(encodedDoubleDoubleQuote||&apos;,&apos;||encodedSingleQuote||&apos;,&apos;||encodedSpace||&apos;,&apos;||encodedPeriod||&apos;,&apos;||encodedPipe||&apos;,&apos;||encodedComma||&apos;,&apos;||
&#x9;&#x9;&#x9;encodedOpFact||&apos;,&apos;||encodedDollar||&apos;,&apos;||encodedOpMod||&apos;,&apos;||encodedLParen||&apos;,&apos;||encodedRParen||&apos;,&apos;||encodedOpMult||&apos;,&apos;||encodedOpAdd||&apos;,&apos;||encodedOpSub||&apos;,&apos;||encodedOpDiv||&apos;,&apos;||
&#x9;&#x9;&#x9;encodedQuestionMark||&apos;,&apos;||encodedLeftBracket||&apos;,&apos;||encodedRightBracket||&apos;,&apos;||encodedBackslash||&apos;,&apos;||encodedCarat||&apos;,&apos;||encodedLeftCurlyBracket||&apos;,&apos;||encodedRightCurlyBracket);
&#x9;end if;

&#x9;-- Establish the simple encoding list for comma
&#x9;if (codingListType = &apos;codingListComma&apos;) then
&#x9;&#x9;set codingList = TRIM(encodedComma);
&#x9;end if;

&#x9;-- Establish the simp
&#x9;if (codingListType = &apos;codingListRetriveColumns&apos;) then
&#x9;&#x9;set codingList = TRIM(encodedComma||&apos;,&apos;||encodedLeftBracket||&apos;,&apos;||encodedRightBracket||&apos;,&apos;||encodedPipe);
&#x9;end if;
END</attribute>
  <attribute name="creationDate" type="LONG">1385044042248</attribute>
  <attribute name="creatorUserDomain" type="STRING">composite</attribute>
  <attribute name="creatorUserName" type="STRING">admin</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1560603906783</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="NULL"/>
</metadata>