<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:9a66723c-3693-47f1-a1f0-d7811996f9d5 -->
<metadata name="generateCRUD_TypeDefinitionsXML" path="/shared/ASAssets/BestPractices_v81/Procedures/generateCRUD_TypeDefinitionsXML" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation>&lt;![CDATA[
&#x9;(c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.

]]&gt;</annotation>
  <parameters>
    <parameter name="overwrite" direction="IN" nullable="true">
      <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      <attribute name="Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
    </parameter>
    <parameter name="copyPrivilegeMode" direction="IN" nullable="true">
      <datatype name="BIT" type="INTEGER" minValue="0" maxValue="1"/>
    </parameter>
    <parameter name="startingFolderXML" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
      <attribute name="Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
    </parameter>
    <parameter name="inConfigParamsXML" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
      <attribute name="Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
    </parameter>
    <parameter name="inProjectFolderName" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
      <attribute name="Customized" type="STRING">datatype.changed;datatype.changed</attribute>
    </parameter>
    <parameter name="result" direction="OUT" nullable="true">
      <datatype name="generateViewsRow" type="TABLE" refId="256">
        <element name="datasourceName">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="projectFolderName">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="greatGrandParentName">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="grandParentName">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="parentName">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="containerName">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="containerType">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="columnName">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="logicalColumnName">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="logicalColumnType">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="logicalStatus">
          <datatype name="VARCHAR" type="STRING" maxLength="4000"/>
        </element>
        <element name="containerPath">
          <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
        </element>
        <element name="duration">
          <datatype name="IntervalDay" type="INTERVAL_DAY" intervalMode="INTERVAL_HOUR_TO_SECOND" intervalPrecision="2" fractionalSecondPrecision="6"/>
        </element>
      </datatype>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
    <privilege group="all" domain="composite" privileges="READ"/>
  </security>
  <dependency target="/lib/resource/ResourceExists" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="path" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
      </element>
      <element name="type" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceType" type="STRING" maxLength="40"/>
      </element>
      <element name="version" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceVersion" type="STRING" maxLength="255"/>
      </element>
      <element name="exists" direction="OUT">
        <datatype type="BOOLEAN"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/BestPractices_v81/Procedures/TypeDefinitions" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/BestPractices_v81/Procedures/crudProcedures/generateCRUD_TypeDefinitionsXML" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="debug" direction="IN">
        <datatype type="STRING" minLength="1" maxLength="1"/>
      </element>
      <element name="overwrite" direction="IN">
        <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      </element>
      <element name="sourceResource" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="startingFolderXML" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="crudVector" direction="IN">
        <datatype type="ARRAY" maxLength="0">
          <itemDatatype>
            <datatype name="crudGenType" referenceDefinitionSet="/shared/ASAssets/BestPractices_v81/Procedures/TypeDefinitions" referenceType="crudGenType" type="TREE" refId="257">
              <element name="crudPath">
                <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="procedurePath">
                <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="procedureName">
                <datatype name="VARCHAR" type="STRING" maxLength="255"/>
              </element>
              <element name="viewname">
                <datatype name="VARCHAR" type="STRING" maxLength="255"/>
              </element>
              <element name="viewpath">
                <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="constantspath">
                <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="typedefprocpath">
                <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="typedefprocname">
                <datatype name="VARCHAR" type="STRING" maxLength="255"/>
              </element>
              <element name="customcreatepath">
                <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="customupdatepath">
                <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="genUniqueIDPath">
                <datatype name="VARCHAR" type="STRING" maxLength="4000"/>
              </element>
              <element name="pkList">
                <datatype name="pkList" type="ARRAY" maxLength="0">
                  <itemDatatype>
                    <datatype name="crudGenColumnType" type="TREE" refId="513">
                      <element name="colName">
                        <datatype name="VARCHAR" type="STRING" maxLength="255"/>
                      </element>
                      <element name="colType">
                        <datatype name="VARCHAR" type="STRING" maxLength="255"/>
                      </element>
                    </datatype>
                  </itemDatatype>
                </datatype>
              </element>
              <element name="columnList">
                <datatype name="columnList" type="ARRAY" maxLength="0">
                  <itemDatatype>
                    <reference refId="513"/>
                  </itemDatatype>
                </datatype>
              </element>
            </datatype>
          </itemDatatype>
        </datatype>
      </element>
      <element name="inConfigParamsXML" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="status" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/BestPractices_v81/Procedures/getDefaultValuesXML" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="scriptsPath" direction="IN">
        <datatype type="STRING" maxLength="4000"/>
      </element>
      <element name="defaultValuesXML" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/BestPractices_v81/Procedures/xmlGetNodeValue" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="tagName" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="inXMLDoc" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="resultValue" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/BestPractices_v81/Procedures/xmlUpdateNodeValue" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="tagName" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="updateValue" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="inXMLDoc" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="outXMLDoc" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/log/logDebugMessage" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="moduleName" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="moduleNameType" type="STRING" maxLength="4096"/>
      </element>
      <element name="debug" direction="IN">
        <datatype type="STRING" maxLength="1"/>
      </element>
      <element name="messageText" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/copyResourcesPrivilegesV2" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="updatePrivilegesRecursively" direction="IN">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
      <element name="copyPrivilegeMode" direction="IN">
        <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      </element>
      <element name="inCopyPrivilegeEntries" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="success" direction="OUT">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
      <element name="faultResponse" direction="OUT">
        <datatype name="XML" referenceType="XML" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="TYPE" componentName="XML">
          <schemaDatatype>
            <datatype name="XML" type="TREE" refId="257"></datatype>
          </schemaDatatype>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/createAllFoldersPrivileges" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="inSourceFolderPath" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="4000"/>
      </element>
      <element name="updatePrivilegesRecursively" direction="IN">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
      <element name="copyPrivilegeMode" direction="IN">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
      <element name="success" direction="OUT">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
      <element name="faultResponse" direction="OUT">
        <datatype name="XML" referenceType="XML" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="TYPE" componentName="XML">
          <schemaDatatype>
            <datatype name="XML" type="TREE" refId="257"></datatype>
          </schemaDatatype>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/returnFolderNameAndFolderPath" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="fullResourcePath" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="4000"/>
      </element>
      <element name="mode" direction="IN">
        <datatype type="STRING" minLength="1" maxLength="1"/>
      </element>
      <element name="folderName" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="folderPath" direction="OUT">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="4000"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/string/numOccurrences" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="searchString" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="stringToSearch" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="num" direction="OUT">
        <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/xml/extractXMLOccurrence" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="inContentXML" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="inTagName" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="inOccurrence" direction="IN">
        <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      </element>
      <element name="inIncludeDelimiter" direction="IN">
        <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      </element>
      <element name="inTrimText" direction="IN">
        <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      </element>
      <element name="inCaseSensitive" direction="IN">
        <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      </element>
      <element name="status" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="result" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <attribute name="Script" type="STRING">/* 
&#x9;generateCRUD_TypeDefinitionsXML:
&#x9;-- Data Virtualization Best Practices --

&#x9;This procedure generates the Type Definition script text
 
&#x9;Input:
&#x9;&#x9;Environmnet Variables set by invoking generate...Views procedures:
&#x9;&#x9;&#x9;This is an alternative approach to setting variables without modiffying the signature of a procedure.

&#x9;&#x9;&#x9;Local Variable&#x9;&#x9;&#x9;Environment Variable&#x9;&#x9;&#x9;&#x9;Desscription
&#x9;&#x9;&#x9;-----------------------&#x9;---------------------------&#x9;&#x9;&#x9;----------------------------------------
&#x9;&#x9;&#x9;copyPrivilegeMode&#x9;&#x9;best.practices.copyPrivilegeMode&#x9;determine the type of copy: 0=OVERWRITE_APPEND, 1=SET_EXACTLY

&#x9;&#x9;&#x9;-- 0=&quot;FAIL_IF_EXISTS&quot;=do not overwrite the resource.  If the resource exists, raise an exception.
&#x9;&#x9;&#x9;-- 1=&quot;SKIP_IF_EXISTS&quot;=skip the resource if it exists and continue processing
&#x9;&#x9;&#x9;-- 2=&quot;OVERWRITE_IF_EXISTS&quot;=do overwrite the resource if it exists.
&#x9;&#x9;overwrite - allows user to decide whether they want to overwrite an existing view or not.

&#x9;&#x9;&#x9;-- flag indicating the mode in which to copy privileges.  Privileges are only copied from the parent when creating new resources including folders.
&#x9;&#x9;&#x9;-- null (default) - do not set any privileges at all
&#x9;&#x9;&#x9;-- 0 - set mode to &quot;OVERWRITE_APPEND&quot; - merges and does not update privileges for users or groups not mentioned.
&#x9;&#x9;&#x9;-- 1 - set the mode to &quot;SET_EXACTLY&quot; - makes privileges look exactly like those provided in the call.
&#x9;&#x9;copyPrivilegeMode

&#x9;&#x9;&#x9;-- The XML of starting folders including source, target and derived filter path
&#x9;&#x9;startingFolderXML 

&#x9;&#x9;&#x9;-- The XML of configuration parameters.  A full description can be found in /generationScripts/Configure/ConfigureParams
&#x9;&#x9;ConfigParamsXML 

&#x9;&#x9;&#x9;-- the name of the project folder (defaultValue.basePath)(projectName)
&#x9;&#x9;inProjectFolderName

&#x9;Output:
&#x9;&#x9;success&#x9;- 1=success, 0=not successful
&#x9;&#x9;scripttext - the Type Definition procedure script text
&#x9;Exceptions:  none

&#x9;Modified Date:&#x9;Modified By:&#x9;&#x9;CSW Version:&#x9;Reason:
&#x9;06/15/2010&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;5.2.0&#x9;&#x9;&#x9;Created new
&#x9;05/22/2013&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;6.0.0&#x9;&#x9;&#x9;Modified for Best Practices 7.1
&#x9;10/28/2013&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;6.2.2&#x9;&#x9;&#x9;B.P. 8.0: Added inProjectFolderName to the input parameters
&#x9;03/01/2018&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.5&#x9;&#x9;&#x9;Replaced /shared/ASAssets/Utilities/repository/resourceExists with /lib/resource/ResourceExists
&#x9;03/14/2019&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.8&#x9;&#x9;&#x9;B.P. 2019.102: Added scriptsPath for flexibility of the location of the _scripts folder.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   Modified call from copyResourcesPrivileges to copyResourcesPrivilegesV2 to remove VECTOR usage
&#x9;06/12/2019&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.8&#x9;&#x9;&#x9;B.P. 2019.200: Derived the new generateCRUD_TypeDefinitionsXML from generateCRUD_TypeDefinitions to eliminate vector usage.

&#x9;(c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.

*/
PROCEDURE generateCRUD_TypeDefinitionsXML(
&#x9;&#x9;-- 0=&quot;FAIL_IF_EXISTS&quot;=do not overwrite the resource.  If the resource exists, raise an exception.
&#x9;&#x9;-- 1=&quot;SKIP_IF_EXISTS&quot;=skip the resource if it exists and continue processing
&#x9;&#x9;-- 2=&quot;OVERWRITE_IF_EXISTS&quot;=do overwrite the resource if it exists.
&#x9;IN overwrite&#x9;&#x9;&#x9;&#x9;INTEGER,

&#x9;&#x9;-- flag indicating the mode in which to copy privileges.  Privileges are only copied from the parent when creating new resources including folders.
&#x9;&#x9;-- null (default) - do not set any privileges at all
&#x9;&#x9;-- 0 - set mode to &quot;OVERWRITE_APPEND&quot; - merges and does not update privileges for users or groups not mentioned.
&#x9;&#x9;-- 1 - set the mode to &quot;SET_EXACTLY&quot; - makes privileges look exactly like those provided in the call.
&#x9;IN copyPrivilegeMode&#x9;&#x9;BIT,

&#x9;&#x9;-- The XML of starting folders including source, target and derived filter path
&#x9;IN startingFolderXML&#x9;&#x9;LONGVARCHAR,

&#x9;&#x9;-- The XML of configuration parameters.  A full description can be found in /generationScripts/Configure/ConfigureParams
&#x9;IN inConfigParamsXML&#x9;&#x9;LONGVARCHAR,

&#x9;&#x9;-- the name of the project folder (defaultValue.basePath)(projectName)
&#x9;IN inProjectFolderName &#x9;&#x9;VARCHAR,

    OUT result PIPE &#x9;&#x9;&#x9;/shared/ASAssets/BestPractices_v81/Procedures/TypeDefinitions.generateViewsRow
/*  INSERT INTO result VALUES(&apos;&apos;, &apos;&apos;, &apos;&apos;, &apos;&apos;, typeDefProcName, &apos;PROCEDURE&apos;, &apos;GENERATED&apos;, resourcePath);
&#x9;-- CRUD Generation results
&#x9;DECLARE PUBLIC TYPE generateCRUDRow ROW (
&#x9;&#x9;datasourceName&#x9;&#x9;&#x9;VARCHAR(255), 
&#x9;&#x9;greatGrandParentName&#x9;VARCHAR(255), 
&#x9;&#x9;grandParentName&#x9;&#x9;&#x9;VARCHAR(255), 
&#x9;&#x9;parentName&#x9;&#x9;&#x9;&#x9;VARCHAR(255),
        containerName &#x9;&#x9;&#x9;VARCHAR(255), 
        containerType &#x9;&#x9;&#x9;VARCHAR(255), 
        name&#x9; &#x9;&#x9;&#x9;&#x9;VARCHAR(255), 
        logicalName &#x9;&#x9;&#x9;VARCHAR(255), 
        logicalType &#x9;&#x9;&#x9;VARCHAR(255), 
        logicalStatus &#x9;&#x9;&#x9;VARCHAR(255), 
        containerPath &#x9;&#x9;&#x9;TypeDefinitions.pathType
&#x9;);
*/
) 
BEGIN 
&#x9;DECLARE moduleName&#x9;&#x9;&#x9;&#x9;&#x9;VARCHAR DEFAULT &apos;  &apos;||&apos;generateCRUD_TypeDefinitionsXML&apos;;
&#x9;DECLARE debug2&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CHAR(1);
&#x9;DECLARE debug3&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CHAR(1);
&#x9;DECLARE ConfigParamsXML&#x9;&#x9;&#x9;&#x9;LONGVARCHAR DEFAULT inConfigParamsXML;
&#x9;DECLARE scriptsPath&#x9;&#x9;&#x9;&#x9;&#x9;LONGVARCHAR;
&#x9;DECLARE defaultValuesXML&#x9;&#x9;&#x9;LONGVARCHAR;
&#x9;DECLARE defaultValuesRec&#x9;&#x9;&#x9;/shared/ASAssets/BestPractices_v81/Procedures/TypeDefinitions.defaultValuesType;
&#x9;DECLARE i&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;INTEGER DEFAULT 1;
&#x9;DECLARE faultResponse&#x9;&#x9;&#x9;&#x9;XML;
&#x9;DECLARE success&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;INTEGER;
&#x9;DECLARE crudVector&#x9;&#x9;&#x9;&#x9;&#x9;VECTOR(/shared/ASAssets/BestPractices_v81/Procedures/TypeDefinitions.crudGenType) DEFAULT VECTOR[(null)];
&#x9;DECLARE crudOutput&#x9;&#x9;&#x9;&#x9;&#x9;/shared/ASAssets/BestPractices_v81/Procedures/TypeDefinitions.generateViewsRow;
&#x9;DECLARE parentPath&#x9;&#x9;&#x9;&#x9;&#x9;VARCHAR(4000);
&#x9;DECLARE resourceName&#x9;&#x9;&#x9;&#x9;VARCHAR(255);
&#x9;DECLARE status&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;VARCHAR;
&#x9;DECLARE resultNode&#x9;&#x9;&#x9;&#x9;&#x9;LONGVARCHAR;
&#x9;DECLARE numStartingFolders&#x9;&#x9;&#x9;INTEGER;
&#x9;DECLARE singleStartingFolderXML&#x9;&#x9;LONGVARCHAR;
&#x9;DECLARE startingFolderExtendedRec /shared/ASAssets/BestPractices_v81/Procedures/TypeDefinitions.startingFolderExtendedType;
&#x9;DECLARE copyPrivilegeEntry&#x9;&#x9;&#x9;LONGVARCHAR;
&#x9;DECLARE updatePrivilegesRecursively&#x9;BIT DEFAULT 1;
&#x9;DECLARE ex&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXCEPTION;
&#x9;DECLARE resourceExists&#x9;&#x9;&#x9;&#x9;BOOLEAN;

&#x9;call /shared/ASAssets/BestPractices_v81/Procedures/xmlGetNodeValue(&apos;debug2&apos;, ConfigParamsXML, debug2);
&#x9;call /shared/ASAssets/BestPractices_v81/Procedures/xmlGetNodeValue(&apos;debug3&apos;, ConfigParamsXML, debug3);
&#x9;call /shared/ASAssets/BestPractices_v81/Procedures/xmlGetNodeValue(&apos;scriptsPath&apos;, ConfigParamsXML, scriptsPath);

&#x9;-- Default the use alias rule to 0 which means do not apply aliases
&#x9;CALL /shared/ASAssets/BestPractices_v81/Procedures/xmlUpdateNodeValue(&apos;useAliasRule&apos;, &apos;0&apos;, ConfigParamsXML, ConfigParamsXML);

&#x9;if (debug2 = &apos;Y&apos;) then
&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug2,&apos;BEGIN: ============================================&apos;);
 &#x9;end if;

&#x9;call /shared/ASAssets/BestPractices_v81/Procedures/getDefaultValuesXML(scriptsPath, defaultValuesXML);
&#x9;call /shared/ASAssets/BestPractices_v81/Procedures/xmlGetNodeValue(&apos;genUniqueIDPath&apos;, defaultValuesXML, defaultValuesRec.genUniqueIDPath);
&#x9;call /shared/ASAssets/BestPractices_v81/Procedures/xmlGetNodeValue(&apos;constantsScriptsPath&apos;, defaultValuesXML, defaultValuesRec.constantsScriptsPath);
&#x9;call /shared/ASAssets/BestPractices_v81/Procedures/xmlGetNodeValue(&apos;typeDefinitionPath&apos;, defaultValuesXML, defaultValuesRec.typeDefinitionPath);

&#x9;set crudOutput.projectFolderName = inProjectFolderName;
&#x9;
&#x9;CALL /shared/ASAssets/Utilities/string/numOccurrences(&apos;&lt;startingFolderExtendedType&gt;&apos;, startingFolderXML, numStartingFolders);
&#x9;WHILE (i &lt;= numStartingFolders) DO
&#x9;&#x9;CALL /shared/ASAssets/Utilities/&quot;xml&quot;/extractXMLOccurrence(startingFolderXML, &apos;startingFolderExtendedType&apos;, i, 0, 0, 0, status, resultNode);
&#x9;&#x9;CALL /shared/ASAssets/BestPractices_v81/Procedures/xmlGetNodeValue(&apos;sourceFolderPath&apos;, resultNode, startingFolderExtendedRec.sourceFolderPath);
&#x9;&#x9;CALL /shared/ASAssets/BestPractices_v81/Procedures/xmlGetNodeValue(&apos;targetFolderPath&apos;, resultNode, startingFolderExtendedRec.targetFolderPath);
&#x9;&#x9;CALL /shared/ASAssets/BestPractices_v81/Procedures/xmlGetNodeValue(&apos;typeDefProcName&apos;, resultNode, startingFolderExtendedRec.typeDefProcName);
&#x9;&#x9;CALL /shared/ASAssets/BestPractices_v81/Procedures/xmlGetNodeValue(&apos;typeDefProcPath&apos;, resultNode, startingFolderExtendedRec.typeDefProcPath);
&#x9;&#x9;SET singleStartingFolderXML = &apos;&lt;startingFolderExtendedType&gt;&apos;||resultNode||&apos;&lt;/startingFolderExtendedType&gt;&apos;;

&#x9;&#x9;-- If the Type Definition path does not exist then create it.
&#x9;&#x9;call /lib/resource/ResourceExists(startingFolderExtendedRec.typeDefProcPath,&apos;CONTAINER&apos;,null,resourceExists);
&#x9;&#x9;if (not resourceExists) then
&#x9;&#x9;&#x9;if (debug2 = &apos;Y&apos;) then
&#x9;&#x9;&#x9;&#x9;CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug2,&apos;create resource=&apos;||startingFolderExtendedRec.typeDefProcPath|| &apos;   typeDefProcName=&apos;||startingFolderExtendedRec.typeDefProcName);
&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;CALL /shared/ASAssets/Utilities/repository/createAllFoldersPrivileges(startingFolderExtendedRec.typeDefProcPath, updatePrivilegesRecursively, copyPrivilegeMode, success, faultResponse); -- Generate all necessary folders
&#x9;&#x9;end if;

&#x9;&#x9;-- Setup the CRUD vector to pass into the &quot;generateCRUD_TypeDefinitions&quot; procedure
&#x9;&#x9;set crudVector[1].crudPath = startingFolderExtendedRec.targetFolderPath;
&#x9;&#x9;set crudVector[1].constantspath = defaultValuesRec.constantsScriptsPath;
&#x9;&#x9;set crudVector[1].typedefprocname = startingFolderExtendedRec.typeDefProcName;
&#x9;&#x9;set crudVector[1].typedefprocpath = startingFolderExtendedRec.typeDefProcPath;

&#x9;&#x9;-- Generate the Type Definitions
&#x9;&#x9;set crudOutput.logicalColumnName = startingFolderExtendedRec.typeDefProcName;
&#x9;&#x9;set crudOutput.logicalColumnType = &apos;PROCEDURE&apos;;
&#x9;&#x9;set crudOutput.containerPath = startingFolderExtendedRec.typeDefProcPath || &apos;/&apos; || startingFolderExtendedRec.typeDefProcName;

&#x9;&#x9;-- Perform a cross-over of sourceFolderPath and TargetFolderPath for the purposes of executing generateDatasourceList
&#x9;&#x9;-- The reason is that generateDatasourceList uses the target folder to generate from instead of the source folder
&#x9;&#x9;CALL /shared/ASAssets/BestPractices_v81/Procedures/xmlUpdateNodeValue(&apos;sourceFolderPath&apos;, startingFolderExtendedRec.targetFolderPath, singleStartingFolderXML, singleStartingFolderXML);
&#x9;&#x9;CALL /shared/ASAssets/BestPractices_v81/Procedures/xmlUpdateNodeValue(&apos;targetFolderPath&apos;, startingFolderExtendedRec.sourceFolderPath, singleStartingFolderXML, singleStartingFolderXML);
&#x9;&#x9;CALL /shared/ASAssets/BestPractices_v81/Procedures/xmlGetNodeValue(&apos;targetFolderPath&apos;, singleStartingFolderXML, startingFolderExtendedRec.targetFolderPath);

&#x9;&#x9;-- Invoke the generate CRUD Type Definitions with a subsequent call to generateDatasourceList to get the list of views in the &quot;targetFolderPath&quot;
&#x9;&#x9;call /shared/ASAssets/BestPractices_v81/Procedures/crudProcedures/generateCRUD_TypeDefinitionsXML(debug3, overwrite, startingFolderExtendedRec.targetFolderPath, singleStartingFolderXML, crudVector, ConfigParamsXML, crudOutput.logicalStatus);
&#x9;&#x9;INSERT INTO result VALUES(crudOutput);

&#x9;&#x9;/*******************************************************
&#x9;&#x9; * Update the privileges for the type definition procedure
&#x9;&#x9; *******************************************************/
&#x9;&#x9;-- Get the parent path for the CRUD path
&#x9;&#x9;call /shared/ASAssets/Utilities/repository/returnFolderNameAndFolderPath(startingFolderExtendedRec.typeDefProcPath, &apos;E&apos;, resourceName, parentPath);

&#x9;&#x9;-- Setup the copyPrivilegeEntry for the main directories that exist under the crudPath
&#x9;&#x9;set copyPrivilegeEntry = 
&#x9;&#x9;&#x9;&apos;  &lt;resource:copyPrivilegeEntry&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;    &lt;resource:srcResource&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;      &lt;resource:path&gt;&apos; || CAST(XMLTEXT(parentPath) AS LONGVARCHAR) || &apos;&lt;/resource:path&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;      &lt;resource:type&gt;CONTAINER&lt;/resource:type&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;    &lt;/resource:srcResource&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;    &lt;resource:dstResource&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;      &lt;resource:path&gt;&apos; || CAST(XMLTEXT(startingFolderExtendedRec.typeDefProcPath) AS LONGVARCHAR) || &apos;&lt;/resource:path&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;      &lt;resource:type&gt;CONTAINER&lt;/resource:type&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;    &lt;/resource:dstResource&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;  &lt;/resource:copyPrivilegeEntry&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&apos;&apos;;

&#x9;&#x9;-- Update the privileges
&#x9;&#x9;if (updatePrivilegesRecursively is not null and copyPrivilegeMode is not null and copyPrivilegeMode = 1) then
&#x9;&#x9;&#x9;call /shared/ASAssets/Utilities/repository/copyResourcesPrivilegesV2(updatePrivilegesRecursively, copyPrivilegeMode, copyPrivilegeEntry, success, faultResponse);
&#x9;&#x9;&#x9;if (faultResponse is not null) then
&#x9;&#x9;&#x9;&#x9;raise ex value CAST(faultResponse as LONGVARCHAR);
&#x9;&#x9;&#x9;end if;
&#x9;&#x9;end if;

&#x9;&#x9;set i = i + 1;
&#x9;END WHILE;
END</attribute>
  <attribute name="creationDate" type="LONG">0</attribute>
  <attribute name="creatorUserDomain" type="STRING"/>
  <attribute name="creatorUserName" type="STRING"/>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1564598987542</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="p:0:Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
  <attribute name="p:2:Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
  <attribute name="p:3:Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
  <attribute name="p:4:Customized" type="STRING">datatype.changed;datatype.changed</attribute>
  <attribute name="references" type="NULL"/>
</metadata>