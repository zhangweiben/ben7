<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:9a66723c-3693-47f1-a1f0-d7811996f9d5 -->
<metadata name="generateLink" path="/shared/ASAssets/BestPractices_v81/Procedures/generateLink" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation>&lt;![CDATA[
&#x9;(c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.

]]&gt;</annotation>
  <parameters>
    <parameter name="resourcePath" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="4000"/>
    </parameter>
    <parameter name="resourceType" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="publishToFolder" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="4000"/>
    </parameter>
    <parameter name="resourceName" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="overwrite" direction="IN" nullable="true">
      <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
    </parameter>
    <parameter name="copyAnnotation" direction="IN" nullable="true">
      <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
    </parameter>
    <parameter name="copyPrivilegeMode" direction="IN" nullable="true">
      <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
    </parameter>
    <parameter name="success" direction="OUT" nullable="true">
      <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
    <privilege group="all" domain="composite" privileges="READ"/>
  </security>
  <dependency target="/lib/resource/ResourceExists" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="path" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
      </element>
      <element name="type" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceType" type="STRING" maxLength="40"/>
      </element>
      <element name="version" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceVersion" type="STRING" maxLength="255"/>
      </element>
      <element name="exists" direction="OUT">
        <datatype type="BOOLEAN"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/copyResourcesPrivilegesV2" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="updatePrivilegesRecursively" direction="IN">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
      <element name="copyPrivilegeMode" direction="IN">
        <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      </element>
      <element name="inCopyPrivilegeEntries" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="success" direction="OUT">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
      <element name="faultResponse" direction="OUT">
        <datatype name="XML" referenceType="XML" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="TYPE" componentName="XML">
          <schemaDatatype>
            <datatype name="XML" type="TREE" refId="257"></datatype>
          </schemaDatatype>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/destroyResource" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="resourcePath" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="4000"/>
      </element>
      <element name="resourceName" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="resourceType" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="success" direction="OUT">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
      <element name="createResponse" direction="OUT">
        <datatype name="XML" referenceType="XML" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="TYPE" componentName="XML">
          <schemaDatatype>
            <datatype name="XML" type="TREE" refId="257"></datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="faultResponse" direction="OUT">
        <datatype name="XML" referenceType="XML" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="TYPE" componentName="XML">
          <schemaDatatype>
            <reference refId="257"/>
          </schemaDatatype>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/lowerLevelProcedures/getBasicResourceXML" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="fullResourcePath" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="4000"/>
      </element>
      <element name="resourceType" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="resourceResponse" direction="OUT">
        <datatype name="XML" referenceType="XML" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="TYPE" componentName="XML">
          <schemaDatatype>
            <datatype name="XML" type="TREE" refId="257"></datatype>
          </schemaDatatype>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/publishResource" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="resourcePath" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
      </element>
      <element name="resourceType" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceType" type="STRING" maxLength="40"/>
      </element>
      <element name="publishFolder" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
      </element>
      <element name="publishName" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceName" type="STRING" maxLength="255"/>
      </element>
      <element name="annotation" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="success" direction="OUT">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
      <element name="publishResponse" direction="OUT">
        <datatype name="XML" referenceType="XML" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="TYPE" componentName="XML">
          <schemaDatatype>
            <datatype name="XML" type="TREE" refId="257"></datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="faultResponse" direction="OUT">
        <datatype name="XML" referenceType="XML" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="TYPE" componentName="XML">
          <schemaDatatype>
            <reference refId="257"/>
          </schemaDatatype>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/returnFolderNameAndFolderPath" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="fullResourcePath" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="4000"/>
      </element>
      <element name="mode" direction="IN">
        <datatype type="STRING" minLength="1" maxLength="1"/>
      </element>
      <element name="folderName" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="folderPath" direction="OUT">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="4000"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/xml/getValueFromXML" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="258">
      <element name="debug" direction="IN">
        <datatype type="STRING" minLength="1" maxLength="1"/>
      </element>
      <element name="namespaces" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="inXpath" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="inXml" direction="IN">
        <datatype name="XML" referenceType="XML" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="TYPE" componentName="XML">
          <schemaDatatype>
            <datatype name="XML" type="TREE" refId="257"></datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="outValue" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <attribute name="Script" type="STRING">/* generateLink:
&#x9;-- Data Virtualization Best Practices --
&#x9;Generate a LINK into the published Composite Database (/services/databases).
 
&#x9;Input:
&#x9;&#x9;&#x9;-- the full path to the resource
&#x9;&#x9;resourcePath

&#x9;&#x9;&#x9;-- the type of resource
&#x9;&#x9;resourceType

&#x9;&#x9;&#x9;-- This is the full path to the published Composite Database or database schema.
&#x9;&#x9;&#x9;-- e.g. Database: &#x9;/services/datbases/MYDB
&#x9;&#x9;&#x9;--&#x9;&#x9; Schema:&#x9;/services/databases/MYDB/MYCAT/MYSCHEMA or /services/databases/MYDB/MYSCHEMA
&#x9;&#x9;&#x9;--&#x9;    Catalog:&#x9;Operation not allowed
&#x9;&#x9;&#x9;-- The Database or schema resource must exist prior to execution.
&#x9;&#x9;&#x9;-- This parameter is required no matter which option below is used.
&#x9;&#x9;publishToFolder&#x9;&#x9;VARCHAR(4000),

&#x9;&#x9;&#x9;-- a generic term for any resource name
&#x9;&#x9;resourceName

&#x9;&#x9;&#x9;-- allows user to decide whether they want to overwrite an existing view or not.
&#x9;&#x9;&#x9;-- 0=false=do not overwrite the composite published database resource.  If the resource exists, raise an exception.
&#x9;&#x9;&#x9;-- 1=true=do overwrite the composite published database resource if it exists.
&#x9;&#x9;overwrite 

&#x9;&#x9;&#x9;-- allows user to decide whether they want to copy annotations or not form both resource and columns.
&#x9;&#x9;&#x9;-- 0=false=do not copy the annotation from the target resource
&#x9;&#x9;&#x9;-- 1=true=do copy the annotation from the target resource
&#x9;&#x9;copyAnnotation 

&#x9;&#x9;&#x9;-- flag indicating the mode in which to copy privileges.  Privileges are only copied from the parent when creating new resources including folders.
&#x9;&#x9;&#x9;-- null (default) - do not set any privileges at all
&#x9;&#x9;&#x9;-- 0 - set mode to &quot;OVERWRITE_APPEND&quot; - merges and does not update privileges for users or groups not mentioned.
&#x9;&#x9;&#x9;-- 1 - set the mode to &quot;SET_EXACTLY&quot; - makes privileges look exactly like those provided in the call.
&#x9;&#x9;copyPrivilegeMode

&#x9;Output:

&#x9;Exceptions:  ex

&#x9;Modified Date:&#x9;Modified By:&#x9;&#x9;CSW Version:&#x9;Reason:
&#x9;05/01/2013&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;5.2.0&#x9;&#x9;&#x9;Created new
&#x9;03/01/2018&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.5&#x9;&#x9;&#x9;Replaced /shared/ASAssets/Utilities/repository/resourceExists with /lib/resource/ResourceExists
&#x9;04/15/2019&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.8&#x9;&#x9;&#x9;B.P. 2019.200: Added scriptsPath for flexibility of the location of the _scripts folder.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   Changed custom functions to explicit paths.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   Modified call from copyResourcesPrivileges to copyResourcesPrivilegesV2 to remove VECTOR usage.

&#x9;(c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCOÂ® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.

*/
PROCEDURE generateLink(
&#x9;-- the full path to the resource
&#x9;IN resourcePath&#x9;&#x9;&#x9;VARCHAR(4000),

&#x9;-- the type of resource
&#x9;IN resourceType&#x9;&#x9;&#x9;VARCHAR,

&#x9;-- This is the full path to the published Composite Database or database schema.
&#x9;-- e.g. Database: &#x9;/services/datbases/MYDB
&#x9;--&#x9;&#x9; Schema:&#x9;/services/databases/MYDB/MYCAT/MYSCHEMA or /services/databases/MYDB/MYSCHEMA
&#x9;--&#x9;    Catalog:&#x9;Operation not allowed
&#x9;-- The Database or schema resource must exist prior to execution.
&#x9;-- This parameter is required no matter which option below is used.
&#x9;IN publishToFolder&#x9;&#x9;VARCHAR(4000),

&#x9;-- a generic term for any resource name
&#x9;IN resourceName&#x9;&#x9;&#x9;VARCHAR,

&#x9;-- allows user to decide whether they want to overwrite an existing view or not.
&#x9;-- 0=false=do not overwrite the composite published database resource.  If the resource exists, raise an exception.
&#x9;-- 1=true=do overwrite the composite published database resource if it exists.
&#x9;IN overwrite&#x9;&#x9;&#x9;INTEGER,

&#x9;-- allows user to decide whether they want to copy annotations or not form both resource and columns.
&#x9;-- 0=false=do not copy the annotation from the target resource
&#x9;-- 1=true=do copy the annotation from the target resource
&#x9;IN copyAnnotation&#x9;&#x9;INTEGER,

&#x9;-- flag indicating the mode in which to copy privileges.  Privileges are only copied from the parent when creating new resources including folders.
&#x9;-- null (default) - do not set any privileges at all
&#x9;-- 0 - set mode to &quot;OVERWRITE_APPEND&quot; - merges and does not update privileges for users or groups not mentioned.
&#x9;-- 1 - set the mode to &quot;SET_EXACTLY&quot; - makes privileges look exactly like those provided in the call.
&#x9;IN copyPrivilegeMode&#x9;INTEGER,

&#x9;OUT success&#x9;&#x9;&#x9;&#x9;INTEGER
)
BEGIN
&#x9;DECLARE moduleName&#x9;&#x9;VARCHAR DEFAULT &apos;generateLink&apos;;
&#x9;DECLARE resourceName_&#x9;VARCHAR DEFAULT resourceName;
&#x9;DECLARE resourceType_&#x9;VARCHAR;
&#x9;DECLARE resourceExists&#x9;BOOLEAN;
&#x9;DECLARE namespaces&#x9;&#x9;VARCHAR(4000) DEFAULT &apos;xmlns:resource=&quot;http://www.compositesw.com/services/system/admin/resource&quot; xmlns:common=&quot;http://www.compositesw.com/services/system/util/common&quot;&apos;;
&#x9;DECLARE xpath&#x9;&#x9;&#x9;VARCHAR(4000);
&#x9;DECLARE xmlOut&#x9;&#x9;&#x9;XML;
&#x9;DECLARE tempPath&#x9;&#x9;VARCHAR(4000);
&#x9;DECLARE annotation&#x9;&#x9;LONGVARCHAR;
&#x9;DECLARE Empty&#x9;&#x9;&#x9;INTEGER DEFAULT 1;
&#x9;DECLARE ex&#x9;&#x9;&#x9;&#x9;EXCEPTION;
&#x9;DECLARE createResponse &#x9;XML;
&#x9;DECLARE faultResponse&#x9;XML;
&#x9;-- flag indicating whether to update the children of the given resources or not.
&#x9;-- &#x9;&#x9;0 (false) or null - only update the given resource and not the children.
&#x9;-- &#x9;&#x9;1 (true) - update children recursively
&#x9;DECLARE updatePrivilegesRecursively&#x9;BIT DEFAULT 0;
&#x9;-- copyPrivilegeEntry - an XML representation of source and destination resources
&#x9;DECLARE copyPrivilegeEntry&#x9;&#x9;LONGVARCHAR;

&#x9;-- Ignore resource types that are folders/containers.
&#x9;if (resourceType != &apos;CONTAINER&apos;) then
&#x9;&#x9;-- If the resource name was not provided then get the name from the resource path.
&#x9;&#x9;if (resourceName_ IS NULL OR LENGTH(&apos;|&apos;||resourceName_||&apos;|&apos;) = 2) then  --Empty
&#x9;&#x9;&#x9;call /shared/ASAssets/Utilities/repository/returnFolderNameAndFolderPath(resourcePath, &apos;E&apos;, resourceName_, tempPath);
&#x9;&#x9;end if;

&#x9;&#x9;CALL /lib/resource/ResourceExists(publishToFolder||&apos;/&apos;||resourceName_, &apos;LINK&apos;, null, resourceExists);
&#x9;&#x9;IF (resourceExists) THEN
&#x9;&#x9;&#x9;-- 0=&quot;FAIL_IF_EXISTS&quot;=do not overwrite the resource.  If the resource exists, raise an exception.
&#x9;&#x9;&#x9;IF (overwrite = 0) THEN
&#x9;&#x9;&#x9;&#x9;raise ex value  moduleName||&apos;: Operation not permitted.  Overwrite=0 (false) and the resource exists: &apos;||publishToFolder||&apos;/&apos;||resourceName_;
&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;-- 1=&quot;SKIP_IF_EXISTS&quot;=skip the resource if it exists and continue processing
&#x9;&#x9;&#x9;IF (overwrite = 1) THEN
&#x9;&#x9;&#x9;&#x9;-- DO NOTHING, JUST KEEP PROCESSING
&#x9;&#x9;&#x9;&#x9;-- NOTE:  If the resource is skipped, it never even makes it into this procedure.
&#x9;&#x9;&#x9;END IF;
&#x9;&#x9;&#x9;-- 2=&quot;OVERWRITE_IF_EXISTS&quot;=do overwrite the resource if it exists.
&#x9;&#x9;&#x9;-- Remove the LINK resource if overwrite is true and the resource path exists.
&#x9;&#x9;&#x9;if (overwrite = 2) then
&#x9;&#x9;&#x9;&#x9;call /shared/ASAssets/Utilities/repository/destroyResource(publishToFolder,resourceName_,&apos;LINK&apos;,success,createResponse,faultResponse);
&#x9;&#x9;&#x9;&#x9;if (faultResponse is not null) then
&#x9;&#x9;&#x9;&#x9;&#x9;raise ex value  moduleName||&apos;: &apos;||CAST(faultResponse AS LONGVARCHAR);
&#x9;&#x9;&#x9;&#x9;end if;
&#x9;&#x9;&#x9;end if;
&#x9;&#x9;end if;

&#x9;&#x9;-- Determine if the annotation should be copied from the source resource to the target resource
&#x9;&#x9;-- If the annotation is not to be copied then set it to emtpy string
&#x9;&#x9;if (copyAnnotation = 0) then
&#x9;&#x9;&#x9;set annotation = &apos;&apos;;
&#x9;&#x9;else
&#x9;&#x9;&#x9;-- Retrieve the resource XML and get the annotation
&#x9;&#x9;&#x9;call /shared/ASAssets/Utilities/repository/lowerLevelProcedures/getBasicResourceXML(resourcePath, resourceType, xmlOut);
&#x9;&#x9;&#x9;-- Extract the annotation from the source resource
&#x9;&#x9;&#x9;set namespaces = &apos;xmlns:resource=&quot;http://www.compositesw.com/services/system/admin/resource&quot; xmlns:common=&quot;http://www.compositesw.com/services/system/util/common&quot;&apos;;
&#x9;&#x9;&#x9;set xpath = &apos;/resource:getResourceResponse/resource:resources/resource:resource/resource:annotation&apos;;
&#x9;&#x9;&#x9;call /shared/ASAssets/Utilities/&quot;xml&quot;/getValueFromXML(&apos;N&apos;, namespaces, xpath, CAST(xmlOut as LONGVARCHAR), annotation);
&#x9;&#x9;end if;

&#x9;&#x9;-- Create the published resource link
&#x9;&#x9;call /shared/ASAssets/Utilities/repository/publishResource(resourcePath, resourceType, publishToFolder, resourceName_, annotation, success, createResponse, faultResponse);
&#x9;&#x9;if (faultResponse is not null) then
&#x9;&#x9;&#x9;raise ex value moduleName||&apos;: &apos;||CAST(faultResponse AS LONGVARCHAR);
&#x9;&#x9;end if;

&#x9;&#x9;-- Update the resource privileges
&#x9;&#x9;if (updatePrivilegesRecursively is not null and copyPrivilegeMode is not null and copyPrivilegeMode = 1) then
&#x9;&#x9;&#x9;-- Retrieve the resource XML and get the annotation
&#x9;&#x9;&#x9;call /shared/ASAssets/Utilities/repository/lowerLevelProcedures/getBasicResourceXML(publishToFolder, null, xmlOut);

&#x9;&#x9;&#x9;-- Extract the annotation
&#x9;&#x9;&#x9;set namespaces = &apos;xmlns:resource=&quot;http://www.compositesw.com/services/system/admin/resource&quot; xmlns:common=&quot;http://www.compositesw.com/services/system/util/common&quot;&apos;;
&#x9;&#x9;&#x9;set xpath = &apos;/resource:getResourceResponse/resource:resources/resource:resource/resource:type&apos;;
&#x9;&#x9;&#x9;call /shared/ASAssets/Utilities/&quot;xml&quot;/getValueFromXML(&apos;N&apos;, namespaces, xpath, CAST(xmlOut as LONGVARCHAR), resourceType_);

&#x9;&#x9;&#x9;-- Create the copyPrivilege XML where the source is the parent folder of the link and the destination is the link resource itself.&#x9;&#x9;
&#x9;&#x9;&#x9;set copyPrivilegeEntry = 
&#x9;&#x9;&#x9;&#x9;&apos;  &lt;resource:copyPrivilegeEntry&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&#x9;&apos;    &lt;resource:srcResource&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&#x9;&apos;      &lt;resource:path&gt;&apos; || CAST(XMLTEXT(publishToFolder) AS LONGVARCHAR) || &apos;&lt;/resource:path&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&#x9;&apos;      &lt;resource:type&gt;&apos; || CAST(XMLTEXT(resourceType_) AS LONGVARCHAR) || &apos;&lt;/resource:type&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&#x9;&apos;    &lt;/resource:srcResource&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&#x9;&apos;    &lt;resource:dstResource&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&#x9;&apos;      &lt;resource:path&gt;&apos; || CAST(XMLTEXT(publishToFolder||&apos;/&apos;||resourceName_) AS LONGVARCHAR) || &apos;&lt;/resource:path&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&#x9;&apos;      &lt;resource:type&gt;LINK&lt;/resource:type&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&#x9;&apos;    &lt;/resource:dstResource&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&#x9;&apos;  &lt;/resource:copyPrivilegeEntry&gt;&apos;||CHR(10)||
&#x9;&#x9;&#x9;&#x9;&apos;&apos;;

&#x9;&#x9;&#x9;-- Invoke the copyResourcesPrivileges procedure
&#x9;&#x9;&#x9;call /shared/ASAssets/Utilities/repository/copyResourcesPrivilegesV2(updatePrivilegesRecursively, copyPrivilegeMode, copyPrivilegeEntry, success, faultResponse);
&#x9;&#x9;&#x9;if (faultResponse is not null) then
&#x9;&#x9;&#x9;&#x9;raise ex value moduleName||&apos;: &apos;||CAST(faultResponse AS LONGVARCHAR);
&#x9;&#x9;&#x9;end if;
&#x9;&#x9;end if;
&#x9;end if;
END</attribute>
  <attribute name="creationDate" type="LONG">0</attribute>
  <attribute name="creatorUserDomain" type="STRING"/>
  <attribute name="creatorUserName" type="STRING"/>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1564599342143</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="NULL"/>
</metadata>